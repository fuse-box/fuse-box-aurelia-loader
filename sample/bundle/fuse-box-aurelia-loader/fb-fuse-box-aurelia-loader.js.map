{"version":3,"sources":["fuse-box-aurelia-hmr-plugin.ts","fuse-box-aurelia-loader.ts"],"names":[],"mappings":"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","file":"","sourcesContent":["import { HmrContext } from 'aurelia-hot-module-reload';\r\nimport { getLogger, Logger } from 'aurelia-logging';\r\nimport { FuseBoxAureliaLoader } from './fuse-box-aurelia-loader';\r\n\r\nconst log: Logger = getLogger('fuse-box-aurelia-hmr-plugin');\r\n\r\ndeclare var FuseBox: any;\r\n\r\nexport class FuseBoxAureliaHmrPlugin {\r\n    private context: HmrContext;\r\n    private reloadPage: boolean;\r\n    private timer: number;\r\n    constructor(loader: FuseBoxAureliaLoader, reloadPage: boolean) {\r\n        this.context = new HmrContext(loader);\r\n        this.reloadPage = reloadPage;\r\n        log.debug('Constructed fuse-box aurelia HMR plugin');\r\n    }\r\n\r\n    public async hmrUpdate(data: any): Promise<boolean> {\r\n\r\n        if (this.reloadPage) {\r\n            clearTimeout(this.timer);\r\n            this.timer = setTimeout(() => {\r\n                document.location.reload();\r\n            }, 250);\r\n        } else {\r\n\r\n            if (data.type === 'js') {\r\n                log.debug('Updating view or view model', data);\r\n\r\n                // first let fusebox change the code\r\n                FuseBox.flush();\r\n                FuseBox.dynamic(data.path, data.content);\r\n                if (FuseBox.mainFile) {\r\n                    FuseBox.import(FuseBox.mainFile);\r\n                }\r\n\r\n                // call Aurelia HMR module\r\n                if (data.path.indexOf('.html') >= 0) {\r\n                    await this.context.handleViewChange(data.path);\r\n                    return true;\r\n                } else {\r\n                    let moduleId = data.path.substr(0, data.path.length - 3); // remove .js\r\n                    await this.context.handleModuleChange(moduleId, {});\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n}\r\n","import { Origin } from 'aurelia-metadata';\r\nimport { Loader, TemplateRegistryEntry } from 'aurelia-loader';\r\nimport { PLATFORM, DOM } from 'aurelia-pal';\r\nimport { getLogger, Logger } from 'aurelia-logging';\r\nimport { Container } from 'aurelia-dependency-injection';\r\nimport { Aurelia } from 'aurelia-framework';\r\nexport type LoaderPlugin = { fetch: (address: string) => Promise<TemplateRegistryEntry> | TemplateRegistryEntry };\r\n\r\nconst log: Logger = getLogger('fuse-box-aurelia-loader');\r\n\r\n\r\n/**\r\n* An implementation of the TemplateLoader interface implemented with text-based loading.\r\n*/\r\nexport class TextTemplateLoader {\r\n  /**\r\n  * Loads a template.\r\n  * @param loader The loader that is requesting the template load.\r\n  * @param entry The TemplateRegistryEntry to load and populate with a template.\r\n  * @return A promise which resolves when the TemplateRegistryEntry is loaded with a template.\r\n  */\r\n  public async loadTemplate(loader: Loader, entry: TemplateRegistryEntry) {\r\n    const text = await loader.loadText(entry.address);\r\n    entry.template = DOM.createTemplateFromMarkup(text);\r\n  }\r\n}\r\n\r\n\r\nexport function ensureOriginOnExports(moduleExports: any, moduleId: string) {\r\n  let target = moduleExports;\r\n  let key;\r\n  let exportedValue;\r\n\r\n  if (target.__useDefault) {\r\n    target = target.default;\r\n  }\r\n\r\n  Origin.set(target, new Origin(moduleId, 'default'));\r\n\r\n  if (typeof target === 'object') {\r\n    // tslint:disable-next-line:forin\r\n    for (key in target) {\r\n      exportedValue = target[key];\r\n\r\n      if (typeof exportedValue === 'function') {\r\n        Origin.set(exportedValue, new Origin(moduleId, key));\r\n      }\r\n    }\r\n  }\r\n\r\n  return moduleExports;\r\n}\r\n\r\n\r\n\r\n\r\n/**\r\n * helper function during development\r\n *\r\n * @param {string} type\r\n * @param {string} title\r\n * @param {*} args\r\n */\r\n\r\ndeclare var FuseBox: any;\r\nfunction debugPrint(type: string, title: string, args: any) {\r\n  if (type === 'error') {\r\n    log.error(title, args);\r\n  }\r\n\r\n  if (type === 'info') {\r\n    log.debug(title, args);\r\n  }\r\n}\r\n\r\n\r\n\r\n/**\r\n* A default implementation of the Loader abstraction which works with SystemJS, RequireJS and Dojo Loader.\r\n*/\r\nexport class FuseBoxAureliaLoader extends Loader {\r\n  /**\r\n  * The name of the underlying native loader plugin used to load text.\r\n  */\r\n  public textPluginName = 'text';\r\n  public loaderPlugins = Object.create(null);\r\n  public moduleRegistry: any;\r\n  public templateRegistry: any;\r\n  public templateLoader: TextTemplateLoader;\r\n  public modulesBeingLoaded = new Map<string, Promise<any>>();\r\n\r\n\r\n  /**\r\n  * Creates an instance of the DefaultLoader.\r\n  */\r\n  constructor() {\r\n    super();\r\n    this.moduleRegistry = Object.create(null);\r\n\r\n    this.useTemplateLoader(new TextTemplateLoader());\r\n\r\n    this.addPlugin('template-registry-entry', {\r\n      'fetch': async (address: any) => {\r\n        debugPrint('info', 'template-registry-entry- fetch =>', address);\r\n        const entry = this.getOrCreateTemplateRegistryEntry(address);\r\n        if (!entry.templateIsLoaded) {\r\n          await this.templateLoader.loadTemplate(this, entry);\r\n        }\r\n        return entry;\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n\r\n\r\n  /**\r\n  * Instructs the loader to use a specific TemplateLoader instance for loading templates\r\n  * @param templateLoader The instance of TemplateLoader to use for loading templates.\r\n  */\r\n  public useTemplateLoader(templateLoader: TextTemplateLoader) {\r\n    this.templateLoader = templateLoader;\r\n  }\r\n\r\n\r\n\r\n\r\n  /**\r\n  * Loads a collection of modules.\r\n  * @param ids The set of module ids to load.\r\n  * @return A Promise for an array of loaded modules.\r\n  */\r\n  public loadAllModules(ids: any[]): Promise<any> {\r\n    debugPrint('info', 'loadAllModules => ', arguments);\r\n    return Promise.all(\r\n      ids.map(id => this.loadModule(id))\r\n    );\r\n  }\r\n\r\n\r\n\r\n  /**\r\n  * Loads a template.\r\n  * @param url The url of the template to load.\r\n  * @return A Promise for a TemplateRegistryEntry containing the template.\r\n  */\r\n  public loadTemplate(url: any): Promise<any> {\r\n    debugPrint('info', 'loadTemplate => ', arguments);\r\n    return this.loadModule(this.applyPluginToUrl(url, 'template-registry-entry'));\r\n  }\r\n\r\n\r\n\r\n  /**\r\n  * Loads a text-based resource.\r\n  * @param url The url of the text file to load.\r\n  * @return A Promise for text content.\r\n  */\r\n  public loadText(url: any): Promise<any> {\r\n    debugPrint('info', 'loadText => ', arguments);\r\n    return Promise.resolve(this.loadWithFusebox(this.findFuseBoxPath(url))).then(textOrModule => {\r\n      if (typeof textOrModule === 'string') {\r\n        return textOrModule;\r\n      }\r\n      if  (textOrModule['default']) {\r\n        return textOrModule['default'];\r\n      } else {\r\n        return '';\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n\r\n\r\n  /**\r\n  * Loads a module.\r\n  * @param id The module id to normalize.\r\n  * @return A Promise for the loaded module.\r\n  */\r\n  public async loadModule(moduleId: any) {\r\n    debugPrint('info', 'loadModule => ', moduleId);\r\n    let existing = this.moduleRegistry[moduleId];\r\n    if (existing) {\r\n      return existing;\r\n    }\r\n\r\n    let beingLoaded = this.modulesBeingLoaded.get(moduleId);\r\n    if (beingLoaded) {\r\n      return beingLoaded;\r\n    }\r\n\r\n    beingLoaded = this._import(moduleId);\r\n    this.modulesBeingLoaded.set(moduleId, beingLoaded);\r\n    const moduleExports = await beingLoaded;\r\n    this.moduleRegistry[moduleId] = ensureOriginOnExports(moduleExports, moduleId);\r\n    this.modulesBeingLoaded.delete(moduleId);\r\n    return moduleExports;\r\n  }\r\n\r\n\r\n\r\n  /**\r\n  * Registers a plugin with the loader.\r\n  * @param pluginName The name of the plugin.\r\n  * @param implementation The plugin implementation.\r\n  */\r\n  public addPlugin(pluginName: any, implementation: any) {\r\n    this.loaderPlugins[pluginName] = implementation;\r\n  }\r\n\r\n\r\n\r\n  /**\r\n  * Normalizes a module id.\r\n  * @param moduleId The module id to normalize.\r\n  * @param relativeTo What the module id should be normalized relative to.\r\n  * @return A promise for the normalized module id.\r\n  */\r\n  public normalize(moduleId: any, relativeTo: any) {\r\n    debugPrint('info', 'normalize =>', [moduleId, relativeTo]);\r\n    return Promise.resolve(moduleId);\r\n  }\r\n\r\n\r\n\r\n  /**\r\n  * Maps a module id to a source.\r\n  * @param id The module id.\r\n  * @param source The source to map the module to.\r\n  */\r\n  public map(/*id: any, source: any*/) {/*nothing*/ };\r\n\r\n\r\n\r\n  public async _import(address: any): Promise<any> {\r\n\r\n    const addressParts = address.split('!');\r\n    const moduleId = addressParts.splice(addressParts.length - 1, 1)[0];\r\n    const loaderPlugin = addressParts.length === 1 ? addressParts[0] : null;\r\n\r\n    if (loaderPlugin) {\r\n      const plugin = this.loaderPlugins[loaderPlugin];\r\n      if (!plugin) {\r\n        throw new Error(`Plugin ${loaderPlugin} is not registered in the loader.`);\r\n      }\r\n      return await plugin.fetch(moduleId);\r\n    }\r\n\r\n    // not loader plugin....\r\n    let module = this.loadWithFusebox(this.findFuseBoxPath(moduleId));\r\n    module = ensureOriginOnExports(module, moduleId);\r\n    this.moduleRegistry[moduleId] = module;\r\n    return Promise.resolve(module);\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n  /**\r\n  * Alters a module id so that it includes a plugin loader.\r\n  * @param url The url of the module to load.\r\n  * @param pluginName The plugin to apply to the module id.\r\n  * @return The plugin-based module id.\r\n  */\r\n  public applyPluginToUrl(url: any, pluginName: any) {\r\n    debugPrint('info', 'applyPluginToUrl =>', arguments);\r\n    return `${pluginName}!${url}`;\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Uses fusebox to load file\r\n   *\r\n   * @param {*} args\r\n   * @returns result\r\n   *\r\n   * @memberOf FuseBoxAureliaLoader\r\n   */\r\n  public loadWithFusebox(args: any): any {\r\n    return FuseBox.import(args);\r\n  }\r\n\r\n\r\n\r\n\r\n  // temp fix for bug\r\n  // todo: remove / test fix released\r\n  public fuseBoxExist(id: any) {\r\n    let result = false;\r\n    try {\r\n      result = FuseBox.exists(id);\r\n    } catch (e) { result = false; }\r\n    return result;\r\n  }\r\n\r\n\r\n\r\n\r\n  /**\r\n   * finds the correct path FuseBox need to use to load module/file\r\n   *\r\n   * @private\r\n   * @param {*} path to look for module/file\r\n   * @returns string\r\n   *\r\n   * @memberOf FuseBoxAureliaLoader\r\n   */\r\n  private findFuseBoxPath(path: any): string {\r\n    let retunValue;\r\n    let modulePart;\r\n    switch (true) {\r\n\r\n      case path.indexOf('/') !== -1:\r\n\r\n        // package path, lets test where it is\r\n        modulePart = path.split('/')[0];\r\n        switch (true) {\r\n          case this.fuseBoxExist(path):\r\n            retunValue = path;\r\n            break;\r\n          case this.fuseBoxExist('~/' + path):\r\n            retunValue = '~/' + path;\r\n            break;\r\n          default:\r\n\r\n            //@arabsight elegant solution in his loader\r\n            let moduleId = Object.keys(FuseBox.packages)\r\n              .find(name => path.startsWith(`${name}/`));\r\n\r\n            if (moduleId) {\r\n              let resources = Object.keys(FuseBox.packages[moduleId].f);\r\n              let resourceName = path.replace(`${moduleId}/`, '');\r\n              let resourceEntry = resources.find(r => r.endsWith(resourceName + '.js'));\r\n              retunValue = `${moduleId}/${resourceEntry}`;\r\n            }\r\n\r\n            if (!this.fuseBoxExist(retunValue)) {\r\n              debugPrint('error', 'findFuseBoxPath() failed to find', arguments);\r\n            }\r\n\r\n        }\r\n        break;\r\n\r\n      default:\r\n\r\n        // default\r\n        switch (true) {\r\n          case this.fuseBoxExist(path):\r\n            retunValue = path;\r\n            break;\r\n          case this.fuseBoxExist('~/' + path):\r\n            retunValue = '~/' + path;\r\n            break;\r\n          default:\r\n            debugPrint('error', 'findFuseBoxPath() failed to find', arguments);\r\n\r\n        }\r\n    }\r\n\r\n    return retunValue;\r\n  }\r\n\r\n\r\n}\r\n\r\n\r\n\r\nPLATFORM.Loader = FuseBoxAureliaLoader;\r\n\r\ndeclare var require: any;\r\n// listen for aurleia started events\r\ndocument.addEventListener('aurelia-started', () => {\r\n\r\n  // if HMR or RELOAD activated\r\n  if ((<any>window).FUSEBOX_AURELIA_LOADER_HMR || (<any>window).FUSEBOX_AURELIA_LOADER_RELOAD) {\r\n\r\n    // get instance\r\n    let container = Container.instance;\r\n    let aurelia = container.get(Aurelia);\r\n\r\n    // require, dont want to require dis unless dev mode\r\n    let FuseBoxAureliaHmrPlugin = require('./fuse-box-aurelia-hmr-plugin').FuseBoxAureliaHmrPlugin;\r\n\r\n    // create and push plugin\r\n    FuseBox.plugins.push(new FuseBoxAureliaHmrPlugin(aurelia.loader as any, (<any>window).FUSEBOX_AURELIA_LOADER_RELOAD));\r\n  }\r\n});\r\n"]}