{"version":3,"sources":["collection.ts","dataSource.ts","selection.ts","utils/arrayUtils.ts","utils/arrayFilter.ts","utils/arraySort.ts","utils/arrayGrouping.ts","grid/attributes/v-changed.ts","grid/v-grid.ts","grid/mainMarkup.ts","grid/mainMarkupHtmlString.ts","grid/mainScrollEvents.ts","grid/rowMarkup.ts","grid/rowScrollEvents.ts","grid/columnMarkup.ts","grid/columnMarkupHelper.ts","grid/htmlCache.ts","grid/htmlHeightWidth.ts","grid/viewSlots.ts","grid/columnBindingContext.ts","grid/rowDataBinder.ts","grid/rowClickHandler.ts","grid/groupingElements.ts","grid/controller.ts","grid/loadingScreen.ts","grid/contextMenu.ts","grid/footer.ts","interfaces.ts","gridConnector.ts","grid/attributes/v-data-handler.ts","grid/attributes/v-drag-drop-col.ts","grid/attributes/v-filter-observer.ts","grid/attributes/v-filter.ts","grid/attributes/v-image.ts","grid/attributes/v-menu.ts","grid/attributes/v-resize-col.ts","grid/attributes/v-selection.ts","grid/attributes/v-sort.ts","grid/v-grid-col.ts","grid/v-grid-contextmenu.ts","grid/v-grid-footer.ts","grid/v-grid-group-element.ts","grid/v-grid-group-row.ts","grid/v-grid-loadingscreen.ts","grid/v-grid-row-repeat.ts","index.ts"],"names":[],"mappings":"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","file":"","sourcesContent":["import { DataSource, EntityInterface } from './interfaces'; // todo,create interface when datasource is stable\r\n\r\nexport class Collection {\r\n  public length: number;\r\n  public groupHeight: number;\r\n  public rowHeight: number;\r\n  private displayedEntities: EntityInterface[];\r\n  private keys: string[];\r\n  private key: string;\r\n  private count: number;\r\n  private datasource: DataSource;\r\n  private ungroupedArray: EntityInterface[];\r\n  private rowHeightArray: any[];\r\n  private rowTopArray: any[];\r\n  private rowHeightTotal: number;\r\n\r\n\r\n\r\n  /**\r\n   * Creates an instance of Collection.\r\n   *\r\n   */\r\n  constructor(datasource: DataSource) {\r\n    this.datasource = datasource;\r\n    this.key = datasource.getKey();\r\n\r\n    // get rowHeight if any\r\n    this.rowHeight = datasource.rowHeight || 25;\r\n\r\n    // get groupHeight if any\r\n    this.groupHeight = datasource.groupHeight || 25;\r\n\r\n    // some defaults\r\n\r\n    // this contains the displayed including groups\r\n    this.displayedEntities = [];\r\n\r\n    // all keys in displayed\r\n    this.keys = [];\r\n\r\n    // count for setting unique keys, using numbers since I use it do keep entities sorted in inserted order\r\n    this.count = 0;\r\n\r\n    // total length of displayed\r\n    this.length = 0;\r\n\r\n    // this is the ungrouped array (all entities of displayed except the groups)\r\n    // this is used when grouping the displayed\r\n    this.ungroupedArray = [];\r\n\r\n    // next 3 is variable for setting the correct top etc when using variable row height\r\n    this.rowHeightArray = [];\r\n    this.rowTopArray = [];\r\n    this.rowHeightTotal = 0;\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Sets data to the collection\r\n   *\r\n   */\r\n  public setData(array: EntityInterface[], ungroupedArray?: EntityInterface[]): void {\r\n\r\n    // clear defaults so they can be set correctly again\r\n    this.displayedEntities = [];\r\n    this.keys = [];\r\n    this.rowHeightArray = [];\r\n    this.rowHeightTotal = 0;\r\n    this.rowTopArray = [];\r\n\r\n\r\n    // need a ungrouped collection, so we can use that forward when needing to sort, regroup etc\r\n    this.ungroupedArray = ungroupedArray || array;\r\n\r\n    // get length;\r\n    this.length = array.length;\r\n\r\n    // create entities\r\n    array.forEach((rowData) => {\r\n\r\n      // if entity does not have key we add one, need this for selection\r\n      if (!rowData[this.key]) {\r\n        this.count++;\r\n        rowData[this.key] = this.count;\r\n      }\r\n\r\n      // if entity is not group we set the keys to our internal key array, if not we set null\r\n      if (!rowData.__group) {\r\n\r\n        // for vairble row height we need to set some defaults the grid can use when scrolling\r\n        this.rowHeightArray.push(this.rowHeight);\r\n        this.rowTopArray.push(this.rowHeightTotal);\r\n        this.rowHeightTotal = this.rowHeightTotal + this.rowHeight;\r\n\r\n        // push the key we need for selection\r\n        this.keys.push(rowData[this.key]);\r\n\r\n      } else {\r\n\r\n        // for vairble row height we need to set some defaults the grid can use when scrolling\r\n        this.rowHeightArray.push(this.groupHeight);\r\n        this.rowTopArray.push(this.rowHeightTotal);\r\n        this.rowHeightTotal = this.rowHeightTotal + this.groupHeight;\r\n\r\n        // set null on groups, we dont want that in selection\r\n        this.keys.push(null);\r\n\r\n      }\r\n\r\n      // we now set the entity data into our displayed entities\r\n      this.displayedEntities.push(rowData);\r\n    });\r\n  }\r\n\r\n\r\n  /**\r\n   * Returns rowheigth state, will be needed by the grid code when using varaible row height\r\n   *\r\n   */\r\n  public getRowHeightState(): any {\r\n    return {\r\n      total: this.rowHeightTotal,\r\n      rows: this.rowHeightArray,\r\n      top: this.rowTopArray\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Returns the ungrouped array of displayed collection\r\n   *\r\n   */\r\n  public getEntities(): EntityInterface[] {\r\n    return this.ungroupedArray;\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Returns array displayed in collection, including groups\r\n   *\r\n   */\r\n  public getCurrentEntities(): EntityInterface[] {\r\n    return this.displayedEntities;\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Returns key of row number passed in\r\n   *\r\n   */\r\n  public getRowKey(row: number): string {\r\n    return this.keys[row];\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Returns all keys in displayed collection\r\n   *\r\n   */\r\n  public getRowKeys(): any[] {\r\n    return this.keys;\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Returns entity of rows in displayed collection\r\n   *\r\n   */\r\n  public getRow(row: number): EntityInterface {\r\n    return this.displayedEntities[row];\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Return row number of entity passed in as param\r\n   *\r\n   */\r\n  public getRowFromEntity(entity: EntityInterface): number {\r\n    return this.displayedEntities.indexOf(entity);\r\n  }\r\n\r\n}\r\n","import { Selection } from './selection';\r\nimport { Collection } from './collection';\r\nimport { ArrayUtils } from './utils/arrayUtils';\r\nimport {\r\n  EntityInterface,\r\n  DatasourceConfigInterface,\r\n  SortObjectInterface,\r\n  FilterObjectInterface,\r\n  GroupingObjInterface,\r\n  DatasourceInterface\r\n} from './interfaces';\r\n\r\nexport class DataSource implements DatasourceInterface {\r\n  public entity: EntityInterface;\r\n  public groupHeight: number;\r\n  public rowHeight: number;\r\n  private selection: Selection;\r\n  private key: string;\r\n  private arrayUtils: ArrayUtils;\r\n  private mainArray: EntityInterface[];\r\n  private config: DatasourceConfigInterface;\r\n  private eventIdCount: number;\r\n  private eventCallBacks: Function[];\r\n  private collection: Collection;\r\n  private selectionEventID: number;\r\n\r\n\r\n\r\n  /**\r\n   * Creates an instance of DataSource.\r\n   *\r\n   */\r\n  constructor(selection: Selection, config?: DatasourceConfigInterface) {\r\n\r\n    // Set selection or create new if none is passed in\r\n    this.selection = selection || new Selection('single');\r\n    this.selectionEventID = this.selection.addEventListener(this.selectionEventCallback.bind(this));\r\n\r\n    // overide selection get row/key from row\r\n    // why not in selection ? because I might need rowbased selection only\r\n    this.selection.overrideGetRowKey(this.getRowKey.bind(this));\r\n    this.selection.overrideGetRowKeys(this.getRowKeys.bind(this));\r\n\r\n    // array helper helps with grouping/sorting and filtering\r\n    this.arrayUtils = new ArrayUtils();\r\n\r\n    // key if you dont want grid to add\r\n    this.key = null;\r\n\r\n    // main array fill contain all the data set to grid\r\n    this.mainArray = null;\r\n\r\n    // configuration\r\n    this.config = config;\r\n    if (config) {\r\n      this.key = config.key || '__avgKey';\r\n      this.rowHeight = config.rowHeight || 25;\r\n      this.groupHeight = config.groupHeight || 25;\r\n    } else {\r\n      this.key = '__avgKey';\r\n    }\r\n\r\n\r\n    // todo, give option to override ArrayUtils\r\n    // or and option to set params you pass into array helper to override some of its functionality\r\n    // events, gridConnector will add event lister to datasource set to it\r\n    this.eventIdCount = -1;\r\n    this.eventCallBacks = [];\r\n\r\n    // current entity, this is what users need to link inputs etc too\r\n    this.entity = null;\r\n\r\n    // create a collection\r\n    this.collection = new Collection(this);\r\n\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Returns the current selection class\r\n   *\r\n   */\r\n  public getSelection(): Selection {\r\n    return this.selection;\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Returns keys name used for selection/added to each entity\r\n   *\r\n   */\r\n  public getKey(): string {\r\n    return this.key;\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * returns the numbers of rows in displayed view (inludes groupings etc)\r\n   *\r\n   */\r\n  public length(): number {\r\n    return this.collection.length;\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Sends event string to all listeners\r\n   *\r\n   */\r\n  public triggerEvent(event: string): void {\r\n    // call all event listeners\r\n    this.eventCallBacks.forEach((FN, i) => {\r\n      if (FN !== null) {\r\n        const alive = FN(event);\r\n        if (!alive) {\r\n          // todo: remove these after\r\n          this.eventCallBacks[i] = null;\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Adds functions to callback array, this will be called when collection/selection event happens\r\n   *\r\n   */\r\n  public addEventListener(callback: Function): number {\r\n\r\n    // add key\r\n    this.eventIdCount++;\r\n\r\n    // add to callback queue\r\n    this.eventCallBacks.push(callback);\r\n\r\n    // return ID, so they can remove listnener\r\n    return this.eventIdCount;\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * removes event listener\r\n   *\r\n   */\r\n  public removeEventListener(id: number): void {\r\n    // remove listtener from id\r\n    this.eventCallBacks.splice(id, 1);\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Replaces internal collection and clear internal selection/sorting and grouping\r\n   *\r\n   */\r\n  public setArray(array: EntityInterface[]): void {\r\n    // new collection\r\n    this.collection = new Collection(this);\r\n\r\n    // clear stuff set in ArrayUtils\r\n    this.selection.reset();\r\n    this.arrayUtils.resetGrouping();\r\n\r\n    // use the default key as sort\r\n    // this way first query returns result in same order as put into the datasource\r\n    this.arrayUtils.resetSort(this.key);\r\n\r\n    // reset current entity\r\n    this.entity = null;\r\n\r\n    // set data to collection\r\n    this.collection.setData(array);\r\n\r\n    // set our main collection, we will use this for later\r\n    this.mainArray = this.collection.getEntities();\r\n    this.triggerEvent('collection_changed');\r\n\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Adds to internal/displayed collection and reruns sort and grouping\r\n   *\r\n   */\r\n  public push(array: EntityInterface[]): void {\r\n    if (Array.isArray(array)) {\r\n\r\n      // get current grouping and collection\r\n      const grouping = this.arrayUtils.getGrouping();\r\n      let collection = this.collection.getEntities();\r\n\r\n      // add to the collection, set that data back so keys get added\r\n      collection = collection.concat(array);\r\n      this.collection.setData(collection);\r\n\r\n      //  get main data for later (when filtering etc)\r\n      this.mainArray = this.collection.getEntities();\r\n\r\n      // run orderby, and regroup if there is any\r\n      this.arrayUtils.runOrderbyOn(this.collection.getEntities());\r\n      const untouchedgrouped = this.collection.getEntities();\r\n      if (grouping.length > 0) {\r\n        const groupedArray = this.arrayUtils.group(untouchedgrouped, grouping, true);\r\n        this.collection.setData(groupedArray, untouchedgrouped);\r\n      }\r\n\r\n      // trigger grid so it updated view\r\n      this.triggerEvent('collection_updated');\r\n    }\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Replace collection if array is passed in and rerun sort and groupings\r\n   * If no data is added it just reruns sorting and grouping\r\n   * TODO: do we want to also rerun filter if any?\r\n   *\r\n   */\r\n  public refresh(data?: any): void {\r\n    if (data) {\r\n      // if data create new collection and set data to it\r\n      this.collection = new Collection(this);\r\n      this.collection.setData(data);\r\n\r\n      //  get main data for later (when filtering etc), then clear current entity\r\n      this.mainArray = this.collection.getEntities();\r\n      this.entity = null;\r\n    }\r\n\r\n    // get current grouping, run orderby, if grouping we also run that\r\n    const grouping = this.arrayUtils.getGrouping();\r\n    this.arrayUtils.runOrderbyOn(this.collection.getEntities());\r\n    if (grouping.length > 0) {\r\n      const unGroupedArray = this.collection.getEntities();\r\n      const groupedArray = this.arrayUtils.group(unGroupedArray, grouping, true);\r\n      this.collection.setData(groupedArray, unGroupedArray);\r\n    }\r\n\r\n    // trigger grid so it updates view\r\n    this.triggerEvent('collection_updated');\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Sets row passed in as current entity\r\n   *\r\n   */\r\n  public select(row: number): void {\r\n    // get row and set as current entity \"entity\" of datasource\r\n    this.entity = this.collection.getRow(row);\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Queries all entities with paramas passed in\r\n   *\r\n   */\r\n  public query(options: FilterObjectInterface[]): void {\r\n\r\n    if (options) {\r\n      // query data (using main here, so we query all data set)\r\n      const newArray = this.arrayUtils.query(this.mainArray, options);\r\n\r\n      // set data to our collection\r\n      this.collection.setData(newArray);\r\n\r\n    } else {\r\n      // no query passed in we display all\r\n      this.collection.setData(this.mainArray);\r\n    }\r\n\r\n    // run orderby (that will fix grouping if set)\r\n    this.orderBy(null, true);\r\n\r\n    // trigger event so grid updates\r\n    this.triggerEvent('collection_filtered');\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Sorts the array with params passed in\r\n   *\r\n   */\r\n  public orderBy(attribute: string | SortObjectInterface, addToCurrentSort?: boolean): void {\r\n\r\n    // get collection (cant use main,,, might be filtered)\r\n    const collection = this.collection.getEntities();\r\n\r\n    // use array helper to sort (takes care of the grouping if set)\r\n    const result = this.arrayUtils.orderBy(collection, attribute, addToCurrentSort);\r\n\r\n    // set data, need both incase we have grouping\r\n    this.collection.setData(result.fixed, result.full);\r\n\r\n    // trigger event to update grid\r\n    this.triggerEvent('collection_sorted');\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * returns current orderBy used\r\n   *\r\n   */\r\n  public getCurrentOrderBy(): SortObjectInterface[] {\r\n    return this.arrayUtils.getOrderBy();\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Returns current filter used\r\n   *\r\n   */\r\n  public getCurrentFilter(): FilterObjectInterface[] {\r\n    return this.arrayUtils.getCurrentFilter();\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Returns current element of row passed in\r\n   *\r\n   */\r\n  public getElement(row: number): EntityInterface {\r\n    if (row === undefined || row === null) {\r\n      throw new Error('row missing');\r\n    } else {\r\n      return this.collection.getRow(row);\r\n    }\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Groups the collection with params passed in\r\n   *\r\n   */\r\n  public group(grouping: GroupingObjInterface[], keepExpanded?: boolean): void {\r\n\r\n    // resets current sortclass\r\n    this.arrayUtils.resetSort();\r\n\r\n    // set new sort by grouping\r\n    grouping.forEach((group: GroupingObjInterface) => {\r\n      this.arrayUtils.setOrderBy(group.field, true);\r\n    });\r\n\r\n    // run sort on displayedCollection\r\n    this.arrayUtils.runOrderbyOn(this.collection.getEntities());\r\n\r\n    // get ungrouped collection\r\n    const ungroupedArray = this.collection.getEntities();\r\n\r\n    // group array\r\n    const groupedArray = this.arrayUtils.group(ungroupedArray, grouping, keepExpanded);\r\n\r\n    // set grouped array to collection\r\n    this.collection.setData(groupedArray, ungroupedArray);\r\n\r\n    // trigger grid to updated view\r\n    this.triggerEvent('collection_grouped');\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Collapses all groups or just ID passes in\r\n   *\r\n   */\r\n  public groupCollapse(id: string): void {\r\n    const groupedArray = this.arrayUtils.groupCollapse(id);\r\n    const ungroupedArray = this.collection.getEntities();\r\n    this.collection.setData(groupedArray, ungroupedArray);\r\n    if (id) {\r\n      this.triggerEvent('collection_collapsed');\r\n    } else {\r\n      this.triggerEvent('collection_collapsed_all');\r\n    }\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Expands all groups or just ID passed in\r\n   *\r\n   */\r\n  public groupExpand(id: string): void {\r\n    const groupedArray = this.arrayUtils.groupExpand(id);\r\n    const ungroupedArray = this.collection.getEntities();\r\n    this.collection.setData(groupedArray, ungroupedArray);\r\n    if (id) {\r\n      this.triggerEvent('collection_expanded');\r\n    } else {\r\n      this.triggerEvent('collection_expanded_all');\r\n    }\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Returns grouping used\r\n   *\r\n   */\r\n  public getGrouping(): GroupingObjInterface[] {\r\n    return this.arrayUtils.getGrouping();\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Adds blank row to top of diaplayed colelction and updates grid\r\n   * Todo: custom key will prb break this... need more testing\r\n   *\r\n   */\r\n  public addBlankRow(): void {\r\n\r\n    // create empty object\r\n    const newElement = ({} as EntityInterface);\r\n\r\n    // add to our main array\r\n    this.mainArray.unshift(newElement);\r\n\r\n    // get the ungrouped array in collection\r\n    const collectionUngrouped = this.collection.getEntities();\r\n\r\n    // get displayed collection\r\n    const displayedCollection = this.collection.getCurrentEntities();\r\n\r\n    // if it does not exsist in old array we skip, else we add\r\n    const index = collectionUngrouped.indexOf(newElement);\r\n    if (index === -1) {\r\n      collectionUngrouped.unshift(newElement);\r\n    }\r\n\r\n    // add to displayed collection\r\n    displayedCollection.unshift(newElement);\r\n\r\n    // set back data to collection\r\n    this.collection.setData(displayedCollection, collectionUngrouped);\r\n\r\n    // set blank as current entity\r\n    this.entity = newElement;\r\n\r\n    // trigger grid to update\r\n    this.triggerEvent('collection_filtered');\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Added new enity to top of grid, no sorting or grouping after\r\n   *\r\n   */\r\n  public unshift(data: any): void {\r\n    if (data) {\r\n\r\n      // add to main array\r\n      this.mainArray.unshift(data);\r\n\r\n      // get the ungrouped array in collection\r\n      const displayedCollection = this.collection.getEntities();\r\n\r\n      // get displayed collection\r\n      const ungroupedCollection = this.collection.getCurrentEntities();\r\n\r\n      // if it does not exsist in old array we skip, else we add\r\n      const index = displayedCollection.indexOf(data);\r\n      if (index === -1) {\r\n        displayedCollection.unshift(data);\r\n      }\r\n\r\n      // add to displayed collection\r\n      ungroupedCollection.unshift(data);\r\n\r\n      // set back data to collection\r\n      this.collection.setData(ungroupedCollection, displayedCollection);\r\n\r\n      // set as current entity\r\n      this.entity = data;\r\n\r\n      // trigger grid update\r\n      this.triggerEvent('collection_filtered');\r\n    }\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Removed rows from displayed collection and returns removed\r\n   *\r\n   */\r\n  public remove(rows?: any[]): any[] {\r\n    const keysToDelete = new Set();\r\n    const returnArray = [];\r\n    if (Array.isArray(rows)) {\r\n      rows.forEach((row) => {\r\n        keysToDelete.add(this.getRowKey(row));\r\n      });\r\n    } else {\r\n      if (this.entity && Number.isInteger(rows)) {\r\n        keysToDelete.add(this.getRowKey(rows));\r\n      }\r\n    }\r\n\r\n    if (keysToDelete.size > 0) {\r\n      const oldArray = this.collection.getEntities();\r\n      for (let i = 0; i < oldArray.length; i++) {\r\n        if (keysToDelete.has(oldArray[i][this.key]) === true) {\r\n          returnArray.push(oldArray.splice(i, 1)[0]);\r\n          i--;\r\n        }\r\n      }\r\n      this.collection.setData(oldArray);\r\n      this.refresh();\r\n    }\r\n\r\n    return returnArray;\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Returns status(lengths) of collection/selection\r\n   *\r\n   */\r\n  public getCollectionStatus(): any {\r\n    const status: any = {};\r\n    status.collectionLength = this.mainArray ? this.mainArray.length : 0;\r\n    status.filteredCollectionLength = this.collection.getEntities().length;\r\n    status.selectionLength = this.selection.getLength();\r\n    return status;\r\n  }\r\n\r\n\r\n  /**\r\n   * Sets local compare options to use with sorting\r\n   * http://stackoverflow.com/questions/3191664/list-of-all-locales-and-their-short-codes\r\n   *\r\n   */\r\n  public setLocaleCompare(code: string, options?: any): void {\r\n    this.arrayUtils.setLocaleCompare(code, options);\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Returns row heigth state for vaiable row height, will be called by gridConnector\r\n   *\r\n   */\r\n  public getRowHeightState(): any {\r\n    return this.collection.getRowHeightState();\r\n  }\r\n\r\n  /**\r\n   * Returns key of row passed in from displayedCollection\r\n   *\r\n   */\r\n  private getRowKey(row: number): string {\r\n    // if collection, then get row key\r\n    if (this.collection) {\r\n      return this.collection.getRowKey(row);\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Returns all keys of collection\r\n   *\r\n   */\r\n  private getRowKeys(): any[] {\r\n    // if collection then get the keys\r\n    if (this.collection) {\r\n      return this.collection.getRowKeys();\r\n    } else {\r\n      return [];\r\n    }\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Calls the triggere event with event from selection\r\n   *\r\n   */\r\n  private selectionEventCallback(e: any): boolean {\r\n    this.triggerEvent(e);\r\n    return true;\r\n  }\r\n}\r\n","import { SelectionInterface } from './interfaces';\r\n\r\nexport class Selection implements SelectionInterface {\r\n  private mode: string;\r\n  private selectedRows: number;\r\n  private selection: Set<number>;\r\n  private eventIdCount: number;\r\n  private eventCallBacks: Function[];\r\n\r\n\r\n\r\n  constructor(mode: string) {\r\n    this.mode = mode;\r\n    this.selectedRows = 0;\r\n    this.eventIdCount = -1;\r\n    this.eventCallBacks = [];\r\n    this.selection = new Set([]);\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Triggers event and calls listeners\r\n   * \r\n   */\r\n  public triggerEvent(event: string): void {\r\n    // call all event listeners\r\n    this.eventCallBacks.forEach((FN, i) => {\r\n      if (FN !== null) {\r\n         let alive = FN(event);\r\n         if (!alive) {\r\n           // todo: remove these after\r\n           this.eventCallBacks[i] = null;\r\n         }\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * add event to the selection changes\r\n   * \r\n   */\r\n  public addEventListener(callback: Function): number {\r\n    // add key\r\n    this.eventIdCount++;\r\n    // add to callback queue\r\n    this.eventCallBacks.push(callback);\r\n    // return ID, so they can remove listnener\r\n    return this.eventIdCount;\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * returns selection size/length\r\n   * \r\n   */\r\n  public getLength(): number {\r\n    return this.selection.size;\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * returns selection ode\r\n   * \r\n   */\r\n  public getMode(): string {\r\n    return this.mode;\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * returns key of row\r\n   * overridden by default dataosurce to return keys from collection\r\n   * make private?\r\n   * \r\n   */\r\n  public getRowKey(row: number): number {\r\n    return row;\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * retunrs all keys in selection\r\n   * overridden by default datasource to return its collection keys\r\n   * make private?\r\n   * \r\n   */\r\n  public getRowKeys(): any[] {\r\n    return [];\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * function to override\r\n   * \r\n   */\r\n  public overrideGetRowKey(fn: (row: number) => number): void {\r\n    this.getRowKey = fn;\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * function to override getRowKeys\r\n   * \r\n   */\r\n  public overrideGetRowKeys(fn: () => any[]): void {\r\n    this.getRowKeys = fn;\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * tells if row is selected true/false\r\n   * \r\n   */\r\n  public isSelected(row: number): boolean {\r\n    let result = false;\r\n    if (this.selectedRows > 0) {\r\n      result = this.selection.has(this.getRowKey(row));\r\n    }\r\n    return result;\r\n\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * deselcts all rows\r\n   * \r\n   */\r\n  public deSelectAll(): void {\r\n    this.selection.clear();\r\n    this.selectedRows = this.selection.size;\r\n    this.triggerEvent('selection_changed');\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * deselct row passed in\r\n   * \r\n   */\r\n  public deSelect(row: number): void {\r\n    this.selection.delete(this.getRowKey(row));\r\n    this.selectedRows = this.selection.size;\r\n    this.triggerEvent('selection_changed');\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * select 1 or adds to selection\r\n   * \r\n   */\r\n  public select(row: number, add?: boolean): void {\r\n    switch (this.mode) {\r\n      case 'none':\r\n      case null:\r\n      case undefined:\r\n        break;\r\n      case 'single':\r\n        this.selection.clear();\r\n        this.selection.add(this.getRowKey(row));\r\n        this.selectedRows = this.selection.size;\r\n        break;\r\n      case 'multiple':\r\n        if (!add) {\r\n          this.selection.clear();\r\n          this.selection.add(this.getRowKey(row));\r\n          this.selectedRows = this.selection.size;\r\n        } else {\r\n          this.selection.add(this.getRowKey(row));\r\n          this.selectedRows = this.selection.size;\r\n        }\r\n        break;\r\n      default:\r\n      // nothing-> warn ?\r\n    }\r\n    this.triggerEvent('selection_changed');\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * selects range of rows\r\n   * \r\n   */\r\n  public selectRange(start: number, end: number): void {\r\n    if (this.mode === 'multiple') {\r\n      this.selection.clear();\r\n      for (let i = start; i < end + 1; i++) {\r\n        this.selection.add(this.getRowKey(i));\r\n      }\r\n      this.selectedRows = this.selection.size;\r\n      this.triggerEvent('selection_changed');\r\n    }\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * retuns selected rows\r\n   * \r\n   */\r\n  public getSelectedRows(): number[] {\r\n    let array: number[] = [];\r\n    let keys = this.getRowKeys();\r\n    if (this.selectedRows > 0) {\r\n      keys.forEach((key, index) => {\r\n        if (this.selection.has(key) === true) {\r\n          array.push(index);\r\n        }\r\n      });\r\n    }\r\n    return array;\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * sets new selection/selected rows\r\n   * do we want to have a add params here\r\n   * \r\n   */\r\n  public setSelectedRows(newRows: number[]): void {\r\n    if (this.selectedRows > 0) {\r\n      this.selection.clear();\r\n    }\r\n    // tslint:disable-next-line:prefer-for-of\r\n    for (let i = 0; i < newRows.length; i++) {\r\n      this.selection.add(this.getRowKey(newRows[i]));\r\n    }\r\n    this.selectedRows = this.selection.size;\r\n    this.triggerEvent('selection_changed');\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * resets selection to 0\r\n   * its pretty much same as deselect all, remove one ?\r\n   * \r\n   */\r\n  public reset(): void {\r\n    if (this.selectedRows > 0) {\r\n      this.selection.clear();\r\n    }\r\n    this.selectedRows = this.selection.size;\r\n    this.triggerEvent('selection_changed');\r\n  }\r\n\r\n\r\n\r\n}\r\n","import { ArrayFilter } from './arrayFilter';\r\nimport { ArraySort } from './arraySort';\r\nimport { ArrayGrouping } from './arrayGrouping';\r\nimport { SortObjectInterface, FilterObjectInterface, EntityInterface, GroupingObjInterface } from '../interfaces';\r\n\r\n/**\r\n * Helper class for calling internal sort, filter and grouping classes\r\n *\r\n */\r\nexport class ArrayUtils {\r\n  public arrayFilter: ArrayFilter;\r\n  public arraySort: ArraySort;\r\n  public arrayGrouping: ArrayGrouping;\r\n\r\n  constructor() {\r\n    this.arrayFilter = new ArrayFilter();\r\n    this.arraySort = new ArraySort();\r\n    this.arrayGrouping = new ArrayGrouping();\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * orderby that also fixes grouping if set before\r\n   *\r\n   */\r\n  public orderBy(\r\n    collection: EntityInterface[],\r\n    attribute: string | SortObjectInterface,\r\n    addToCurrentSort?: boolean\r\n  ): { fixed: EntityInterface[], full: EntityInterface[] } {\r\n\r\n    const groupingFields = this.getGrouping().map((data: GroupingObjInterface) => data.field);\r\n    const grouping = this.getGrouping();\r\n    let result: { fixed: EntityInterface[], full: EntityInterface[] } = {\r\n      fixed: null,\r\n      full: null\r\n    };\r\n\r\n    if (groupingFields.length > 0) {\r\n\r\n      // get last sort\r\n      const lastSort = this.getOrderBy();\r\n\r\n      // reset sort\r\n      this.resetSort();\r\n\r\n      // loop\r\n      let exist = false;\r\n\r\n      // if not adding, create new sort array\r\n      const newSort: SortObjectInterface[] = [];\r\n\r\n      let count = 0;\r\n      // loop existing\r\n      lastSort.forEach((sort: SortObjectInterface) => {\r\n        count++;\r\n        if (groupingFields.indexOf(sort.attribute) !== -1 || addToCurrentSort) {\r\n          newSort.push(sort);\r\n          if (sort.attribute === attribute) {\r\n            sort.asc = sort.asc === true ? false : true;\r\n            sort.no = count;\r\n            exist = true;\r\n          }\r\n        } else {\r\n          if (sort.attribute === attribute) {\r\n            sort.asc = sort.asc === true ? false : true;\r\n            sort.no = count;\r\n            exist = true;\r\n            newSort.push(sort);\r\n          }\r\n        }\r\n\r\n      });\r\n\r\n      // set last sort\r\n      this.setLastSort(newSort);\r\n\r\n      // if it does not exist, then add\r\n      if (!exist && attribute) {\r\n        this.setOrderBy(attribute, true);\r\n      }\r\n\r\n      // run orderby\r\n      this.runOrderbyOn(collection);\r\n\r\n      // regroup\r\n      const groupedArray = this.group(collection, grouping, true);\r\n      // set result\r\n      result = {\r\n        fixed: groupedArray,\r\n        full: collection\r\n      };\r\n    } else {\r\n      if (!attribute) {\r\n        // no attribute, just reset last sort...\r\n        const lastSort = this.getOrderBy();\r\n        this.resetSort();\r\n        this.setLastSort(lastSort);\r\n        this.runOrderbyOn(collection);\r\n        result = {\r\n          fixed: collection,\r\n          full: collection\r\n        };\r\n      } else {\r\n        this.setOrderBy(attribute, addToCurrentSort);\r\n        this.runOrderbyOn(collection);\r\n        result = {\r\n          fixed: collection,\r\n          full: collection\r\n        };\r\n      }\r\n\r\n    }\r\n    return result;\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * calls the group class group function\r\n   *\r\n   */\r\n  public group(array: EntityInterface[], grouping: GroupingObjInterface[], keepExpanded: boolean): EntityInterface[] {\r\n    return this.arrayGrouping.group(array, grouping, keepExpanded);\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * returns current grouping\r\n   *\r\n   */\r\n  public getGrouping(): GroupingObjInterface[] {\r\n    return this.arrayGrouping.getGrouping();\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * collapses 1 or all\r\n   *\r\n   */\r\n  public groupCollapse(id: string): EntityInterface[] {\r\n    return this.arrayGrouping.collapse(id);\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * expands 1 or all\r\n   *\r\n   */\r\n  public groupExpand(id: string): EntityInterface[] {\r\n    return this.arrayGrouping.expand(id);\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * return current orderby used/set\r\n   *\r\n   */\r\n  public getOrderBy(): SortObjectInterface[] {\r\n    return this.arraySort.getOrderBy();\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * sets last sort used\r\n   *\r\n   */\r\n  public setLastSort(array: SortObjectInterface[]): void {\r\n      this.arraySort.setLastSort(array);\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * sets new orderby that will be next time\r\n   *\r\n   */\r\n  public setOrderBy(attribute: string | SortObjectInterface, addToCurrentSort?: boolean): void {\r\n    this.arraySort.setOrderBy(attribute, addToCurrentSort);\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * reuns orderby on array passed in\r\n   *\r\n   */\r\n  public runOrderbyOn(array: EntityInterface[]): void {\r\n    this.arraySort.runOrderbyOn(array);\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * sesets sorting to nothing\r\n   *\r\n   */\r\n  public resetSort(defaultSortAttribute?: string): void {\r\n    this.arraySort.reset(defaultSortAttribute);\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * resets grouping\r\n   *\r\n   */\r\n  public resetGrouping(): void {\r\n    this.arrayGrouping.reset();\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * returns current filter\r\n   *\r\n   */\r\n  public getCurrentFilter(): FilterObjectInterface[] {\r\n    return this.arrayFilter.getLastFilter();\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * queries and returns new array\r\n   *\r\n   */\r\n  public query(array: EntityInterface[], params: FilterObjectInterface[]): EntityInterface[] {\r\n    return this.arrayFilter.runQueryOn(array, params);\r\n  }\r\n\r\n\r\n  /**\r\n   * sets local compare needed to sort language like german and norwegian\r\n   * Needed since you might need local sorting on browser/os set to english local\r\n   *\r\n   */\r\n  public setLocaleCompare(code: string, options?: any): void {\r\n    this.arraySort.setLocaleCompare(code, options);\r\n  }\r\n\r\n\r\n\r\n}\r\n","import { FilterObjectInterface, EntityInterface } from '../interfaces'; // todo make a interface\r\n\r\n\r\n  /**\r\n   * filters the array\r\n   * \r\n   */\r\nexport class ArrayFilter {\r\n  private lastFilter: FilterObjectInterface[];\r\n  private filterOperators: any = {\r\n      '=': 1,   // equal\r\n      '<=': 2,  // less than or equal to\r\n      '>=': 3,  // greater than or equal to\r\n      '<': 4,   // less than\r\n      '>': 5,   // greater than\r\n      '*': 6,   // contains\r\n      '!=': 7,  // not equal to\r\n      '!*': 8,  // does not contain\r\n      '*=': 9,  // begin with\r\n      '=*': 10  // end with\r\n    };\r\n\r\n\r\n\r\n  constructor() {\r\n    this.lastFilter = [];\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * gets operator number from class\r\n   * \r\n   */\r\n  public getOperatorNo(val: string): number {\r\n    return this.filterOperators[val];\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * returns last filter set\r\n   * \r\n   */\r\n  public getLastFilter(): FilterObjectInterface[] {\r\n    return this.lastFilter;\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * runs query on the array\r\n   * \r\n   */\r\n  public runQueryOn(objArray: EntityInterface[], ObjFilter: FilterObjectInterface[]) {\r\n\r\n    this.lastFilter = ObjFilter;\r\n\r\n    let resultArray = objArray.filter((data) => {\r\n\r\n      // lets have true as default, so all that should not be there we set false..\r\n      let result = true;\r\n      ObjFilter.forEach((x: FilterObjectInterface) => {\r\n\r\n        // vars\r\n        let rowValue: any;\r\n        let filterValue: any;\r\n        let filterOperator = this.getOperatorNo(x.operator);\r\n        let newFilterOperator: any;\r\n\r\n        // helper for boolean\r\n        let typeBool: { true: boolean, false: boolean, [key: string]: any } = {\r\n          true: true,\r\n          false: false\r\n        };\r\n\r\n        // set defult type\r\n        let type: string;\r\n        try {\r\n          type = typeof (data[x.attribute]);\r\n        } catch (e) {\r\n          type = 'string';\r\n        }\r\n\r\n        // lets set som defaults\r\n        switch (type) {\r\n          case 'number':\r\n            rowValue = data[x.attribute];\r\n            filterValue = Number(x.value);\r\n            filterOperator = filterOperator || 1;\r\n            if (filterOperator === 6) {\r\n              filterOperator = 1;\r\n            }\r\n            break;\r\n          case 'string':\r\n            rowValue = data[x.attribute].toLowerCase();\r\n            filterValue = x.value.toLowerCase();\r\n            filterOperator = filterOperator || 9;\r\n            newFilterOperator = filterOperator;\r\n\r\n            // todo: add more options here and replace with a switch.., also\r\n\r\n            // if filter operator is BEGIN WITH\r\n            if (x.value.charAt(0) === '*' && filterOperator === 9) {\r\n              newFilterOperator = 6;\r\n              filterValue = filterValue.substr(1, filterValue.length);\r\n            }\r\n\r\n            // if filter operator is EQUAL TO\r\n            // wildcard first = end with\r\n            if (x.value.charAt(0) === '*' && filterOperator === 1) {\r\n              newFilterOperator = 10;\r\n              filterValue = filterValue.substr(1, filterValue.length);\r\n            }\r\n\r\n            // wildcard end and first = contains\r\n            if (x.value.charAt(x.value.length - 1) === '*' && filterOperator === 1 && newFilterOperator === 10) {\r\n              newFilterOperator = 6;\r\n              filterValue = filterValue.substr(0, filterValue.length - 1);\r\n            }\r\n\r\n            // begin with since wildcard is in the end\r\n            if (x.value.charAt(x.value.length - 1) === '*'\r\n              && filterOperator === 1\r\n              && newFilterOperator !== 10\r\n              && newFilterOperator !== 6) {\r\n              newFilterOperator = 9;\r\n              filterValue = filterValue.substr(0, filterValue.length - 1);\r\n            }\r\n\r\n            // set the filteroperator from new if changed\r\n            if (filterOperator !== newFilterOperator) {\r\n              filterOperator = newFilterOperator;\r\n            }\r\n            break;\r\n          case 'boolean':\r\n            rowValue = data[x.attribute];\r\n            filterValue = typeBool[x.value];\r\n            filterOperator = 1;\r\n            break;\r\n          case 'object':\r\n            rowValue = data[x.attribute].toISOString();\r\n            filterValue = new Date(x.value).toISOString(); // todo, this needs to be better...\r\n            filterOperator = filterOperator || 2;\r\n            break;\r\n          default:\r\n            // todo: take the stuff under equal to and put in a function \r\n            // and also call i from here.. or just make it fail?\r\n            try {\r\n              rowValue = data[x.attribute].toLowerCase();\r\n            } catch (err) {\r\n              rowValue = data[x.attribute];\r\n            }\r\n            try {\r\n              filterValue = x.value.toLowerCase();\r\n            } catch (err) {\r\n              filterValue = x.value;\r\n            }\r\n            filterOperator = filterOperator || 1;\r\n            break;\r\n        }\r\n\r\n        // filter from what operator used\r\n        switch (filterOperator) {\r\n          case 1: // equal\r\n            if (rowValue !== filterValue) {\r\n              result = false;\r\n            }\r\n            break;\r\n          case 2: // less or equal\r\n            if (!(rowValue <= filterValue)) {\r\n              result = false;\r\n            }\r\n            break;\r\n          case 3: // greater or equal\r\n            if (!(rowValue >= filterValue)) {\r\n              result = false;\r\n            }\r\n            break;\r\n          case 4: // greate\r\n            if (!(rowValue < filterValue)) {\r\n              result = false;\r\n            }\r\n            break;\r\n          case 5: // greater\r\n            if (!(rowValue > filterValue)) {\r\n              result = false;\r\n            }\r\n            break;\r\n          case 6: // contains\r\n            if (rowValue.indexOf(filterValue) === -1) {\r\n              result = false;\r\n            }\r\n            break;\r\n          case 7: // not equal to\r\n            if (rowValue === filterValue) {\r\n              result = false;\r\n            }\r\n            break;\r\n          case 8: // does not contain\r\n            if (rowValue.indexOf(filterValue) !== -1) {\r\n              result = false;\r\n            }\r\n            break;\r\n          case 9: // begin with\r\n            if (rowValue.substring(0, filterValue.length) !== filterValue) {\r\n              result = false;\r\n            }\r\n            break;\r\n          case 10: // end with\r\n            if (rowValue.substring(rowValue.length - filterValue.length, rowValue.length) !== filterValue) {\r\n              result = false;\r\n            }\r\n            break;\r\n          default:\r\n            if (rowValue !== filterValue) {\r\n              result = false;\r\n            }\r\n        }\r\n        if (type === 'string') {\r\n          if (x.value.charAt(0) === '*' && x.value.length === 1) {\r\n            result = true;\r\n          }\r\n        }\r\n\r\n      }); // end foreach obj\r\n      return result;\r\n\r\n    });\r\n    return resultArray;\r\n  }\r\n}\r\n","import { SortObjectInterface, EntityInterface } from '../interfaces';\r\n\r\n/**\r\n * This does all the sorting on the array passed in\r\n * Used by default datasource\r\n * \r\n */\r\nexport class ArraySort {\r\n  private lastSort: SortObjectInterface[];\r\n  private curSort: SortObjectInterface[];\r\n  private localeCompareCode: string;\r\n  private localeCompareOptions: any;\r\n\r\n  constructor() {\r\n    this.lastSort = [];\r\n    this.curSort = [];\r\n    this.localeCompareCode = null;\r\n    this.localeCompareOptions = { sensitivity: 'base' };\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Sets localCompare\r\n   * \r\n   */\r\n  public setLocaleCompare(code: string, options?: any): void {\r\n    this.localeCompareCode = code ? code : null;\r\n    this.localeCompareOptions = options ? options : { sensitivity: 'base' };\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Resets sort\r\n   * if attribute is passed it sets that as default, this way first filter wont be messed up\r\n   * \r\n   */\r\n  public reset(defaultSortAttribute?: string): void {\r\n    if (defaultSortAttribute) {\r\n      this.lastSort = [{ attribute: defaultSortAttribute, asc: true, no: 0 }];\r\n      this.curSort = [{ attribute: defaultSortAttribute, asc: true, no: 0 }];\r\n    } else {\r\n      this.lastSort = [];\r\n      this.curSort = [];\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Sets last sort\r\n   * todo: why do I have this?\r\n   * \r\n   */\r\n  public setLastSort(array: SortObjectInterface[]): void {\r\n    this.lastSort = array;\r\n    this.curSort = array;\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Sets the sort order to be used next sort Runs\r\n   * any = string\r\n   * \r\n   */\r\n  public setOrderBy(param: SortObjectInterface | any, add?: boolean): void {\r\n    let sort: any;\r\n    let useSetValue = false;\r\n    if (param.asc === undefined) {\r\n      sort = {\r\n        attribute: param,\r\n        asc: true\r\n      };\r\n    } else {\r\n      sort = {\r\n        attribute: param.attribute,\r\n        asc: param.asc\r\n      };\r\n      useSetValue = true;\r\n    }\r\n\r\n    // do we add or is it the first one\r\n    if (add && this.lastSort.length > 0) {\r\n\r\n      // its adding, so lets get last one\r\n      this.curSort = this.lastSort;\r\n      let exist = false;\r\n\r\n      // loop to se if it exist from before\r\n      this.curSort.forEach((x) => {\r\n        if (!useSetValue) {\r\n          if (x.attribute === sort.attribute) {\r\n            exist = true;\r\n            x.asc = x.asc === true ? false : true;\r\n          }\r\n        }\r\n\r\n      });\r\n\r\n      // if it dont exist we add it, else there isnt anythin else to do for now\r\n      if (!exist) {\r\n        this.curSort.push(sort);\r\n        this.curSort[this.curSort.length - 1].no = this.curSort.length;\r\n      }\r\n      this.lastSort = this.curSort;\r\n\r\n    } else {\r\n\r\n      // if not adding, just set it\r\n      this.curSort = [sort];\r\n      this.curSort[0].no = 1;\r\n      if (this.lastSort[0]) {\r\n        if (this.lastSort[0].attribute === this.curSort[0].attribute) {\r\n          if (this.lastSort[0].asc === this.curSort[0].asc) {\r\n            if (!useSetValue) {\r\n              this.curSort[0].asc = this.curSort[0].asc === true ? false : true;\r\n            }\r\n          }\r\n        }\r\n      }\r\n      this.lastSort = this.curSort;\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Returns current sort by\r\n   * \r\n   */\r\n  public getOrderBy(): SortObjectInterface[] {\r\n    return this.curSort;\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Get value from deeper inside the object, this will need a lot more work, and filter does not support it\r\n   * \r\n   */\r\n  public getValue(attribute: string, obj: any): any {\r\n    let arr: any[] = attribute.split('.');\r\n    let tempValue: any = Infinity;\r\n    if (arr.length > 1) {\r\n      try {\r\n        tempValue = obj[arr[0]][arr[1]];\r\n      } catch (e) { /* nothing*/ }\r\n    }\r\n    if (arr.length === 1) {\r\n      try {\r\n        tempValue = obj[attribute];\r\n      } catch (e) { /* nothing*/ }\r\n    }\r\n    return tempValue;\r\n  }\r\n\r\n  /**\r\n   *  Runs sort on array passed in with params set earlier\r\n   * \r\n   */\r\n  public runOrderbyOn(array: EntityInterface[]): void {\r\n\r\n    // super simple for now.. atleast I have som form for sort\r\n    let thisSort = this.getOrderBy();\r\n\r\n    // this is mix from different sources... from what I can tell it works now\r\n    array.sort((obj1: EntityInterface, obj2: EntityInterface) => {\r\n      let result = 0;\r\n\r\n      for (let i = 0; i < thisSort.length && result === 0; ++i) {\r\n        // loop until all are sorted\r\n        let currentObj = thisSort[i];\r\n        let v1 = this.getValue(currentObj.attribute, obj1);\r\n        let v2 = this.getValue(currentObj.attribute, obj2);\r\n\r\n        // compares with locale\r\n        let getLocaleCompareResult = (x1: string, x2: string): number => {\r\n          let resultLocale = null;\r\n          if (this.localeCompareCode) {\r\n            resultLocale = x1.localeCompare(x2, this.localeCompareCode, this.localeCompareOptions);\r\n          } else {\r\n            resultLocale = x1.localeCompare(x2);\r\n          }\r\n          return resultLocale;\r\n        };\r\n\r\n\r\n        if (v1 !== v2) {\r\n          if (currentObj.asc) {\r\n            // ASC\r\n            if (typeof v1 === 'string' && typeof v1 === 'string') {\r\n              if (\r\n                getLocaleCompareResult(v1, v2) < 0 &&\r\n                getLocaleCompareResult(v1, v2) !== 0) {\r\n                result = -1;\r\n              } else {\r\n                result = 1;\r\n              }\r\n            } else {\r\n              if (v1 < v2) {\r\n                result = -1;\r\n              } else {\r\n                result = 1;\r\n              }\r\n            }\r\n          } else {\r\n            if (typeof v1 === 'string' && typeof v1 === 'string') {\r\n              if (\r\n                getLocaleCompareResult(v1, v2) < 0 &&\r\n                getLocaleCompareResult(v1, v2) !== 0) {\r\n                result = 1;\r\n              } else {\r\n                result = -1;\r\n              }\r\n            } else {\r\n              if (v1 < v2) {\r\n                result = 1;\r\n              } else {\r\n                result = -1;\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n      return result;\r\n    });\r\n\r\n    // set current sort as last sort that was used\r\n    this.lastSort = this.getOrderBy().slice(0);\r\n\r\n  }\r\n\r\n\r\n}\r\n","import { EntityInterface, GroupingObjInterface } from '../interfaces'; // todo make a interface\r\n\r\n\r\n/**\r\n * This takes care the generating the flat array the grid can use for grouping\r\n *\r\n */\r\nexport class ArrayGrouping {\r\n  private groups: EntityInterface[][];\r\n  private grouping: GroupingObjInterface[];\r\n  private expanded: Set<string>;\r\n\r\n\r\n\r\n  constructor() {\r\n    this.grouping = [];\r\n    this.expanded = new Set([]);\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * todo description\r\n   *\r\n   */\r\n  public reset() {\r\n    this.groups = [];\r\n    this.grouping = [];\r\n    this.expanded = new Set([]);\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * todo description\r\n   *\r\n   */\r\n  public group(arrayToGroup: EntityInterface[], grouping: GroupingObjInterface[], keepExpanded?: boolean) {\r\n\r\n    // if grouping\r\n    if (grouping.length > 0) {\r\n      // temp holder for groups as we create them\r\n      if (!keepExpanded) {\r\n        this.expanded = new Set([]);\r\n      }\r\n\r\n      // variable to hold our groups\r\n      const groups: EntityInterface[][] = [];\r\n\r\n      grouping.forEach((groupBy, groupNo) => {\r\n\r\n        if (groupNo === 0) {\r\n\r\n          // create main group and add to groups array\r\n          const mainGroup = this.groupMain(arrayToGroup, groupBy.field, groupNo);\r\n          groups.push(mainGroup);\r\n\r\n        } else {\r\n\r\n          // get last group created, and group children\r\n          const childGroupArray = groups[groups.length - 1];\r\n          const newSubGroup = this.groupChildren(childGroupArray, groupBy.field, groupNo);\r\n          groups.push(newSubGroup);\r\n\r\n        }\r\n\r\n      });\r\n\r\n      // set to our class wo we have it for later\r\n      this.groups = groups;\r\n\r\n      // set to clas so we can get it later\r\n      this.grouping = grouping;\r\n\r\n      // do we want what was expanded still to be expanded, if so just return firts grouping\r\n      if (!keepExpanded) {\r\n        return groups[0];\r\n      } else {\r\n        return this.expand(null, this.expanded);\r\n      }\r\n    } else {\r\n      // set all rows to 0 grouping\r\n      arrayToGroup.forEach((row) => {\r\n        row.__groupLvl = 0;\r\n      });\r\n\r\n      // clear prev grouping\r\n      this.grouping = [];\r\n      return arrayToGroup;\r\n    }\r\n\r\n  }\r\n\r\n\r\n  /**\r\n   * returns current grouping\r\n   *\r\n   */\r\n  public getGrouping(): GroupingObjInterface[] {\r\n    return this.grouping;\r\n  }\r\n\r\n\r\n  /**\r\n   * expands 1 group by id passed or all groups if no params\r\n   *\r\n   */\r\n  public expand(id: string, array?: Set<string>) {\r\n    let all = id ? false : true; // if no id, then all\r\n    if (!id) {\r\n      if (array) {\r\n        all = false;\r\n      }\r\n    }\r\n\r\n    if (!array) {\r\n      array = new Set([]);\r\n    }\r\n    let subGroup: Function;\r\n    const collection: EntityInterface[] = [];\r\n    const mainGroups = this.groups[0];\r\n\r\n    // lopp children\r\n    subGroup = (g: EntityInterface) => {\r\n      g.__groupChildren.forEach((sg: EntityInterface) => {\r\n        collection.push(sg);\r\n        switch (true) {\r\n          case all:\r\n          case sg.__groupID === id:\r\n          case array.has(sg.__groupID):\r\n          case sg.__groupID !== id && sg.__groupExpanded:\r\n            if (sg.__groupChildren) {\r\n              sg.__groupExpanded = true;\r\n              this.expanded.add(sg.__groupID);\r\n              subGroup(sg);\r\n            }\r\n            break;\r\n          default:\r\n            // need anything here ?\r\n            break;\r\n        }\r\n\r\n      });\r\n    };\r\n\r\n    // loop main groups\r\n    mainGroups.forEach((g: EntityInterface) => {\r\n      collection.push(g);\r\n      switch (true) {\r\n        case all:\r\n        case g.__groupID === id:\r\n        case array.has(g.__groupID):\r\n        case g.__groupID !== id && g.__groupExpanded:\r\n          g.__groupExpanded = true;\r\n          this.expanded.add(g.__groupID);\r\n          if (g.__groupChildren) {\r\n            subGroup(g);\r\n          }\r\n          break;\r\n        default:\r\n          // need anything here ?\r\n          break;\r\n      }\r\n    });\r\n\r\n    return collection;\r\n  }\r\n\r\n\r\n  /**\r\n   * collapses 1 by id or all if no params is passed\r\n   *\r\n   */\r\n  public collapse(id: string) {\r\n    const all = id ? false : true; // if no id, then all\r\n    id = id === undefined ? null : id;\r\n    let subGroup: Function;\r\n    const collection: EntityInterface[] = [];\r\n    const mainGroups = this.groups[0];\r\n\r\n    // lopp children\r\n    subGroup = (g: EntityInterface) => {\r\n      g.__groupChildren.forEach((sg: EntityInterface) => {\r\n\r\n        switch (true) {\r\n          case all:\r\n            if (sg.__groupChildren) {\r\n              sg.__groupExpanded = false;\r\n              this.expanded.delete(sg.__groupID);\r\n              subGroup(sg);\r\n            }\r\n            break;\r\n          case sg.__groupID === id:\r\n            collection.push(sg);\r\n            this.expanded.delete(sg.__groupID);\r\n            sg.__groupExpanded = false;\r\n            break;\r\n          default:\r\n            collection.push(sg);\r\n            if (sg.__groupChildren && sg.__groupExpanded) {\r\n              subGroup(sg);\r\n            }\r\n            break;\r\n        }\r\n      });\r\n    };\r\n\r\n    // loop main groups\r\n    mainGroups.forEach((g: EntityInterface) => {\r\n      collection.push(g);\r\n      switch (true) {\r\n        case all:\r\n          g.__groupExpanded = false;\r\n          this.expanded.delete(g.__groupID);\r\n          if (g.__groupChildren) {\r\n            subGroup(g);\r\n          }\r\n          break;\r\n        case g.__groupID === id:\r\n          g.__groupExpanded = false;\r\n          this.expanded.delete(g.__groupID);\r\n          break;\r\n        default:\r\n          if (g.__groupChildren && g.__groupExpanded) {\r\n            subGroup(g);\r\n          }\r\n          break;\r\n      }\r\n    });\r\n\r\n    return collection;\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * creates main grouping\r\n   *\r\n   */\r\n  private groupMain(array: EntityInterface[], groupBy: string, groupNo: number) {\r\n    const tempGroupArray: EntityInterface[] = [];\r\n    let curGroup: EntityInterface = ({} as EntityInterface);\r\n    let tempValue: string = null;\r\n\r\n    // first level, here we use array\r\n    array.forEach((element) => {\r\n\r\n      let gidm = element[groupBy];\r\n      gidm = typeof gidm === 'boolean' ? gidm.toString() : gidm;\r\n      gidm = gidm || 'blank';\r\n\r\n      if (gidm !== tempValue) {\r\n        curGroup = {\r\n          __groupName: gidm || 'blank',\r\n          __group: true,\r\n          __groupID: gidm,\r\n          __groupLvl: groupNo,\r\n          __groupChildren: [element],\r\n          __groupTotal: 1,\r\n          __groupExpanded: false\r\n        };\r\n        element.__groupLvl = groupNo + 1;\r\n        tempValue = gidm;\r\n        tempGroupArray.push(curGroup);\r\n      } else {\r\n        element.__groupLvl = groupNo + 1;\r\n        curGroup.__groupChildren.push(element);\r\n        curGroup.__groupTotal++;\r\n      }\r\n    });\r\n\r\n    return tempGroupArray;\r\n  }\r\n\r\n\r\n  /**\r\n   * loops the children of parant and creates grouping, then loops the cridren of that etc\r\n   *\r\n   */\r\n  private groupChildren(childGroupArray: EntityInterface[], groupBy: string, groupNo: number) {\r\n    const tempGroupArray: EntityInterface[] = [];\r\n\r\n    let curGroup: EntityInterface = ({} as EntityInterface);\r\n\r\n    // loop groups\r\n    childGroupArray.forEach((element: EntityInterface) => {\r\n      let tempValue: string = null;\r\n      // loop children\r\n      const rebuiltChildrenArray: EntityInterface[] = [];\r\n      element.__groupChildren.forEach((child: EntityInterface) => {\r\n\r\n        if (child[groupBy] !== tempValue) {\r\n          const gidm = child[groupBy] || 'blank';\r\n          const gidc = element.__groupID || 'blank';\r\n          curGroup = {\r\n            __groupName: child[groupBy],\r\n            __groupID: gidm + '-' + gidc,\r\n            __group: true,\r\n            __groupLvl: groupNo,\r\n            __groupChildren: [child],\r\n            __groupTotal: 1,\r\n            __groupExpanded: false\r\n          };\r\n          child.__groupLvl = groupNo + 1;\r\n\r\n          tempValue = child[groupBy];\r\n          rebuiltChildrenArray.push(curGroup);\r\n          tempGroupArray.push(curGroup);\r\n        } else {\r\n          child.__groupLvl = groupNo + 1;\r\n          curGroup.__groupChildren.push(child);\r\n          curGroup.__groupTotal++;\r\n\r\n        }\r\n      });\r\n\r\n      // replace children with new groups\r\n      element.__groupChildren = rebuiltChildrenArray;\r\n    });\r\n\r\n    return tempGroupArray;\r\n  }\r\n\r\n}\r\n","import { inject, customAttribute} from 'aurelia-framework';\r\nimport { VGrid } from '../v-grid';\r\nimport { BindingContextInterface, OverrideContextInterface} from '../../interfaces';\r\n\r\n// todo: look at adding option to disable this ?\r\n\r\n/**\r\n * Custom attribute \"v-onchange\"\r\n * Only triggers new data update on row when change event happen\r\n * Used by default by the simple html setup\r\n * Can be used with custom html\r\n * \r\n */\r\n@customAttribute('v-onchange')\r\n@inject(Element, VGrid)\r\nexport class VGridAttributesOnChange {\r\n    private vGrid: VGrid;\r\n    private element: HTMLElement;\r\n    private bindingContext: BindingContextInterface;\r\n    private overrideContext: OverrideContextInterface;\r\n\r\n\r\n\r\n    constructor(element: HTMLElement, vGrid: VGrid) {\r\n        this.element = element;\r\n        this.vGrid = vGrid;\r\n    }\r\n\r\n\r\n\r\n  /**\r\n   * todo description\r\n   * \r\n   */\r\n    public attached() {\r\n        if (!this.element.onchange) {\r\n            this.element.onchange = this.onChanged.bind(this);\r\n        }\r\n    }\r\n\r\n\r\n\r\n  /**\r\n   * todo description\r\n   * \r\n   */\r\n    public onChanged() {\r\n        this.vGrid.controller.rowDataBinder.rebindRowNo(this.bindingContext.row);\r\n    }\r\n\r\n\r\n\r\n  /**\r\n   * todo description\r\n   * \r\n   */\r\n    public bind(bindingContext: BindingContextInterface, overrideContext: OverrideContextInterface): void {\r\n        this.bindingContext = bindingContext;\r\n        this.overrideContext = overrideContext;\r\n    }\r\n}\r\n","import { bindable, ViewCompiler, Container, ViewResources, TaskQueue } from 'aurelia-framework';\r\nimport { MainMarkup } from './mainMarkup';\r\nimport { MainScrollEvents } from './mainScrollEvents';\r\nimport { RowMarkup } from './rowMarkup';\r\nimport { RowScrollEvents } from './rowScrollEvents';\r\nimport { ColumnMarkup } from './columnMarkup';\r\nimport { HtmlCache } from './htmlCache';\r\nimport { HtmlHeightWidth } from './htmlHeightWidth';\r\nimport { ViewSlots } from './viewSlots';\r\nimport { ColumnBindingContext } from './columnBindingContext';\r\nimport { RowDataBinder } from './rowDataBinder';\r\nimport { RowClickHandler } from './rowClickHandler';\r\nimport { GroupingElements } from './groupingElements';\r\nimport { Controller } from './controller';\r\nimport { LoadingScreen } from './loadingScreen';\r\nimport { ContextMenu } from './contextMenu';\r\nimport { Footer } from './footer';\r\nimport {\r\n    ResizeShardContextInterface,\r\n    GridConnectorInterface,\r\n    DragDropShardContextInterface,\r\n    ColConfigInterface,\r\n    BindingContextInterface,\r\n    OverrideContextInterface\r\n} from '../interfaces';\r\n\r\n\r\n\r\n/**\r\n * Custom Element <v-grid>\r\n * \r\n */\r\nexport class VGrid {\r\n    public static inject = [Element, ViewCompiler, Container, ViewResources, TaskQueue];\r\n    public element: Element;\r\n    public viewCompiler: ViewCompiler;\r\n    public container: Container;\r\n    public viewResources: ViewResources;\r\n    public taskQueue: TaskQueue;\r\n    public dragDropAttributeSharedContext: DragDropShardContextInterface;\r\n    public resizeAttributeSharedContext: ResizeShardContextInterface;\r\n    public colConfig: ColConfigInterface[];\r\n    public colRepeater: boolean;\r\n    public colRepeatRowTemplate: string;\r\n    public colRepeatRowHeaderTemplate: string;\r\n    public colGroupRow: string;\r\n    public customMenuTemplates: any;\r\n    public colGroupElement: string;\r\n    public newGrid: boolean;\r\n    public controller: Controller;\r\n    public htmlCache: HtmlCache;\r\n    public htmlHeightWidth: HtmlHeightWidth;\r\n    public viewSlots: ViewSlots;\r\n    public columnBindingContext: ColumnBindingContext;\r\n    public rowDataBinder: RowDataBinder;\r\n    public mainMarkup: MainMarkup;\r\n    public mainScrollEvents: MainScrollEvents;\r\n    public rowMarkup: RowMarkup;\r\n    public rowScrollEvents: RowScrollEvents;\r\n    public rowClickHandler: RowClickHandler;\r\n    public columnMarkup: ColumnMarkup;\r\n    public groupingElements: GroupingElements;\r\n    public loadingScreen: LoadingScreen;\r\n    public contextMenu: ContextMenu;\r\n    public bindingContext: BindingContextInterface;\r\n    public overrideContext: OverrideContextInterface;\r\n    public backupColConfig: ColConfigInterface[];\r\n    public filterOperatorNames: any;\r\n    public filterOperatorTranslationKeys: any;\r\n    public loadingScreenTemplate: string;\r\n    public footerTemplate: string;\r\n    public footer: Footer;\r\n\r\n    @bindable({ attribute: 'v-row-height' }) public attRowHeight: number;\r\n    @bindable({ attribute: 'v-header-height' }) public attHeaderHeight: number;\r\n    @bindable({ attribute: 'v-footer-height' }) public attFooterHeight: number;\r\n    @bindable({ attribute: 'v-panel-height' }) public attPanelHeight: number;\r\n    @bindable({ attribute: 'v-grid-connector' }) public attGridConnector: GridConnectorInterface;\r\n    @bindable({ attribute: 'v-multi-select' }) public attMultiSelect: boolean;\r\n    @bindable({ attribute: 'v-manual-sel' }) public attManualSelection: boolean;\r\n    @bindable({ attribute: 'v-theme' }) public attTheme: string;\r\n    @bindable({ attribute: 'v-row-on-draw' }) public attOnRowDraw: Function;\r\n    @bindable({ attribute: 'v-columns' }) public attColConfig: ColConfigInterface[];\r\n    @bindable({ attribute: 'v-i18n' }) public attI18N: Function;\r\n    @bindable({ attribute: 'v-data-delay' }) public attDataDelay: number;\r\n    @bindable({ attribute: 'v-variable-row-height' }) public attVariableRowHeight: boolean;\r\n\r\n    constructor(\r\n        element: Element,\r\n        viewCompiler: ViewCompiler,\r\n        container: Container,\r\n        viewResources: ViewResources,\r\n        taskQueue: TaskQueue) {\r\n\r\n        // injected variables\r\n        this.element = element;\r\n        this.viewCompiler = viewCompiler;\r\n        this.container = container;\r\n        this.viewResources = viewResources;\r\n        this.taskQueue = taskQueue;\r\n\r\n        // used by attributes for holding data\r\n        this.dragDropAttributeSharedContext = ({} as DragDropShardContextInterface);\r\n        this.resizeAttributeSharedContext = ({} as ResizeShardContextInterface);\r\n\r\n        // use by v-grid-col element, that takes the data it gets and puts it in here\r\n        this.colConfig = [];\r\n        this.backupColConfig = [];\r\n        this.colRepeater = false;\r\n        this.colRepeatRowTemplate = null;\r\n        this.colRepeatRowHeaderTemplate = null;\r\n        this.colGroupRow = null;\r\n        this.colGroupElement = null;\r\n        this.customMenuTemplates = {};\r\n        this.footerTemplate = null;\r\n        this.loadingScreenTemplate = null;\r\n\r\n        // to know if new or hidden by \"if\"\r\n        this.newGrid = true;\r\n\r\n        // create our classes\r\n        this.controller = new Controller(this);\r\n        this.htmlCache = new HtmlCache(element);\r\n        this.htmlHeightWidth = new HtmlHeightWidth(this.controller);\r\n        this.viewSlots = new ViewSlots(this.htmlCache);\r\n        this.columnBindingContext = new ColumnBindingContext(this.controller);\r\n        this.rowDataBinder = new RowDataBinder(element, this.controller);\r\n        this.mainMarkup = new MainMarkup(\r\n            element,\r\n            viewCompiler,\r\n            container,\r\n            viewResources,\r\n            this.htmlHeightWidth,\r\n            this.viewSlots);\r\n\r\n        this.mainScrollEvents = new MainScrollEvents(element, this.htmlCache);\r\n        this.rowMarkup = new RowMarkup(element, this.htmlCache);\r\n        this.rowScrollEvents = new RowScrollEvents(element, this.htmlCache, this.controller);\r\n        this.rowClickHandler = new RowClickHandler(element, this.htmlCache);\r\n        this.columnMarkup = new ColumnMarkup(\r\n            element,\r\n            viewCompiler,\r\n            container,\r\n            viewResources,\r\n            this.htmlCache,\r\n            this.viewSlots,\r\n            this.columnBindingContext);\r\n\r\n        this.groupingElements = new GroupingElements(\r\n            element,\r\n            viewCompiler,\r\n            container,\r\n            viewResources,\r\n            this.htmlCache,\r\n            this.viewSlots,\r\n            this.columnBindingContext);\r\n\r\n        this.loadingScreen = new LoadingScreen(element,\r\n            viewCompiler,\r\n            container,\r\n            viewResources,\r\n            this.viewSlots);\r\n\r\n        this.contextMenu = new ContextMenu(\r\n            viewCompiler,\r\n            container,\r\n            viewResources,\r\n            this.viewSlots);\r\n\r\n        this.footer = new Footer(this.htmlCache,\r\n            viewCompiler,\r\n            container,\r\n            viewResources,\r\n            this.viewSlots);\r\n\r\n        this.filterOperatorNames = {\r\n            '=': 'equals',              // 1\r\n            '<=': 'less than or eq',    // 2\r\n            '>=': 'greater than or eq', // 3\r\n            '<': 'less than',           // 4\r\n            '>': 'greater than',        // 5\r\n            '*': 'contains',            // 6\r\n            '!=': 'not equal to',       // 7\r\n            '!*': 'does not contain',   // 8\r\n            '*=': 'begins with',        // 9\r\n            '=*': 'ends with'           // 10\r\n        };\r\n\r\n        this.filterOperatorTranslationKeys = {\r\n            equals: '=',\r\n            lessThanOrEqual: '<=',\r\n            greaterThanOrEqual: '>=',\r\n            lessThan: '<',\r\n            greaterThan: '>',\r\n            contains: '*',\r\n            notEqualTo: '!=',\r\n            doesNotContain: '!*',\r\n            beginsWith: '*=',\r\n            endsWith: '=*'\r\n        };\r\n    }\r\n\r\n\r\n\r\n    public bind(bindingContext: BindingContextInterface, overrideContext: OverrideContextInterface): void {\r\n\r\n        // binding contexts, will need some for the views we create\r\n        this.bindingContext = bindingContext;\r\n        this.overrideContext = overrideContext;\r\n\r\n        // convert main attributes\r\n        this.attRowHeight = this.attRowHeight ? this.attRowHeight * 1 : 25;\r\n        this.attHeaderHeight = this.attHeaderHeight ? this.attHeaderHeight * 1 : 25;\r\n        this.attFooterHeight = this.attFooterHeight ? this.attFooterHeight * 1 : 25;\r\n        this.attPanelHeight = this.attPanelHeight ? this.attPanelHeight * 1 : 25;\r\n        this.attDataDelay = this.attDataDelay ? this.attDataDelay * 1 : 0;\r\n        this.attMultiSelect = this.checkBool(this.attMultiSelect);\r\n        this.attManualSelection = this.attManualSelection ? this.checkBool(this.attManualSelection) : null;\r\n        this.attVariableRowHeight = this.attVariableRowHeight ? this.checkBool(this.attVariableRowHeight) : null;\r\n        this.attTheme = this.attTheme || 'avg-default';\r\n        this.element.classList.add(this.attTheme);\r\n        this.attOnRowDraw = typeof this.attOnRowDraw === 'function' ? this.attOnRowDraw : null;\r\n        this.attI18N = typeof this.attI18N === 'function' ? this.attI18N : null;\r\n\r\n    }\r\n\r\n\r\n\r\n    public unbind(): void {\r\n\r\n        // if unbined we want to know if its new time ( I prb should have more code in created event... to late...)\r\n        this.newGrid = false;\r\n\r\n        // unbind all the columns\r\n        this.viewSlots.unbindAndDetachColumns();\r\n\r\n        // todo: should I bind the main, grouping and loading screen here?\r\n    }\r\n\r\n\r\n\r\n    public attached(): void {\r\n\r\n        // connect grid, and let gridConnector tell us if we can generate the grid or now\r\n        // this way we give the gridconnetor/datasource a chance to get ready before we start asking for stuff\r\n        this.attGridConnector.connect(this.controller, () => {\r\n\r\n            // if not new, and just hidden by if.bind, \r\n            // then lets just skip creating the grid and just bind the columns    \r\n            if (this.newGrid) {\r\n                this.backupColConfig = this.colConfig.slice(0);\r\n                // override colconfig if binded\r\n                if (this.attColConfig) {\r\n                    this.colConfig = this.attColConfig.length > 0 ? this.attColConfig : this.colConfig;\r\n                }\r\n                this.controller.getContext();\r\n                this.controller.createGrid();\r\n            }\r\n\r\n            // bind columns\r\n            this.viewSlots.bindAndAttachColumns(\r\n                this.overrideContext,\r\n                this.columnBindingContext,\r\n                this.attGridConnector.getSelection());\r\n\r\n            // update horizontal scroller\r\n            // todo, use TaskQueue\r\n            setTimeout(() => {\r\n               this.controller.udateHorizontalScroller();\r\n            }, 50);\r\n\r\n            // todo: should I bind the main, grouping and loading screen here?\r\n            // connect gridConnector to this controler\r\n            this.attGridConnector.gridCreated();\r\n\r\n        });\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * Checkes bool values if they are strings or or and return real boolean\r\n     * \r\n     */\r\n    private checkBool(value: string | boolean): boolean {\r\n        if (typeof value === 'string') {\r\n            value = value.toLowerCase();\r\n        }\r\n\r\n        switch (true) {\r\n            case value === 'true':\r\n            case value === true:\r\n                value = true;\r\n                break;\r\n            case value === 'false':\r\n            case value === false:\r\n                value = false;\r\n                break;\r\n            default:\r\n                value = false;\r\n                break;\r\n        }\r\n        return value;\r\n    }\r\n\r\n}\r\n","import { ViewSlot } from 'aurelia-framework';\r\nimport { MainMarkupHtmlString } from './mainMarkupHtmlString';\r\nimport {\r\n  ViewCompiler,\r\n  Container,\r\n  ViewResources,\r\n  ViewFactory,\r\n  View,\r\n  ViewSlots,\r\n  HtmlHeightWidth\r\n} from '../interfaces';\r\n\r\n\r\n\r\n/**\r\n * Loads the main markup and creates a viewport and binds it to our HtmlHeightWidth class\r\n * Viewport is added to the viewPorts class\r\n * \r\n */\r\nexport class MainMarkup {\r\n  private element: Element;\r\n  private viewCompiler: ViewCompiler;\r\n  private container: Container;\r\n  private viewResources: ViewResources;\r\n  private htmlHeightWidth: HtmlHeightWidth;\r\n  private viewSlots: ViewSlots;\r\n  private viewFactory: ViewFactory;\r\n  private view: View;\r\n\r\n\r\n\r\n  constructor(\r\n    element: Element,\r\n    viewCompiler: ViewCompiler,\r\n    container: Container,\r\n    viewResources: ViewResources,\r\n    htmlHeightWidth: HtmlHeightWidth,\r\n    viewSlots: ViewSlots) {\r\n\r\n    this.element = element;\r\n\r\n    this.viewCompiler = viewCompiler;\r\n    this.container = container;\r\n    this.viewResources = viewResources;\r\n\r\n    this.htmlHeightWidth = htmlHeightWidth;\r\n    this.viewSlots = viewSlots;\r\n\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Generates the main markup/skeleton of the grid\r\n   * \r\n   */\r\n  public generateMainMarkup(): void {\r\n\r\n    this.viewFactory = this.viewCompiler.compile(\r\n      '<template>' + MainMarkupHtmlString + '</template>', this.viewResources);\r\n\r\n    this.view = this.viewFactory.create(this.container);\r\n    this.viewSlots.mainViewSlot = new ViewSlot(this.element, true);\r\n    this.viewSlots.mainViewSlot.add(this.view);\r\n\r\n    this.viewSlots.mainViewSlot.bind(this, {\r\n      bindingContext: this,\r\n      parentOverrideContext: this.htmlHeightWidth\r\n    });\r\n\r\n    this.viewSlots.mainViewSlot.attached();\r\n\r\n  }\r\n\r\n}\r\n","// tslint:disable:max-line-length\r\n// disabled, since it really wont be easier to read if I change it\r\n\r\n/**\r\n * This holds all the main markup for the grid except the columns and rows\r\n * In the $au the \"au\" is removed when we get it\r\n */\r\nexport const MainMarkupHtmlString = `\r\n        <avg-top-panel v-drag-drop-col class=\"avg-top-panel\" css=\"height:$au{avgPanel_Height}px\">\r\n\r\n        </avg-top-panel>\r\n\r\n        <avg-header class=\"avg-header\" css=\"height:$au{avgHeader_Height}px;top:$au{avgHeader_Top}px\">\r\n\r\n          <avg-header-left class=\"avg-header-left\" css=\"width:$au{avgHeaderLeft_Width}px\">\r\n           </avg-header-left>  \r\n\r\n           <avg-header-main class=\"avg-header-main\" css=\"left:$au{avgHeaderMain_Left}px;right:$au{avgHeaderMain_Right}px\">\r\n             <avg-header-main-scroll css=\"width:$au{avgHeaderMainScroll_Width}px;height:$au{avgHeaderMainScroll_Height}px\"> \r\n             </avg-header-main-scroll> \r\n           </avg-header-main> \r\n\r\n           <avg-header-right class=\"avg-header-right\" css=\"right:$au{avgHeaderRight_Right}px;width:$au{avgHeaderRight_Width}px\">\r\n           </avg-header-right> \r\n\r\n        </avg-header>\r\n\r\n        <avg-content class=\"avg-content\" css=\"top:$au{avgContent_Top}px;bottom:$au{avgContent_Bottom}px\">\r\n           \r\n            <avg-content-left  class=\"avg-content-left\" css=\"width:$au{avgContentLeft_Width}px\">\r\n              <avg-content-left-scroll css=\"width:$au{avgContentLeftScroll_Width};height:$au{avgContentLeftScroll_Height}px\">  \r\n              </avg-content-left-scroll> \r\n            </avg-content-left>  \r\n\r\n            <avg-content-main  class=\"avg-content-main\" css=\"left:$au{avgContentMain_Left}px;right:$au{avgContentMain_Right}px\">\r\n              <avg-content-main-scroll css=\"min-width: 100%;width:$au{avgContentMainScroll_Width}px;height:$au{avgContentMainScroll_Height}px\"> \r\n              </avg-content-main-scroll> \r\n            </avg-content-main> \r\n\r\n            <avg-content-right  class=\"avg-content-right\" css=\"right:$au{avgContentRight_Right}px;width:$au{avgContentRight_Width}px\">\r\n              <avg-content-right-scroll css=\"width:$au{avgContentRightScroll_Width};height:$au{avgContentRightScroll_Height}px\">  \r\n              </avg-content-right-scroll> \r\n            </avg-content-right>  \r\n            \r\n        </avg-content>\r\n\r\n       <avg-footer class=\"avg-footer\" css=\"height:$au{avgFooter_Height}px\">\r\n       </avg-footer> \r\n\r\n       <avg-content-group css=\"left:0;right:0;top:$au{avgContentGroup_Top}px;bottom:$au{avgContentGroup_Bottom}px\">\r\n          <avg-content-group-scroll css=\"left:0;right:0;height:$au{avgContentGroup_Height}px\">  \r\n          </avg-content-group-scroll> \r\n        </avg-content-group> \r\n\r\n        <avg-content-vhandle css=\"right:0;bottom:$au{avgContentVhandle_Bottom}px;right:$au{avgContentVhandle_Right}px;left:$au{avgContentVhandle_Left}px;top:$au{avgContentVhandle_Top}px\">\r\n          <avg-content-vhandle-scroll css=\"width:5px;height:$au{avgContentVhandleScroll_Height}px\"> \r\n          </avg-content-vhandle-scroll> \r\n        </avg-content-vhandle> \r\n\r\n        <avg-content-hhandle css=\"bottom:$au{avgContentHhandle_Bottom}px;right:$au{avgContentHhandle_Right}px;left:$au{avgContentHhandle_Left}px;height:$au{avgContentHhandle_Height}px\">\r\n          <avg-content-hhandle-scroll css=\"height:7px;width:$au{avgContentHhandleScroll_Width}px\"> \r\n          </avg-content-hhandle-scroll> \r\n        </avg-content-hhandle> \r\n\r\n        `.replace(/\\$(au{)/g, '${');\r\n","import { HtmlCache } from './htmlCache';\r\n\r\n/**\r\n * This takes care of the scrolling part\r\n * It listen for mouse wheel, touch scroll and the extra scrollbars we attach to the grid\r\n * Is also makes sure the left/right and main is same scrollTop, so we dont get that laggy effect on slow browsers\r\n * It triggers event to update/bind data after its done\r\n * \r\n */\r\nexport class MainScrollEvents {\r\n  private element: Element;\r\n  private timerLeft: any;\r\n  private timerMain: any;\r\n  private timerRight: any;\r\n  private timerVhandle: any;\r\n  private timerWheel: any;\r\n  private timerHhandle: any;\r\n  private lastTopPosition: number;\r\n  private htmlCache: HtmlCache;\r\n  private left: Element;\r\n  private main: Element;\r\n  private right: Element;\r\n  private mainHead: Element;\r\n  private vhandle: Element;\r\n  private hhandle: Element;\r\n  private group: Element;\r\n  private touchY: number;\r\n  private touchX: number;\r\n  private isIE11: boolean;\r\n  private wheelEvent: string;\r\n  private isScrollbar: boolean;\r\n\r\n\r\n\r\n  constructor(element: Element, htmlCache: HtmlCache) {\r\n    this.element = element;\r\n    this.htmlCache = htmlCache;\r\n    this.timerLeft = null;\r\n    this.timerMain = null;\r\n    this.timerRight = null;\r\n    this.timerVhandle = null;\r\n    this.timerHhandle = null;\r\n    this.timerWheel = null;\r\n    this.isScrollbar = false;\r\n    this.lastTopPosition = 0;\r\n    this.wheelEvent = 'onwheel';\r\n\r\n    // check if IE, need to act on another mousewheel event if so\r\n    this.isIE11 = !!(window as any).MSInputMethodContext && !!(document as any).documentMode;\r\n    if (this.isIE11) {\r\n      this.wheelEvent = 'onmousewheel';\r\n      console.warn('IE11, why!?!?!');\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Called when grid is created to set defaults, add event listners\r\n   * \r\n   */\r\n  public init(): void {\r\n    this.updateInternalHtmlCache();\r\n    this.addScrollEvents('all');\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * just adds the html elements to class\r\n   * \r\n   */\r\n  private updateInternalHtmlCache(): void {\r\n\r\n    this.left = this.htmlCache.avg_content_left;\r\n    this.main = this.htmlCache.avg_content_main;\r\n    this.right = this.htmlCache.avg_content_right;\r\n    this.mainHead = this.htmlCache.avg_header_main_scroll;\r\n    this.vhandle = this.htmlCache.avg_content_vhandle;\r\n    this.hhandle = this.htmlCache.avg_content_hhandle;\r\n    this.group = this.htmlCache.avg_content_group;\r\n  }\r\n\r\n\r\n  /**\r\n   * called by mouse wheel event listener\r\n   * \r\n   */\r\n  private onWeel(event: MouseWheelEvent): boolean {\r\n\r\n    if (this.vhandle.scrollHeight === (this.vhandle.parentNode as HTMLElement).clientHeight) {\r\n      return false;\r\n    }\r\n\r\n    requestAnimationFrame(() => {\r\n      let deltaY = event.deltaY;\r\n      if (event.deltaMode) {\r\n        deltaY = deltaY * 40;\r\n      }\r\n      if (!event.deltaY && !event.deltaMode) {\r\n        if (event.wheelDelta < 0) {\r\n          deltaY = 100;\r\n        } else {\r\n          deltaY = -100;\r\n        }\r\n      }\r\n\r\n      this.handleEventWheelScroll(deltaY);\r\n    });\r\n    event.preventDefault();\r\n    return false;\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Adds scroll events touch, mousewheel and scrolling on vertical scrollbar and horisontal scrollbar\r\n   * we dont use automatic scrollstate browsers can have a overflow y wtc, since it will look horrible on slow browsers \r\n   * \r\n   */\r\n  private addScrollEvents(type: string): void {\r\n\r\n    switch (type) {\r\n      case 'all':\r\n        (this.right as HTMLElement)[this.wheelEvent] = this.onWeel.bind(this);\r\n        (this.main as HTMLElement)[this.wheelEvent] = this.onWeel.bind(this);\r\n        (this.left as HTMLElement)[this.wheelEvent] = this.onWeel.bind(this);\r\n        (this.group as HTMLElement)[this.wheelEvent] = this.onWeel.bind(this);\r\n        (this.vhandle as HTMLElement).onscroll = this.handleEventVhandle.bind(this);\r\n        (this.hhandle as HTMLElement).onscroll = this.handleEventHhandle.bind(this);\r\n        this.htmlCache.element.addEventListener('touchmove', this.touchMove.bind(this));\r\n        this.htmlCache.element.addEventListener('touchstart', this.touchStart.bind(this));\r\n        break;\r\n      case 'wheel':\r\n        (this.vhandle as HTMLElement).onscroll = this.handleEventVhandle.bind(this);\r\n        break;\r\n      default:\r\n    }\r\n\r\n  }\r\n\r\n\r\n  /**\r\n   * removed the scroll event\r\n   * was more before, main reason this was here, but didnt work well on old browsers\r\n   * \r\n   */\r\n  private removeScrollEvents(type: string): void {\r\n    switch (type) {\r\n      case 'all':\r\n        (this.vhandle as HTMLElement).onscroll = null;\r\n        break;\r\n      case 'wheel':\r\n        (this.vhandle as HTMLElement).onscroll = null;\r\n        break;\r\n      default:\r\n    }\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * called by touchStart event listener\r\n   * \r\n   */\r\n  private touchStart(e: any) {\r\n    let touchobj = e.changedTouches[0];\r\n    this.touchY = parseInt(touchobj.clientY, 10);\r\n    this.touchX = parseInt(touchobj.clientX, 10);\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * called by touchMove event listener\r\n   * \r\n   */\r\n  private touchMove(e: any) {\r\n    let touchobj = e.changedTouches[0];\r\n    let dist = this.touchY - parseInt(touchobj.clientY, 10);\r\n    let distX = parseInt(touchobj.clientX, 10) - this.touchX;\r\n    this.touchY = parseInt(touchobj.clientY, 10);\r\n    this.touchX = parseInt(touchobj.clientX, 10);\r\n\r\n    this.handleEventWheelScroll(dist, -distX);\r\n    e.preventDefault();\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * called by scrollwheel event listener function, the does the actual updating of scrolltop\r\n   * \r\n   */\r\n  private handleEventWheelScroll(newTopPosition: number, left?: number): void {\r\n    requestAnimationFrame(() => {\r\n      if (this.timerWheel) {\r\n        clearTimeout(this.timerWheel);\r\n        this.removeScrollEvents('wheel');\r\n      }\r\n      requestAnimationFrame(() => {\r\n        this.vhandle.scrollTop = this.vhandle.scrollTop + newTopPosition;\r\n        this.main.scrollTop = this.vhandle.scrollTop;\r\n        this.right.scrollTop = this.vhandle.scrollTop;\r\n        this.left.scrollTop = this.vhandle.scrollTop;\r\n        this.group.scrollTop = this.vhandle.scrollTop;\r\n        if (left !== undefined) {\r\n          this.main.scrollLeft = this.main.scrollLeft + left;\r\n          (this.mainHead as HTMLElement).style.left = - this.main.scrollLeft + 'px';\r\n        }\r\n        this.isScrollbar = false;\r\n        this.checkScroll(this.main.scrollTop);\r\n        this.timerWheel = setTimeout(() => {\r\n          this.addScrollEvents('wheel');\r\n          this.timerWheel = null;\r\n        }, 30);\r\n\r\n      });\r\n\r\n    });\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * called when vertical scrollabrs is dragged\r\n   * \r\n   */\r\n  private handleEventVhandle(): void {\r\n\r\n    requestAnimationFrame(() => {\r\n\r\n      if (this.timerVhandle) {\r\n        clearTimeout(this.timerVhandle);\r\n        this.removeScrollEvents('Vhandle');\r\n      }\r\n\r\n      // needed this else chrome had weird effect when dragging fast past bottom of a scrollbars\r\n      requestAnimationFrame(() => {\r\n        let newTopPosition = this.vhandle.scrollTop;\r\n        this.right.scrollTop = newTopPosition;\r\n        this.main.scrollTop = newTopPosition;\r\n        this.left.scrollTop = newTopPosition;\r\n        this.group.scrollTop = newTopPosition;\r\n        this.isScrollbar = true;\r\n        this.checkScroll(newTopPosition);\r\n\r\n        this.timerVhandle = setTimeout(() => {\r\n          this.addScrollEvents('Vhandle');\r\n          this.timerVhandle = null;\r\n        }, 30);\r\n      });\r\n\r\n    });\r\n\r\n  }\r\n\r\n\r\n  /**\r\n   * called when horisontal scrollabrs is dragged\r\n   * \r\n   */\r\n  private handleEventHhandle(): void {\r\n\r\n    requestAnimationFrame(() => {\r\n\r\n      if (this.timerHhandle) {\r\n        clearTimeout(this.timerHhandle);\r\n        this.removeScrollEvents('Hhandle');\r\n      }\r\n\r\n      requestAnimationFrame(() => {\r\n        let newLeftPosition = this.hhandle.scrollLeft;\r\n        this.main.scrollLeft = newLeftPosition;\r\n        (this.mainHead as HTMLElement).style.left = -newLeftPosition + 'px';\r\n\r\n        // this.checkScroll(newTopPosition);\r\n        this.timerHhandle = setTimeout(() => {\r\n          this.addScrollEvents('Hhandle');\r\n          this.timerHhandle = null;\r\n        }, 30);\r\n\r\n      });\r\n\r\n    });\r\n\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * check the scrolling and triggers updating of row top values\r\n   * \r\n   */\r\n  private checkScroll(newTopPosition: number): void {\r\n    if (this.lastTopPosition !== newTopPosition) {\r\n\r\n      // check is up or down\r\n      let isDown = true;\r\n      if (this.lastTopPosition > newTopPosition) {\r\n        isDown = false;\r\n      }\r\n\r\n      // set last position\r\n      this.lastTopPosition = newTopPosition;\r\n\r\n      // trigger scroll\r\n      this.triggerGridScrollEvent(this.isScrollbar, isDown, newTopPosition);\r\n    }\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * trigger event called after checking type of scroll\r\n   * \r\n   */\r\n  private triggerGridScrollEvent(\r\n    scrollbarScrolling: boolean,\r\n    down: boolean,\r\n    topPosition: number): void {\r\n\r\n    let event = new CustomEvent('avg-scroll', {\r\n      detail: {\r\n        isScrollBarScrolling: scrollbarScrolling,\r\n        isDown: down,\r\n        newTopPosition: topPosition\r\n      },\r\n      bubbles: false\r\n    });\r\n    this.element.dispatchEvent(event);\r\n  }\r\n\r\n}\r\n","import { HtmlCache } from '../interfaces';\r\n\r\n/**\r\n * This creates the markup for the rows for:\r\n * - pinned left and right\r\n * - main\r\n * - group\r\n * \r\n */\r\nexport class RowMarkup {\r\n  private element: Element;\r\n  private htmlCache: HtmlCache;\r\n  private left: Element;\r\n  private main: Element;\r\n  private right: Element;\r\n  private group: Element;\r\n  private rowHeight: number;\r\n\r\n\r\n\r\n  constructor(element: Element, htmlCache: HtmlCache) {\r\n    this.element = element;\r\n    this.htmlCache = htmlCache;\r\n  }\r\n\r\n\r\n  /**\r\n   * Called when grid is created to set defaults, add event listners\r\n   * \r\n   */\r\n  public init(rowHeight: number): void {\r\n    this.rowHeight = rowHeight;\r\n    this.updateInternalHtmlCache();\r\n    this.generateRows();\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Generate the row markup\r\n   * called when grid is created and not used again\r\n   * \r\n   */\r\n  private generateRows(): void {\r\n\r\n    let markupLeft = '';\r\n    let markupMain = '';\r\n    let markupRight = '';\r\n    let markupGroup = '';\r\n\r\n    for (let i = 0; i < 40; i++) { // <- rows here will impact creation time\r\n\r\n      let translateY = this.rowHeight * i;\r\n\r\n      let avgRowMarkup = `\r\n        <avg-row \r\n          class=\"avg-row\" \r\n          style=\"height:${this.rowHeight}px; \r\n            transform:translate3d(0px, ${translateY}px, 0px);\r\n            z-index:5;\" \r\n          row=\"${i}\">\r\n        </avg-row>`;\r\n\r\n      let avgRowMarkupGroup = `\r\n        <avg-row \r\n          class=\"avg-row-helper\" \r\n          style=\"height:${this.rowHeight}px; \r\n            transform:translate3d(0px, ${translateY}px, 0px);\r\n            z-index:5;\" \r\n          row=\"${i}\">\r\n        </avg-row>`;\r\n\r\n      markupLeft = markupLeft + avgRowMarkup;\r\n      markupMain = markupMain + avgRowMarkup;\r\n      markupRight = markupRight + avgRowMarkup;\r\n      markupGroup = markupGroup + avgRowMarkupGroup;\r\n    }\r\n\r\n    this.left.innerHTML = markupLeft;\r\n    this.main.innerHTML = markupLeft;\r\n    this.right.innerHTML = markupLeft;\r\n    this.group.innerHTML = markupGroup;\r\n\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * just adds the main html elements to class\r\n   * \r\n   */\r\n  private updateInternalHtmlCache(): void {\r\n    this.left = this.htmlCache.avg_content_left_scroll;\r\n    this.main = this.htmlCache.avg_content_main_scroll;\r\n    this.right = this.htmlCache.avg_content_right_scroll;\r\n    this.group = this.htmlCache.avg_content_group_scroll;\r\n  }\r\n}\r\n","import { HtmlCache, RowCacheInterface, Controller } from '../interfaces';\r\n\r\n/**\r\n * This takes care of the row scrolling\r\n * It sets the correct top values to all columns and groups\r\n * Columns are pinned left and right, main\r\n * It does not listen for scroll event on main elements, just internal event \"avg-scroll\"\r\n * After it sets correct top value, it triggers event to rebind row/ update data\r\n * \r\n */\r\nexport class RowScrollEvents {\r\n  private htmlCache: HtmlCache;\r\n  private element: Element;\r\n  private timer: any;\r\n  private largeScroll: boolean;\r\n  private collectionLength: number;\r\n  private largeScrollUpdateDelay: number;\r\n  private rowCache: RowCacheInterface[];\r\n  private rowHeight: number;\r\n  private cacheLength: number;\r\n  private leftRows: NodeListOf<Element>;\r\n  private mainRows: NodeListOf<Element>;\r\n  private rightRows: NodeListOf<Element>;\r\n  private groupRows: NodeListOf<Element>;\r\n  private onScrollBinded: EventListenerOrEventListenerObject;\r\n  private left: Element;\r\n  private main: Element;\r\n  private right: Element;\r\n  private scroller: Element;\r\n  private controller: Controller;\r\n\r\n\r\n\r\n  constructor(element: Element, htmlCache: HtmlCache, controller: Controller) {\r\n    this.htmlCache = htmlCache;\r\n    this.element = element;\r\n    this.controller = controller;\r\n    this.timer = null;\r\n    this.largeScroll = false;\r\n    this.collectionLength = 0;\r\n    this.largeScrollUpdateDelay = 0;\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Called when grid is created to set defaults, add event listners\r\n   * \r\n   */\r\n  public init(rowHeight: number, attDataDelay: number, attVariableRowHeight: boolean): void {\r\n    this.rowCache = this.htmlCache.rowCache;\r\n    this.largeScrollUpdateDelay = attDataDelay;\r\n    this.rowHeight = rowHeight;\r\n    this.updateInternalHtmlCache();\r\n    this.createRowCache();\r\n    if (attVariableRowHeight) {\r\n      // @override what scroll functions to use\r\n      this.scrollNormal = this.scrollNormalVariableRowHeight.bind(this);\r\n      this.scrollScrollBar = this.scrollScrollBarVariableRowHeight.bind(this);\r\n    }\r\n    this.addEventListener();\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Gets called when selection changes, this way it knows the limit of scrolling\r\n   * \r\n   */\r\n  public setCollectionLength(length: number): void {\r\n    this.collectionLength = length;\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Creates a rowcache so its easy to get the bindingcontexts of all columns\r\n   * \r\n   */\r\n  private createRowCache(): void {\r\n    for (let i = 0; i < this.cacheLength; i++) {\r\n      this.rowCache.push(({\r\n        left: this.leftRows[i],\r\n        main: this.mainRows[i],\r\n        right: this.rightRows[i],\r\n        group: this.groupRows[i],\r\n        top: this.rowHeight * i,\r\n        row: i\r\n      } as RowCacheInterface));\r\n    }\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Updates internal html cache so its easy to access\r\n   * \r\n   */\r\n  private updateInternalHtmlCache(): void {\r\n\r\n    this.left = this.htmlCache.avg_content_left_scroll;\r\n    this.main = this.htmlCache.avg_content_main_scroll;\r\n    this.right = this.htmlCache.avg_content_right_scroll;\r\n    this.scroller = this.htmlCache.avg_content_right_scroll;\r\n\r\n    this.leftRows = this.htmlCache.avg_left_rows;\r\n    this.mainRows = this.htmlCache.avg_main_rows;\r\n    this.rightRows = this.htmlCache.avg_right_rows;\r\n    this.groupRows = this.htmlCache.avg_group_rows;\r\n\r\n    this.cacheLength = this.leftRows.length;\r\n\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * returns the context height of main column (middle one)\r\n   * \r\n   */\r\n  get contentHeight(): number {\r\n    return (this.htmlCache.avg_content_main as HTMLElement).offsetHeight;\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Figues out what type of scrolling is done and calls correct method\r\n   * \r\n   */\r\n  private onScroll(event: CustomEvent): void {\r\n    let isDown = event.detail.isDown;\r\n    let isScrollBarScrolling = event.detail.isScrollBarScrolling;\r\n    let newTopPosition = event.detail.newTopPosition;\r\n    if (this.largeScroll || isScrollBarScrolling) {\r\n      if (this.largeScrollUpdateDelay) {\r\n        clearTimeout(this.timer);\r\n        this.largeScroll = true;\r\n        this.timer = setTimeout(() => {\r\n          this.largeScroll = false;\r\n          this.scrollScrollBar(newTopPosition, isDown);\r\n        }, this.largeScrollUpdateDelay);\r\n      } else {\r\n        this.scrollScrollBar(newTopPosition, isDown);\r\n      }\r\n    } else {\r\n      switch (true) {\r\n        case isDown && !isScrollBarScrolling:\r\n          this.scrollNormal(newTopPosition, true);\r\n          break;\r\n        case !isDown && !isScrollBarScrolling:\r\n          this.scrollNormal(newTopPosition, false);\r\n          break;\r\n        default:\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Sets new top calues to all needed columns (left, main, right, group)\r\n   * \r\n   */\r\n  private setRowTopValue(cache: RowCacheInterface, top: number) {\r\n    cache.left.style.transform = `translate3d(0px,${top}px, 0px)`;\r\n    cache.main.style.transform = `translate3d(0px,${top}px, 0px)`;\r\n    cache.right.style.transform = `translate3d(0px,${top}px, 0px)`;\r\n    cache.group.style.transform = `translate3d(0px,${top}px, 0px)`;\r\n    cache.top = top;\r\n    cache.row = Math.floor(top / this.rowHeight);\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Sets new top calues to all needed columns (left, main, right, group)\r\n   * This one is used for the vaiable row height\r\n   * \r\n   */\r\n  private setRowTopValueVariableRowHeight(cache: RowCacheInterface, top: number) {\r\n    cache.left.style.transform = `translate3d(0px,${top}px, 0px)`;\r\n    cache.main.style.transform = `translate3d(0px,${top}px, 0px)`;\r\n    cache.right.style.transform = `translate3d(0px,${top}px, 0px)`;\r\n    cache.group.style.transform = `translate3d(0px,${top}px, 0px)`;\r\n    cache.top = top;\r\n    let rowHeightState: any = this.controller.getRowHeightState();\r\n    cache.row = rowHeightState.top.indexOf(top);\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Handles normal scrolling\r\n   * \r\n   */\r\n  private scrollNormal(newTopPosition: number, downScroll: boolean) {\r\n\r\n    let rowHeight = this.rowHeight;\r\n    let currentRow = Math.floor(newTopPosition / rowHeight);\r\n    let cacheHeight = rowHeight * this.cacheLength;\r\n\r\n    for (let i = 0; i < this.cacheLength; i++) {\r\n\r\n      let cache = this.rowCache[i];\r\n      let top = this.rowCache[i].top;\r\n      let update = false;\r\n      let newTop: number;\r\n\r\n      if (!downScroll) {\r\n        if (top > (newTopPosition + this.contentHeight)) {\r\n          update = true;\r\n          newTop = top - cacheHeight;\r\n          currentRow = (top - cacheHeight) / rowHeight;\r\n        }\r\n      } else {\r\n\r\n        if (top < (newTopPosition - rowHeight)) {\r\n          update = true;\r\n          newTop = top + cacheHeight;\r\n          currentRow = (top + cacheHeight) / rowHeight;\r\n        }\r\n      }\r\n\r\n      if (update === true && currentRow >= 0 && currentRow <= this.collectionLength - 1) {\r\n        this.setRowTopValue(cache, newTop);\r\n        this.triggerRebindRowEvent(currentRow, cache, downScroll);\r\n      }\r\n\r\n    }\r\n\r\n    // sort array\r\n    this.rowCache.sort(\r\n      (a, b) => {\r\n        return a.row - b.row;\r\n      });\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Handles scrollbars scrolling, or when setting top value by code\r\n   * \r\n   */\r\n  private scrollScrollBar(newTopPosition: number, downScroll: boolean) {\r\n\r\n    if (this.collectionLength <= this.cacheLength) {\r\n      newTopPosition = 0;\r\n    }\r\n\r\n    // vars\r\n    let rowHeight = this.rowHeight;\r\n    let bodyHeight = this.contentHeight;\r\n    let currentRow = Math.floor(newTopPosition / rowHeight);\r\n    let firstRow = Math.floor(newTopPosition / rowHeight);\r\n    let currentRowTop = rowHeight * currentRow;\r\n    let firstRowTop = rowHeight * firstRow;\r\n    let collectionLength = this.collectionLength;\r\n\r\n    // for setting after\r\n    let setAfter = (no: number) => {\r\n      let row = this.rowCache[no];\r\n      this.setRowTopValue(row, currentRowTop);\r\n      currentRowTop = currentRowTop + rowHeight;\r\n    };\r\n\r\n    // for setting before (when hitting bottom)\r\n    let setBefore = (no: number) => {\r\n      let row = this.rowCache[no];\r\n      firstRowTop = firstRowTop - rowHeight;\r\n      this.setRowTopValue(row, firstRowTop);\r\n    };\r\n\r\n    // for setting before (when hitting bottom)\r\n    let setHiddenFromView = (no: number) => {\r\n      let row = this.rowCache[no];\r\n      this.setRowTopValue(row, -(currentRowTop + (rowHeight * 50)));\r\n    };\r\n\r\n    // loop row html cache\r\n    for (let i = 0; i < this.cacheLength; i++) {\r\n      let moved = false;\r\n      switch (true) {\r\n        case currentRow >= 0 && currentRow <= collectionLength - 1:\r\n          setAfter(i);\r\n          moved = true;\r\n          break;\r\n        case currentRow >= collectionLength && (collectionLength * rowHeight) >= bodyHeight:\r\n          setBefore(i);\r\n          moved = true;\r\n          break;\r\n        default:\r\n      }\r\n      if (!moved) {\r\n        if (currentRow >= collectionLength && (currentRowTop - rowHeight) >= bodyHeight) {\r\n          setHiddenFromView(i);\r\n        } else {\r\n          // if this triggers the collection have been removed, so really just need to place out the rows\r\n          if (currentRow >= collectionLength) {\r\n            //setAfter(i);\r\n            setHiddenFromView(i);\r\n          }\r\n        }\r\n      }\r\n\r\n      currentRow++;\r\n    }\r\n\r\n    // I now sort the array again.\r\n    this.rowCache.sort(\r\n      (a, b) => {\r\n        return a.row - b.row;\r\n      });\r\n\r\n    // update row data\r\n    this.triggerRebindAllRowsEvent(downScroll, this.rowCache);\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * sets row height (used when using variable row height)\r\n   * \r\n   */\r\n  private setRowHeight(rowElement: any, rowNo: number): void {\r\n    let rowHeightState: any = this.controller.getRowHeightState();\r\n    rowElement.left.style.height = rowHeightState.rows[rowNo] + 'px';\r\n    rowElement.main.style.height = rowHeightState.rows[rowNo] + 'px';\r\n    rowElement.right.style.height = rowHeightState.rows[rowNo] + 'px';\r\n    rowElement.group.style.height = rowHeightState.rows[rowNo] + 'px';\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Handles normal scrolling (used when using variable row height)\r\n   * if varibale row state is set the override the \"scrollNormal\" method\r\n   * \r\n   */\r\n  private scrollNormalVariableRowHeight(newTopPosition: number, downScroll: boolean) {\r\n\r\n    let rowHeightState: any = this.controller.getRowHeightState();\r\n\r\n\r\n    for (let i = 0; i < this.cacheLength; i++) {\r\n\r\n      let cache = this.rowCache[i];\r\n      let top = this.rowCache[i].top;\r\n      let currentRow = rowHeightState.top.indexOf(top);\r\n      this.setRowHeight(this.rowCache[i], currentRow);\r\n      let update = false;\r\n      let newTop: number;\r\n\r\n      if (!downScroll) {\r\n        if (top > (newTopPosition + this.contentHeight)) {\r\n          currentRow = currentRow - this.cacheLength;\r\n          if (currentRow > -1) {\r\n            update = true;\r\n            newTop = rowHeightState.top[currentRow];\r\n          }\r\n        }\r\n      } else {\r\n          if (top < (newTopPosition - rowHeightState.rows[currentRow])) {\r\n          update = true;\r\n          newTop = rowHeightState.top[currentRow + this.cacheLength];\r\n          currentRow = currentRow + this.cacheLength;\r\n        }\r\n      }\r\n\r\n      if (update === true && currentRow >= 0 && currentRow <= this.collectionLength - 1) {\r\n        this.setRowTopValueVariableRowHeight(cache, newTop);\r\n        this.triggerRebindRowEvent(currentRow, cache, downScroll);\r\n      }\r\n\r\n\r\n    }\r\n\r\n    // sort array\r\n    this.rowCache.sort(\r\n      (a, b) => {\r\n        return a.row - b.row;\r\n      });\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Handles scrollbars scrolling, or when setting top value by code (used when using variable row height)\r\n   * if varibale row state is set the override the \"scrollScrollBar\" method\r\n   * \r\n   */\r\n  private scrollScrollBarVariableRowHeight(newTopPosition: number, downScroll: boolean) {\r\n\r\n    if (this.collectionLength <= this.cacheLength) {\r\n      newTopPosition = 0;\r\n    }\r\n\r\n    let rowHeightState: any = this.controller.getRowHeightState();\r\n    let x = 1000;\r\n    let currentRow = 0;\r\n    let currentRowTop = 0;\r\n    let firstRow = 0;\r\n    let i = 0;\r\n    let run = true;\r\n    if (newTopPosition !== 0) {\r\n      // need to do some looping here, need to figure out where we are..\r\n      while (i < rowHeightState.top.length) {\r\n        let checkValue = Math.abs(newTopPosition - (rowHeightState.top[i]));\r\n        if  (checkValue === x)  {\r\n            currentRow = i - 1;\r\n            firstRow = i - 1;\r\n            run = false;\r\n          } else {\r\n            if (checkValue < x) {\r\n              currentRow = i - 1;\r\n              firstRow = i - 1;\r\n              x = checkValue;\r\n            }\r\n          }\r\n        i++;\r\n      }\r\n    }\r\n\r\n\r\n\r\n    // vars\r\n    let bodyHeight = this.contentHeight;\r\n    currentRowTop = rowHeightState.top[currentRow];\r\n\r\n    let firstRowTop = currentRowTop * 1;\r\n    let collectionLength = this.collectionLength;\r\n\r\n    // for setting after\r\n    let setAfter = (no: number) => {\r\n      let row = this.rowCache[no];\r\n      this.setRowHeight(row, currentRow);\r\n      this.setRowTopValueVariableRowHeight(row, currentRowTop);\r\n      row.row = currentRow;\r\n      currentRowTop = currentRowTop + rowHeightState.rows[currentRow];\r\n    };\r\n\r\n    // for setting before (when hitting bottom)\r\n    let setBefore = (no: number) => {\r\n      let row = this.rowCache[no];\r\n      this.setRowHeight(row, currentRow);\r\n      firstRowTop = firstRowTop - rowHeightState.rows[currentRow];\r\n      this.setRowTopValueVariableRowHeight(row, firstRowTop);\r\n    };\r\n\r\n    // for setting before (when hitting bottom)\r\n    let setHiddenFromView = (no: number) => {\r\n      let row = this.rowCache[no];\r\n      this.setRowTopValueVariableRowHeight(row, -(currentRowTop + (rowHeightState.rows[currentRow] * 50)));\r\n    };\r\n\r\n    // loop row html cache\r\n    for (let i = 0; i < this.cacheLength; i++) {\r\n      let moved = false;\r\n      switch (true) {\r\n        case currentRow >= 0 && currentRow <= collectionLength - 1:\r\n          setAfter(i);\r\n          moved = true;\r\n          break;\r\n        case currentRow >= collectionLength && (rowHeightState.total) >= bodyHeight:\r\n          setBefore(i);\r\n          moved = true;\r\n          break;\r\n        default:\r\n      }\r\n      if (!moved) {\r\n        if (currentRow >= collectionLength && (currentRowTop - rowHeightState.rows[currentRow]) >= bodyHeight) {\r\n          setHiddenFromView(i);\r\n        } else {\r\n          // if this triggers the collection have been removed, so really just need to place out the rows\r\n          if (currentRow >= collectionLength) {\r\n            setHiddenFromView(i);\r\n            //setAfter(i);\r\n          }\r\n        }\r\n      }\r\n\r\n      currentRow++;\r\n    }\r\n\r\n    // I now sort the array again.\r\n    this.rowCache.sort(\r\n      (a, b) => {\r\n        return a.row - b.row;\r\n      });\r\n\r\n    // update row data\r\n    this.triggerRebindAllRowsEvent(downScroll, this.rowCache);\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Adds event listener from \"avg-scroll\"\r\n   * This is usually called by the mainScrollEvents class\r\n   * \r\n   */\r\n  private addEventListener(): void {\r\n    this.onScrollBinded = this.onScroll.bind(this);\r\n    this.element.addEventListener('avg-scroll', this.onScrollBinded);\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Triggers event to rebind row\r\n   * \r\n   */\r\n  private triggerRebindRowEvent(curRow: number, curRowCache: RowCacheInterface, isDownScroll: boolean): void {\r\n    let event = new CustomEvent('avg-rebind-row', {\r\n      detail: {\r\n        currentRow: curRow,\r\n        rowCache: curRowCache,\r\n        downScroll: isDownScroll\r\n      },\r\n      bubbles: false\r\n    });\r\n    this.element.dispatchEvent(event);\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Triggers event to rebind all rows\r\n   * \r\n   */\r\n  private triggerRebindAllRowsEvent(isDownScroll: boolean, curRowCache: RowCacheInterface[]): void {\r\n    let event = new CustomEvent('avg-rebind-all-rows', {\r\n      detail: {\r\n        downScroll: isDownScroll,\r\n        rowCache: curRowCache\r\n      },\r\n      bubbles: false\r\n    });\r\n    this.element.dispatchEvent(event);\r\n  }\r\n\r\n}\r\n","import { ViewSlot } from 'aurelia-framework';\r\nimport { ColumnMarkupHelper } from './columnMarkupHelper';\r\nimport {\r\n  ViewCompiler,\r\n  Container,\r\n  ViewResources,\r\n  ViewFactory,\r\n  HtmlCache,\r\n  ColumnBindingContext,\r\n  ViewSlots,\r\n  ColConfigInterface,\r\n  OverrideContextInterface\r\n} from '../interfaces';\r\n\r\n\r\n\r\n/**\r\n *  Creates all the columns markup/viewports when grid is created\r\n *\r\n */\r\nexport class ColumnMarkup {\r\n  private element: Element;\r\n  private htmlCache: HtmlCache;\r\n  private viewSlots: ViewSlots;\r\n  private columnBindingContext: ColumnBindingContext;\r\n  private markupHelper: ColumnMarkupHelper;\r\n  private viewCompiler: ViewCompiler;\r\n  private container: Container;\r\n  private viewResources: ViewResources;\r\n  private overrideContext: OverrideContextInterface;\r\n  private colConfig: ColConfigInterface[];\r\n  private configLength: number;\r\n  private colRepeater: boolean;\r\n  private colRepeatRowTemplate: string;\r\n  private colRepeatHeaderTemplate: string;\r\n  private colGroup: string;\r\n  private leftScroll: Element;\r\n  private mainScroll: Element;\r\n  private rightScroll: Element;\r\n  private groupScroll: Element;\r\n  private leftHeader: Element;\r\n  private mainHeader: Element;\r\n  private rightHeader: Element;\r\n  private leftRows: NodeListOf<Element>;\r\n  private mainRows: NodeListOf<Element>;\r\n  private rightRows: NodeListOf<Element>;\r\n  private groupRows: NodeListOf<Element>;\r\n  private rowLength: number;\r\n\r\n\r\n\r\n  constructor(\r\n    element: Element,\r\n    viewCompiler: ViewCompiler,\r\n    container: Container,\r\n    viewResources: ViewResources,\r\n    htmlCache: HtmlCache,\r\n    viewSlots: ViewSlots,\r\n    columnBindingContext: ColumnBindingContext\r\n  ) {\r\n\r\n    this.element = element;\r\n    this.htmlCache = htmlCache;\r\n    this.viewSlots = viewSlots;\r\n    this.columnBindingContext = columnBindingContext;\r\n    this.markupHelper = new ColumnMarkupHelper();\r\n    this.viewCompiler = viewCompiler;\r\n    this.container = container;\r\n    this.viewResources = viewResources;\r\n\r\n  }\r\n\r\n\r\n\r\n/**\r\n *  sets needed context/data and generates the columns needed\r\n * \r\n */\r\n  public init(\r\n    colConfig: ColConfigInterface[],\r\n    overrideContext: OverrideContextInterface,\r\n    colRepeater: boolean,\r\n    colRepeatRowTemplate: string,\r\n    colRepeatRowHeaderTemplate: string,\r\n    colGroup: string,\r\n  ): void {\r\n    this.overrideContext = overrideContext;\r\n    this.colConfig = colConfig;\r\n    this.configLength = colConfig.length;\r\n    this.colRepeater = colRepeater;\r\n    this.colRepeatRowTemplate = colRepeatRowTemplate;\r\n    this.colRepeatHeaderTemplate = colRepeatRowHeaderTemplate;\r\n    this.colGroup = colGroup;\r\n    this.updateInternalHtmlCache();\r\n    if (this.colConfig.length > 0) {\r\n      this.markupHelper.generate(this.colConfig);\r\n    }\r\n\r\n    this.generateColumns();\r\n  }\r\n\r\n\r\n\r\n/**\r\n *  returns the row view using the viewCompiler and markup needed\r\n *\r\n */\r\n  private getRowViews(type: string): ViewFactory {\r\n    let viewMarkup = '';\r\n    let markupArray: string[] = [];\r\n\r\n    // group column\r\n    if (type === 'group') {\r\n\r\n      // default markup\r\n      let defaultMarkup: string[] = [\r\n        '<i click.delegate=\"changeGrouping(rowRef)\">',\r\n        '<svg class=\"icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\">',\r\n        '<path show.bind=\"rowRef.__groupExpanded\" d=\"M4.8 7.5h6.5v1H4.8z\"/>',\r\n        '<path show.bind=\"!rowRef.__groupExpanded\" d=\"M7.4 4.8v2.7H4.7v1h2.7v3h1v-3h2.8v-1H8.5V4.8h-1z\"/>',\r\n        '</svg>',\r\n        '</i>&nbsp;${rowRef.__groupName} (${rowRef.__groupTotal})',\r\n      ];\r\n\r\n      // if user supplied markup we use that, else default\r\n      let gTemplate: string = this.colGroup || defaultMarkup.join('');\r\n\r\n      // all markup\r\n      markupArray = [\r\n        '<avg-col ',\r\n        'class=\"avg-col-group\"',\r\n        'if.bind=\"rowRef.__group ===true\"',\r\n        'css=\"left:${rowRef.__groupLvl ? rowRef.__groupLvl *15:0}px;right:0\">',\r\n        gTemplate,\r\n        '</avg-col>'\r\n      ];\r\n\r\n      viewMarkup = markupArray.join('');\r\n    } else {\r\n      if (this.colRepeater && type === 'main') {\r\n        let style = 'style=\"left:0;right:0\"';\r\n        viewMarkup = `<avg-repeat \\\r\n                        class=\"avg-col\" \\\r\n                        if.bind=\"rowRef.__group !== true\" ${style}>${this.colRepeatRowTemplate}\\\r\n                      </avg-repeat>`;\r\n      } else {\r\n        for (let i = 0; i < this.configLength; i++) {\r\n\r\n          let style: string;\r\n          switch (type) {\r\n            case 'left':\r\n              style = 'css=\"width:${setupleft[' + i + '].width}px;\\\r\n                            left:${setupleft[' + i + '].left+ (setupgrouping * 15)}px\"';\r\n              break;\r\n            case 'main':\r\n              style = 'css=\"width:${setupmain[' + i + '].width}px;\\\r\n                            left:${setupmain[' + i + '].left}px\"';\r\n              break;\r\n            case 'right':\r\n              style = 'css=\"width:${setupright[' + i + '].width}px;\\\r\n                            left:${setupright[' + i + '].left}px\"';\r\n              break;\r\n            default:\r\n          }\r\n\r\n          let template = this.colConfig[i].__colRowTemplateGenerated;\r\n          let colMarkup = `<avg-col \\\r\n                              class=\"avg-col\" \\\r\n                              if.bind=\"setup${type}[${i}].show && rowRef.__group !== true\" ${style}>${template}\\\r\n                          </avg-col>`;\r\n\r\n          viewMarkup = viewMarkup + colMarkup;\r\n\r\n        }\r\n      }\r\n    }\r\n\r\n    // this is the block that puches the column from left for grouping\r\n    let groupingBlock = '';\r\n    if (type === 'left') {\r\n      groupingBlock = '<avg-col \\\r\n      class=\"avg-col-grouping\" \\\r\n      css=\"left:0px;width:${rowRef.__groupLvl ? rowRef.__groupLvl *15:0}px\"></avg-col>';\r\n    }\r\n    return this.viewCompiler.compile(`<template>${groupingBlock + viewMarkup}</template>`, this.viewResources);\r\n  }\r\n\r\n\r\n\r\n/**\r\n *  create coluumn context that will be used to control the width & left style of them\r\n *  It will also control if they are visible or hidden\r\n *\r\n */\r\n  private createColSetupContext(type: string): void {\r\n\r\n    let leftCur = 0;\r\n    for (let i = 0; i < this.configLength; i++) {\r\n\r\n      let widthCur = this.colConfig[i].colWidth;\r\n      let showme = false;\r\n      switch (type) {\r\n        case 'left':\r\n          showme = this.colConfig[i].colPinLeft;\r\n          break;\r\n        case 'main':\r\n          showme = !this.colConfig[i].colPinLeft && !this.colConfig[i].colPinRight;\r\n          break;\r\n        case 'right':\r\n          showme = this.colConfig[i].colPinRight;\r\n          break;\r\n        default:\r\n      }\r\n\r\n      this.columnBindingContext['setup' + type].push({\r\n        width: widthCur,\r\n        show: showme,\r\n        left: leftCur\r\n      });\r\n      if (showme) {\r\n        leftCur = leftCur + widthCur;\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n/**\r\n *  returns the header view using the viewCompiler and markup needed\r\n *\r\n */\r\n  private getHeaderViews(type: string): ViewFactory {\r\n    let viewMarkup = '';\r\n\r\n    if (this.colRepeater && type === 'main' && this.colRepeatHeaderTemplate) {\r\n      // if repeater and main, we add to the\r\n      let style = 'css=\"left:0;right:0\"';\r\n      viewMarkup = `<div class=\"avg-col\" ${style}>${this.colRepeatHeaderTemplate}</div>`;\r\n    } else {\r\n      for (let i = 0; i < this.configLength; i++) {\r\n        let style: string;\r\n        switch (type) {\r\n          case 'left':\r\n            style = 'css=\"width:${setupleft[' + i + '].width}px;\\\r\n                          left:${setupleft[' + i + '].left + (setupgrouping * 15)}px\"';\r\n            break;\r\n          case 'main':\r\n            style = 'css=\"width:${setupmain[' + i + '].width}px;\\\r\n                          left:${setupmain[' + i + '].left}px\"';\r\n            break;\r\n          case 'right':\r\n            style = 'css=\"width:${setupright[' + i + '].width}px;\\\r\n                          left:${setupright[' + i + '].left}px\"';\r\n            break;\r\n          default:\r\n        }\r\n\r\n        let template = this.colConfig[i].__colHeaderTemplateGenerated;\r\n        let colMarkup = `<avg-col \\\r\n                            avg-type=\"${type}\" \\\r\n                            avg-config-col=\"${i}\" \\\r\n                            class=\"avg-col\" \\\r\n                            if.bind=\"setup${type}[${i}].show\" \\\r\n                            ${style}>${template}\\\r\n                          </avg-col>`;\r\n\r\n        viewMarkup = viewMarkup + colMarkup;\r\n      }\r\n    }\r\n\r\n    // this is the block that puches the column from left for grouping\r\n    let groupingBlock = '';\r\n    if (type === 'left') {\r\n      groupingBlock = '<avg-col \\\r\n                          class=\"avg-col-grouping-header\" \\\r\n                          css=\"left:0px;width:${setupgrouping ? (setupgrouping * 15):0}px\"> \\\r\n                       </avg-col>';\r\n    }\r\n\r\n    return this.viewCompiler.compile(`<template>${groupingBlock + viewMarkup}</template>`, this.viewResources);\r\n\r\n  }\r\n\r\n\r\n\r\n/**\r\n *  starts to generate the needed columns\r\n *\r\n */\r\n  private generateColumns(): void {\r\n\r\n    if (this.columnBindingContext.setupmain.length === 0) {\r\n      // grid hidden by if.bind...lets keep what ever is in here\r\n      this.createColSetupContext('left');\r\n      this.createColSetupContext('main');\r\n      this.createColSetupContext('right');\r\n      this.createColSetupContext('group');\r\n    }\r\n\r\n    let viewFactoryLeft = this.getRowViews('left');\r\n    let viewFactoryMain = this.getRowViews('main');\r\n    let viewFactoryRight = this.getRowViews('right');\r\n    let viewFactoryGroup = this.getRowViews('group');\r\n\r\n    for (let i = 0; i < this.rowLength; i++) {\r\n      this.viewSlots.leftRowViewSlots[i] = this.createViewSlot(this.leftRows[i], viewFactoryLeft);\r\n      this.viewSlots.mainRowViewSlots[i] = this.createViewSlot(this.mainRows[i], viewFactoryMain);\r\n      this.viewSlots.rightRowViewSlots[i] = this.createViewSlot(this.rightRows[i], viewFactoryRight);\r\n      this.viewSlots.groupRowViewSlots[i] = this.createViewSlot(this.groupRows[i], viewFactoryGroup);\r\n      this.htmlCache.rowCache[i].leftRowViewSlot = this.viewSlots.leftRowViewSlots[i];\r\n      this.htmlCache.rowCache[i].mainRowViewSlot = this.viewSlots.mainRowViewSlots[i];\r\n      this.htmlCache.rowCache[i].rightRowViewSlot = this.viewSlots.rightRowViewSlots[i];\r\n      this.htmlCache.rowCache[i].groupRowViewSlot = this.viewSlots.groupRowViewSlots[i];\r\n    }\r\n\r\n    let viewFactoryHeaderLeft = this.getHeaderViews('left');\r\n    let viewFactoryHeaderMain = this.getHeaderViews('main');\r\n    let viewFactoryHeaderRight = this.getHeaderViews('right');\r\n\r\n    this.viewSlots.leftHeaderViewSlot = this.createViewSlot(this.leftHeader, viewFactoryHeaderLeft);\r\n    this.viewSlots.mainHeaderViewSlot = this.createViewSlot(this.mainHeader, viewFactoryHeaderMain);\r\n    this.viewSlots.rightHeaderViewSlot = this.createViewSlot(this.rightHeader, viewFactoryHeaderRight);\r\n  }\r\n\r\n\r\n\r\n/**\r\n *  creates a viewslot and adds the view using the viewFactory\r\n *\r\n */\r\n  private createViewSlot(element: Element, viewFactory: ViewFactory): ViewSlot {\r\n\r\n    let view = viewFactory.create(this.container); // <<< time consumer, I should rebuild ?\r\n    let viewSlot = new ViewSlot(element, true);\r\n    viewSlot.add(view);\r\n    return viewSlot;\r\n  }\r\n\r\n\r\n\r\n/**\r\n *  gets the html markup from the htmlCache and sets it to this class instance\r\n *\r\n */\r\n  private updateInternalHtmlCache(): void {\r\n    this.leftScroll = this.htmlCache.avg_content_left_scroll;\r\n    this.mainScroll = this.htmlCache.avg_content_main_scroll;\r\n    this.rightScroll = this.htmlCache.avg_content_right_scroll;\r\n    this.groupScroll = this.htmlCache.avg_content_group_scroll;\r\n\r\n    this.leftHeader = this.htmlCache.avg_header_left;\r\n    this.mainHeader = this.htmlCache.avg_header_main_scroll;\r\n    this.rightHeader = this.htmlCache.avg_header_right;\r\n\r\n    this.leftRows = this.htmlCache.avg_left_rows;\r\n    this.mainRows = this.htmlCache.avg_main_rows;\r\n    this.rightRows = this.htmlCache.avg_right_rows;\r\n    this.groupRows = this.htmlCache.avg_group_rows;\r\n\r\n    this.rowLength = this.leftRows.length;\r\n  }\r\n\r\n}\r\n","import { ColConfigInterface } from '../interfaces';\r\n\r\n/**\r\n * Generate the simple html columns markup from settings fetched from the attrubites\r\n * \r\n */\r\nexport class ColumnMarkupHelper {\r\n\r\n\r\n\r\n  /**\r\n   * todo description\r\n   * \r\n   */\r\n  public generate(colConfig: ColConfigInterface[]): void {\r\n    let type: string = null;\r\n    if (colConfig && colConfig.length > 0) {\r\n      type = 'typeHtml';\r\n    }\r\n    if (!type) {\r\n      throw new Error('column setup missing');\r\n    }\r\n    this.processColumns(colConfig);\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * todo description\r\n   * \r\n   */\r\n  private processColumns(array: ColConfigInterface[]): void {\r\n    array.forEach((col, index) => {\r\n      // we need attribute or rowtemplate, else throm error\r\n      if (!col.colField && !col.colRowTemplate) {\r\n        if (col.colType !== 'selection') {\r\n          throw new Error('colField is not set on column' + index);\r\n        }\r\n      }\r\n      // set default, some can be missing\r\n      col.colType = col.colType || 'text';\r\n      col.colFilterTop = col.colFilterTop || false;\r\n      col.colHeaderName = col.colHeaderName || this.getAttribute(col.colField, true);\r\n      col.colWidth = col.colWidth || 100;\r\n      col.colCss = col.colCss || '';\r\n      col.colField = this.checkAttribute(col.colField);\r\n      // create row and header templates\r\n      this.createHeaderTemplate(col);\r\n      this.createRowTemplate(col);\r\n      if (col.colRowTemplate) {\r\n        col.__colRowTemplateGenerated = col.colRowTemplate;\r\n      }\r\n      if (col.colHeaderTemplate) {\r\n        col.__colHeaderTemplateGenerated = col.colHeaderTemplate;\r\n      }\r\n\r\n    });\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * todo description\r\n   * \r\n   */\r\n  private createHeaderTemplate(col: any): void {\r\n    // if header template does not exist then lets create it\r\n    if (!col.colHeaderTemplate) {\r\n      let inputHeader: string;\r\n      let labelHeader: string;\r\n      switch (col.colType) {\r\n        case 'selection':\r\n          // set template\r\n          labelHeader = '';\r\n          inputHeader = `<input \r\n            class=\"avg-row-checkbox-100\" \r\n            v-selection=\"type:header;selected.bind:selected\" \r\n            type=\"checkbox\">`;\r\n          break;\r\n        case 'image':\r\n          inputHeader = '<p class=\"avg-label-top\"></p>';\r\n          if (!col.colFilterTop) {\r\n            col.colFilter = 'x';\r\n          }\r\n          labelHeader = this.createLabelMarkup(col);\r\n          break;\r\n        default: // text\r\n          inputHeader = this.createInputHeaderMarkup(col);\r\n          labelHeader = this.createLabelMarkup(col);\r\n          break;\r\n      }\r\n      // set correctly to where is is suppoed to be\r\n      if (col.colFilterTop) {\r\n        col.__colHeaderTemplateGenerated = inputHeader + labelHeader;\r\n      } else {\r\n        col.__colHeaderTemplateGenerated = labelHeader + inputHeader;\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * todo description\r\n   * \r\n   */\r\n  private createRowTemplate(col: any): void {\r\n    // if row template does not exist, then lets create it\r\n    if (!col.colRowTemplate) {\r\n      switch (col.colType) {\r\n        case 'selection':\r\n          // set template\r\n          col.colRowTemplate = `<input \r\n            v-key-move \r\n            class=\"avg-row-checkbox-100\"  \r\n            v-selection=\"type:row;selected.bind:selected\" \r\n            type=\"checkbox\" >`;\r\n          break;\r\n        case 'image':\r\n          this.createImageRowMarkup(col);\r\n          break;\r\n\r\n        default: // text\r\n          this.createInputRowMarkup(col);\r\n          break;\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * todo description\r\n   * \r\n   */\r\n  private getAttribute(value: string, capitalize: boolean): string {\r\n    let returnValue = value || 'missing!';\r\n    if (value) {\r\n      // remove rowRef/tempRef\r\n      value = value.replace('rowRef.', '');\r\n      value = value.replace('tempRef.', '');\r\n      // loop it until we have the attribute\r\n      let newValue = '';\r\n      let done = false;\r\n      for (let x = 0; x < value.length; x++) {\r\n        let letter = value.charAt(x);\r\n        // if we hit & or | or space we are at the end\r\n        if (!done && letter !== ' ' && letter !== '&' && letter !== '|' && letter !== ':') {\r\n          newValue = newValue + letter;\r\n        } else {\r\n          done = true;\r\n        }\r\n      }\r\n      // capilize first letter\r\n      if (capitalize) {\r\n        returnValue = newValue.charAt(0).toUpperCase() + newValue.slice(1);\r\n      } else {\r\n        returnValue = newValue;\r\n      }\r\n    }\r\n    return returnValue;\r\n  };\r\n\r\n\r\n\r\n  /**\r\n   * todo description\r\n   * \r\n   */\r\n  private checkAttribute(attribute: string): string {\r\n    let value = attribute;\r\n    if (attribute) {\r\n      if (attribute.indexOf('rowRef') === -1 && attribute.indexOf('tempRef') === -1) {\r\n        value = 'rowRef.' + attribute;\r\n      }\r\n    }\r\n    return value;\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * todo description\r\n   * \r\n   */\r\n  private createImageRowMarkup(col: ColConfigInterface): void {\r\n    // get the values/settings\r\n    let classNames = 'class=\"avg-image-round\"';\r\n    let attributeRow = col.colAddRowAttributes ? col.colAddRowAttributes : '';\r\n    let css = col.colCss ? `css=\"${col.colCss}\"` : '';\r\n    let imageFix = `v-image-fix.bind=\"${col.colField}\"`;\r\n    // insert the markup\r\n    col.__colRowTemplateGenerated = `<image ${css} ${classNames} ${imageFix} ${attributeRow}>`;\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * todo description\r\n   * \r\n   */\r\n  private createInputRowMarkup(col: ColConfigInterface): void {\r\n\r\n    // get the values/settings\r\n    let colClass = `class=\"${col.colType === 'checkbox' ? 'avg-row-checkbox-100' : 'avg-row-input'}\"`;\r\n    // type\r\n    let colType = `type=\"${col.colType}\"`;\r\n    // get attributes row\r\n    let colAddRowAttributes = col.colAddRowAttributes ? col.colAddRowAttributes : '';\r\n    // menu ?\r\n    let colRowMenu = col.colRowMenu ? `v-menu=\"${col.colRowMenu}\"` : '';\r\n    // get css\r\n    let colCss = col.colCss ? `css=\"${col.colCss}\"` : '';\r\n    // is it a checkbox?\r\n    // todo: adding the observer part without choice, maybe param for that?\r\n    if (col.colType === 'checkbox') {\r\n      col.__colRowTemplateGenerated = `<input \r\n        ${colCss} \r\n        ${colClass} \r\n        ${colType} \r\n        ${colAddRowAttributes} \r\n        ${colRowMenu}  \r\n        checked.bind=\"${col.colField}\">`;\r\n    } else {\r\n\r\n      let binding = `value.bind=\"${col.colField}\"`;\r\n\r\n      if (col.colDisplayEdit) {\r\n        binding = `v-data-handler=\"value.bind:${col.colField};${col.colDisplayEdit}\"`;\r\n      }\r\n\r\n      col.__colRowTemplateGenerated = `<input \r\n        ${colCss} \r\n        ${colClass} \r\n        ${colType} \r\n        ${colRowMenu}\r\n        ${colAddRowAttributes}  \r\n        ${binding}>`;\r\n    }\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * todo description\r\n   * \r\n   */\r\n  private createInputHeaderMarkup(col: ColConfigInterface): string {\r\n\r\n    // is it filter ?\r\n    let markup: string;\r\n    if (col.colFilter) {\r\n\r\n      // type\r\n      let type = `type=\"${col.colType}\"`;\r\n\r\n      // filter\r\n      let filter = col.colFilter ? `v-filter=\"${col.colFilter}\"` : '';\r\n\r\n      // get attributes label\r\n      let colAddFilterAttributes = col.colAddFilterAttributes ? col.colAddFilterAttributes : '';\r\n\r\n      // is it a checkbox ?\r\n      let classNames = '';\r\n      if (col.colType === 'checkbox') {\r\n        classNames = `class=\"${col.colFilterTop ? 'avg-row-checkbox-50' : 'avg-row-checkbox-50'}\"`;\r\n      } else {\r\n        classNames = `class=\"${col.colFilterTop ? 'avg-header-input-top' : 'avg-header-input-bottom'}\"`;\r\n      }\r\n\r\n      let colRowMenu = col.colFilterMenu ? `v-menu=\"${col.colFilterMenu}\"` : '';\r\n\r\n      markup = `<input ${colRowMenu} ${classNames} ${colAddFilterAttributes} ${type} ${filter}\">`;\r\n    } else {\r\n      markup = '';\r\n    }\r\n\r\n    // return the markup\r\n    return markup;\r\n\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * todo description\r\n   * \r\n   */\r\n  private createLabelMarkup(col: ColConfigInterface): string {\r\n    // get the values/settings\r\n    let filterClass = col.colFilter ? `${col.colFilterTop ? 'avg-label-bottom' : 'avg-label-top'}` : 'avg-label-full';\r\n    let dragDropClass = col.colDragDrop ? 'avg-vGridDragHandle' : '';\r\n    let classname = `class=\"${dragDropClass} ${filterClass}\"`;\r\n    let colAddLabelAttributes = col.colAddLabelAttributes ? col.colAddLabelAttributes : '';\r\n    let sort = col.colSort ? `v-sort=\"${col.colSort}\"` : '';\r\n    let colLabelMenu = col.colLabelMenu ? `v-menu=\"${col.colLabelMenu}\"` : '';\r\n    let colDragDrop = col.colDragDrop !== 'false' ? `v-drag-drop-col=\"${col.colDragDrop}\"` : '';\r\n    let colResizeable = col.colResizeable !== 'false' ? `v-resize-col` : '';\r\n    let extraAttributes = `${colDragDrop} ${colResizeable} ${colLabelMenu}`;\r\n\r\n    // apply magic\r\n    // todo, atm Im adding resize columns and dragdrop columns, should this be a choice?\r\n    return `<p \r\n      ${extraAttributes} \r\n      ${classname} \r\n      ${sort} \r\n      ${colAddLabelAttributes}>\r\n      ${col.colHeaderName}\r\n      </p>`;\r\n  }\r\n\r\n}\r\n","import { RowCacheInterface, HeaderCacheInterface } from '../interfaces';\r\n\r\n/**\r\n * Holds all the html elements, so we have 1 place to get em all\r\n * All classes that creates html adds it to this one, some the parst the class get\r\n * \r\n */\r\nexport class HtmlCache {\r\n    public element: Element | HTMLElement;\r\n    public avg_top_panel: Element | HTMLElement;\r\n    public avg_header_left: Element | HTMLElement;\r\n    public avg_header: Element | HTMLElement;\r\n    public avg_header_main: Element | HTMLElement;\r\n    public avg_header_main_scroll: Element | HTMLElement;\r\n    public avg_header_right: Element | HTMLElement;\r\n    public avg_content: Element | HTMLElement;\r\n    public avg_content_left: Element | HTMLElement;\r\n    public avg_content_left_scroll: Element | HTMLElement;\r\n    public avg_content_main: Element | HTMLElement;\r\n    public avg_content_main_scroll: Element | HTMLElement;\r\n    public avg_content_right: Element | HTMLElement;\r\n    public avg_content_right_scroll: Element | HTMLElement;\r\n    public avg_footer: Element | HTMLElement;\r\n    public avg_content_group: Element | HTMLElement;\r\n    public avg_content_group_scroll: Element | HTMLElement;\r\n    public avg_content_vhandle: Element | HTMLElement;\r\n    public avg_content_vhandle_scroll: Element | HTMLElement;\r\n    public avg_content_hhandle: Element | HTMLElement;\r\n    public avg_content_hhandle_scroll: Element | HTMLElement;\r\n    public avg_left_rows: NodeListOf<any>;\r\n    public avg_main_rows: NodeListOf<any>;\r\n    public avg_right_rows: NodeListOf<any>;\r\n    public avg_group_rows: NodeListOf<any>;\r\n    public rowCache: RowCacheInterface[];\r\n    public headerCache: HeaderCacheInterface;\r\n\r\n\r\n\r\n    constructor(element: Element) {\r\n\r\n        this.element = element;\r\n        this.avg_top_panel = null;\r\n\r\n        this.avg_header = null;\r\n\r\n        this.avg_header_left = null;\r\n        this.avg_header_main = null;\r\n        this.avg_header_main_scroll = null;\r\n        this.avg_header_right = null;\r\n\r\n        this.avg_content = null;\r\n        this.avg_content_left = null;\r\n        this.avg_content_left_scroll = null;\r\n        this.avg_content_main = null;\r\n        this.avg_content_main_scroll = null;\r\n        this.avg_content_right = null;\r\n        this.avg_content_right_scroll = null;\r\n\r\n        this.avg_footer = null;\r\n\r\n        this.avg_content_group = null;\r\n        this.avg_content_group_scroll = null;\r\n        this.avg_content_vhandle = null;\r\n        this.avg_content_vhandle_scroll = null;\r\n        this.avg_content_hhandle = null;\r\n        this.avg_content_hhandle_scroll = null;\r\n\r\n        this.avg_left_rows = null;\r\n        this.avg_main_rows = null;\r\n        this.avg_right_rows = null;\r\n        this.avg_group_rows = null;\r\n\r\n        this.rowCache = [];\r\n        this.headerCache = ({\r\n            left: null,\r\n            main: null,\r\n            right: null,\r\n            group: null,\r\n            bindingContext: null,\r\n            overrideContext: null,\r\n            leftRowViewSlot: null,\r\n            mainRowViewSlot: null,\r\n            rightRowViewSlot: null,\r\n            groupRowViewSlot: null\r\n        } as HeaderCacheInterface);\r\n    }\r\n\r\n\r\n\r\n  /**\r\n   * just gets the row html elements for easy access later\r\n   * \r\n   */\r\n    public updateRowsMarkup(): void {\r\n        this.avg_left_rows = this.avg_content_left_scroll.getElementsByTagName('avg-row');\r\n        this.avg_main_rows = this.avg_content_main_scroll.getElementsByTagName('avg-row');\r\n        this.avg_right_rows = this.avg_content_right_scroll.getElementsByTagName('avg-row');\r\n        this.avg_group_rows = this.avg_content_group_scroll.getElementsByTagName('avg-row');\r\n    }\r\n\r\n\r\n\r\n  /**\r\n   * gets the mark markup parts after its created for easy access later\r\n   * \r\n   */\r\n    public updateMainMarkup(): void {\r\n        this.avg_top_panel = this.element.getElementsByTagName('avg-top-panel')[0];\r\n\r\n        this.avg_header = this.element.getElementsByTagName('avg-header')[0];\r\n\r\n        this.avg_header_left = this.element.getElementsByTagName('avg-header-left')[0];\r\n\r\n        this.avg_header_main = this.element.getElementsByTagName('avg-header-main')[0];\r\n        this.avg_header_main_scroll = this.element.getElementsByTagName('avg-header-main-scroll')[0];\r\n\r\n        this.avg_header_right = this.element.getElementsByTagName('avg-header-right')[0];\r\n\r\n        this.avg_content = this.element.getElementsByTagName('avg-content')[0];\r\n\r\n        this.avg_content_left = this.element.getElementsByTagName('avg-content-left')[0];\r\n        this.avg_content_left_scroll = this.element.getElementsByTagName('avg-content-left-scroll')[0];\r\n\r\n        this.avg_content_main = this.element.getElementsByTagName('avg-content-main')[0];\r\n        this.avg_content_main_scroll = this.element.getElementsByTagName('avg-content-main-scroll')[0];\r\n\r\n        this.avg_content_right = this.element.getElementsByTagName('avg-content-right')[0];\r\n        this.avg_content_right_scroll = this.element.getElementsByTagName('avg-content-right-scroll')[0];\r\n\r\n        this.avg_footer = this.element.getElementsByTagName('avg-footer')[0];\r\n\r\n        this.avg_content_group = this.element.getElementsByTagName('avg-content-group')[0];\r\n        this.avg_content_group_scroll = this.element.getElementsByTagName('avg-content-group-scroll')[0];\r\n\r\n        this.avg_content_vhandle = this.element.getElementsByTagName('avg-content-vhandle')[0];\r\n        this.avg_content_vhandle_scroll = this.element.getElementsByTagName('avg-content-vhandle-scroll')[0];\r\n\r\n        this.avg_content_hhandle = this.element.getElementsByTagName('avg-content-hhandle')[0];\r\n        this.avg_content_hhandle_scroll = this.element.getElementsByTagName('avg-content-hhandle-scroll')[0];\r\n\r\n    }\r\n\r\n}\r\n","import { ColConfigInterface, ColumnBindingContext, Controller } from '../interfaces';\r\n\r\n/**\r\n * Holds all the height and width of main markup\r\n * This is binded to the main markup, so changes here will reflect in the grid height/width\r\n * \r\n */\r\nexport class HtmlHeightWidth {\r\n  public avgScrollBarWidth: number;\r\n  public avgPanel_Height: number;\r\n  public avgHeader_Height: number;\r\n  public avgHeader_Top: number;\r\n  public avgContent_Top: number;\r\n  public avgContent_Bottom: number;\r\n  public avgHeaderLeft_Width: number;\r\n  public avgHeaderMain_Left: number;\r\n  public avgHeaderMain_Right: number;\r\n  public avgHeaderMainScroll_Width: number;\r\n  public avgHeaderMainScroll_Height: number;\r\n  public avgHeaderRight_Right: number;\r\n  public avgHeaderRight_Width: number;\r\n  public avgContentLeft_Width: number;\r\n  public avgContentLeftScroll_Width: string;\r\n  public avgContentLeftScroll_Height: number;\r\n  public avgContentMain_Left: number;\r\n  public avgContentMain_Right: number;\r\n  public avgContentMainScroll_Width: number;\r\n  public avgContentMainScroll_Height: number;\r\n  public avgContentRight_Right: number;\r\n  public avgContentRight_Width: number;\r\n  public avgContentRightScroll_Width: string;\r\n  public avgContentRightScroll_Height: number;\r\n  public avgContentGroup_Width: number;\r\n  public avgContentGroup_Height: number;\r\n  public avgContentGroup_Top: number;\r\n  public avgContentGroup_Bottom: number;\r\n  public avgContentVhandle_Width: number;\r\n  public avgContentVhandle_Height: number;\r\n  public avgContentVhandle_Top: number;\r\n  public avgContentVhandleScroll_Height: number;\r\n  public avgContentVhandle_Bottom: number;\r\n  public avgContentHhandle_Bottom: number;\r\n  public avgContentHhandle_Right: number;\r\n  public avgContentHhandle_Left: number;\r\n  public avgContentHhandle_Height: number;\r\n  public avgContentHhandleScroll_Width: number;\r\n  public avgFooter_Height: number;\r\n  public attHeaderHeight: number;\r\n  public attRowHeight: number;\r\n  public attFooterHeight: number;\r\n  public attPanelHeight: number;\r\n  private controller: Controller;\r\n\r\n\r\n\r\n  constructor(controller: Controller) {\r\n\r\n    this.controller = controller;\r\n\r\n    this.avgScrollBarWidth = this.getScrollbarWidth() || 17;\r\n\r\n    this.avgPanel_Height = 0;\r\n\r\n    this.avgHeader_Height = 30;\r\n    this.avgHeader_Top = 0;\r\n\r\n    this.avgContent_Top = 30;\r\n    this.avgContent_Bottom = 30;\r\n\r\n    this.avgHeaderLeft_Width = 200;\r\n\r\n    this.avgHeaderMain_Left = 200;\r\n    this.avgHeaderMain_Right = 150;\r\n\r\n    this.avgHeaderMainScroll_Width = 0;\r\n    this.avgHeaderMainScroll_Height = 100;\r\n\r\n    this.avgHeaderRight_Right = 0;\r\n    this.avgHeaderRight_Width = 150;\r\n\r\n    this.avgContentLeft_Width = 200 + this.avgScrollBarWidth;\r\n\r\n    this.avgContentLeftScroll_Width = '100%';\r\n    this.avgContentLeftScroll_Height = 0 + this.avgScrollBarWidth;\r\n\r\n    this.avgContentMain_Left = 200;\r\n    this.avgContentMain_Right = 150 - this.avgScrollBarWidth;\r\n\r\n    this.avgContentMainScroll_Width = 0;\r\n    this.avgContentMainScroll_Height = 0;\r\n\r\n    this.avgContentRight_Right = 0;\r\n    this.avgContentRight_Width = 150;\r\n\r\n    this.avgContentRightScroll_Width = '100%';\r\n    this.avgContentRightScroll_Height = 0 + this.avgScrollBarWidth;\r\n\r\n    this.avgContentGroup_Width = 150;\r\n    this.avgContentGroup_Height = 0;\r\n    this.avgContentGroup_Top = 0;\r\n    this.avgContentGroup_Bottom = 0;\r\n\r\n    this.avgContentVhandle_Width = 0 + this.avgScrollBarWidth;\r\n    this.avgContentVhandle_Height = 0;\r\n    this.avgContentVhandle_Top = 0;\r\n    this.avgContentVhandleScroll_Height = 0;\r\n    this.avgContentVhandle_Bottom = 0;\r\n\r\n    this.avgContentHhandle_Bottom = 0;\r\n    this.avgContentHhandle_Right = 0 + this.avgScrollBarWidth;\r\n    this.avgContentHhandle_Left = 0;\r\n    this.avgContentHhandle_Height = 17;\r\n    this.avgContentHhandleScroll_Width = 17;\r\n\r\n    this.avgFooter_Height = 30;\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * returns the height the scroll area need to be\r\n   * TODO: need to make something else here if -Im going for wariable row height\r\n   * \r\n   */\r\n  public getNewHeight(length: number): number {\r\n    let lengthTotal: number = 0;\r\n    if (this.controller.attVariableRowHeight) {\r\n       // If variable row height we need to use the \r\n       lengthTotal = this.controller.getRowHeightState().total;\r\n    } else {\r\n      // if not varibale row height, we use default\r\n      lengthTotal = this.controller.attRowHeight * length;\r\n    }\r\n    return lengthTotal;\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * corrects the scroll area to the correct high af all scroll divs\r\n   * \r\n   */\r\n  public setCollectionLength(length: number, includeScroller?: boolean): void {\r\n    let rowTotal = this.getNewHeight(length);\r\n    let avgScrollbarHeightValue = includeScroller === false ? 0 : this.avgScrollBarWidth;\r\n    let total = rowTotal + avgScrollbarHeightValue;\r\n    this.avgContentRightScroll_Height = total;\r\n    this.avgContentGroup_Height = total;\r\n    this.avgContentVhandleScroll_Height = total;\r\n    this.avgContentMainScroll_Height = total;\r\n    this.avgContentLeftScroll_Height = total;\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * sets the correct wisth of main markup/skeleton of the grid\r\n   * \r\n   */\r\n  public addDefaultsAttributes(\r\n    attHeaderHeight: number,\r\n    attRowHeight: number,\r\n    attFooterHeight: number,\r\n    attPanelHeight: number): void {\r\n\r\n    this.attHeaderHeight = attHeaderHeight;\r\n    this.attRowHeight = attRowHeight;\r\n    this.attFooterHeight = attFooterHeight;\r\n    this.attPanelHeight = attPanelHeight;\r\n\r\n    // set main body parts\r\n    this.avgPanel_Height = attPanelHeight;\r\n    this.avgHeader_Top = attPanelHeight;\r\n    this.avgHeader_Height = attHeaderHeight;\r\n    this.avgContent_Top = attHeaderHeight + attPanelHeight;\r\n    this.avgContent_Bottom = attFooterHeight;\r\n    this.avgFooter_Height = attFooterHeight;\r\n    this.avgHeaderMainScroll_Height = attHeaderHeight;\r\n    this.avgContentGroup_Height = this.avgContentGroup_Height;\r\n    this.avgContentGroup_Top = this.avgContent_Top;\r\n    this.avgContentGroup_Bottom = this.avgContent_Bottom;\r\n    this.avgContentVhandle_Height = this.avgContentVhandle_Height;\r\n    this.avgContentVhandle_Top = this.avgContent_Top;\r\n    this.avgContentVhandle_Bottom = this.avgContent_Bottom;\r\n    this.avgContentHhandle_Bottom = attFooterHeight;\r\n    this.avgContentHhandle_Height = this.avgScrollBarWidth;\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * corrects the left style and with of columns\r\n   * \r\n   */\r\n  public adjustWidthsColumns(columnBindingContext: ColumnBindingContext, groupsLength: number): void {\r\n    let left = groupsLength ? groupsLength * 15 : 0;\r\n    let main = 0;\r\n    let right = 0;\r\n\r\n    // tslint:disable-next-line:prefer-for-of\r\n    for (let i = 0; i < columnBindingContext.setupmain.length; i++) {\r\n      if (columnBindingContext.setupleft[i].show) {\r\n        left = left + columnBindingContext.setupleft[i].width;\r\n      }\r\n      if (columnBindingContext.setupmain[i].show) {\r\n        main = main + columnBindingContext.setupmain[i].width;\r\n      }\r\n      if (columnBindingContext.setupright[i].show) {\r\n        right = right + columnBindingContext.setupright[i].width;\r\n      }\r\n    }\r\n\r\n    this.avgContentLeft_Width = left;\r\n    this.avgHeaderLeft_Width = left;\r\n\r\n    this.avgContentMain_Left = left;\r\n    this.avgContentMain_Right = right;\r\n    this.avgHeaderMain_Left = left;\r\n    this.avgHeaderMain_Right = right;\r\n\r\n    this.avgHeaderMainScroll_Width = main;\r\n    this.avgContentMainScroll_Width = main;\r\n\r\n    this.avgContentRight_Width = right;\r\n    this.avgHeaderRight_Width = right;\r\n\r\n    this.avgContentHhandle_Right = right;\r\n    this.avgContentHhandle_Left = left;\r\n    this.avgContentHhandleScroll_Width = main;\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * sets the correct with of columns based of the v-column or v-grid-col attributes\r\n   * \r\n   */\r\n  public setWidthFromColumnConfig(colConfig: ColConfigInterface[], groupsLength?: number): void {\r\n    let left = groupsLength ? groupsLength * 15 : 0;\r\n    let main = 0;\r\n    let right = 0;\r\n\r\n    // tslint:disable-next-line:prefer-for-of\r\n    for (let i = 0; i < colConfig.length; i++) {\r\n      switch (true) {\r\n        case colConfig[i].colPinLeft && colConfig[i].colPinRight:\r\n          left = left + colConfig[i].colWidth;\r\n          right = right + colConfig[i].colWidth;\r\n          break;\r\n        case colConfig[i].colPinLeft:\r\n          left = left + colConfig[i].colWidth;\r\n          break;\r\n        case colConfig[i].colPinRight:\r\n          right = right + colConfig[i].colWidth;\r\n          break;\r\n        case !colConfig[i].colPinLeft && !colConfig[i].colPinRight:\r\n          main = main + colConfig[i].colWidth;\r\n          break;\r\n        default:\r\n      }\r\n    }\r\n\r\n    this.avgContentLeft_Width = left;\r\n    this.avgHeaderLeft_Width = left;\r\n\r\n    this.avgContentMain_Left = left;\r\n    this.avgContentMain_Right = right;\r\n    this.avgHeaderMain_Left = left;\r\n    this.avgHeaderMain_Right = right;\r\n\r\n    this.avgHeaderMainScroll_Width = main;\r\n    this.avgContentMainScroll_Width = main;\r\n\r\n    this.avgContentRight_Width = right;\r\n    this.avgHeaderRight_Width = right;\r\n\r\n    this.avgContentHhandle_Right = right;\r\n    this.avgContentHhandle_Left = left;\r\n    this.avgContentHhandleScroll_Width = main;\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * returns the scrollbar with used in browser\r\n   * \r\n   */\r\n  public getScrollbarWidth(): number {\r\n    let outer = document.createElement('div');\r\n    outer.style.visibility = 'hidden';\r\n    outer.style.width = '100px';\r\n    document.body.appendChild(outer);\r\n\r\n    let widthNoScroll = outer.offsetWidth;\r\n    // force scrollbars\r\n    outer.style.overflow = 'scroll';\r\n\r\n    // add innerdiv\r\n    let inner = document.createElement('div');\r\n    inner.style.width = '100%';\r\n    outer.appendChild(inner);\r\n\r\n    let widthWithScroll = inner.offsetWidth;\r\n\r\n    // remove divs\r\n    outer.parentNode.removeChild(outer);\r\n\r\n    return widthNoScroll - widthWithScroll;\r\n  }\r\n\r\n}\r\n","import {\r\n  ViewSlot,\r\n  BindingContextInterface,\r\n  HeaderCacheInterface,\r\n  RowCacheInterface,\r\n  OverrideContextInterface,\r\n  HtmlCache,\r\n  ColumnBindingContext,\r\n  SelectionInterface\r\n} from '../interfaces';\r\n\r\n\r\n\r\n/**\r\n * This holds all the grids viewslots, so its easy to bind and attach and unbind/detach when removed\r\n * \r\n */\r\nexport class ViewSlots {\r\n  public leftRowViewSlots: ViewSlot[];\r\n  public mainRowViewSlots: ViewSlot[];\r\n  public rightRowViewSlots: ViewSlot[];\r\n  public groupRowViewSlots: ViewSlot[];\r\n  public leftHeaderViewSlot: ViewSlot;\r\n  public mainHeaderViewSlot: ViewSlot;\r\n  public rightHeaderViewSlot: ViewSlot;\r\n  public mainViewSlot: ViewSlot;\r\n  public loadingScreenViewSlot: ViewSlot;\r\n  public footerViewSlot: ViewSlot;\r\n  public contextMenu: ViewSlot;\r\n  public groupingViewSlots: ViewSlot[];\r\n  private rowCache: RowCacheInterface[];\r\n  private headerCache: HeaderCacheInterface;\r\n\r\n\r\n\r\n  constructor(htmlCache: HtmlCache) {\r\n    this.rowCache = htmlCache.rowCache;\r\n    this.headerCache = htmlCache.headerCache;\r\n    this.leftRowViewSlots = [];\r\n    this.mainRowViewSlots = [];\r\n    this.rightRowViewSlots = [];\r\n    this.groupRowViewSlots = [];\r\n\r\n    // header view slots\r\n    this.leftHeaderViewSlot = null;\r\n    this.mainHeaderViewSlot = null;\r\n    this.rightHeaderViewSlot = null;\r\n\r\n    // entire grid markup / skeleton\r\n    this.mainViewSlot = null;\r\n\r\n    // misc other viewslots\r\n    this.loadingScreenViewSlot = null;\r\n    this.groupingViewSlots = [];\r\n    this.contextMenu = null;\r\n\r\n    // grouping elements viewslots is not here... see GroupingElements class\r\n\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Bind and attaches the viewslots\r\n   * Called when created, and reattached after if.bind is used\r\n   * \r\n   */\r\n  public bindAndAttachColumns(\r\n    overrideContext: OverrideContextInterface,\r\n    columnBindingContext: ColumnBindingContext,\r\n    curSelection: SelectionInterface): void {\r\n\r\n    let context: BindingContextInterface;\r\n\r\n    // create a extra parent override context so we can add\r\n    // overrideContext from model holding grid and columnbinding\r\n    let newParentOverrideContext = {\r\n      bindingContext: columnBindingContext,\r\n      parentOverrideContext: overrideContext\r\n    };\r\n\r\n    for (let i = 0; i < this.rowCache.length; i++) {\r\n      // one for each row.\r\n      context = ({rowRef: {}, tempRef: {}} as BindingContextInterface);\r\n\r\n      this.rowCache[i].bindingContext = context;\r\n      this.rowCache[i].parentOverrideContext = {\r\n        bindingContext: context,\r\n        parentOverrideContext: newParentOverrideContext\r\n      };\r\n\r\n      this.leftRowViewSlots[i].bind(this.rowCache[i].bindingContext, this.rowCache[i].parentOverrideContext);\r\n      this.leftRowViewSlots[i].attached();\r\n\r\n      this.mainRowViewSlots[i].bind(this.rowCache[i].bindingContext, this.rowCache[i].parentOverrideContext);\r\n      this.mainRowViewSlots[i].attached();\r\n\r\n      this.rightRowViewSlots[i].bind(this.rowCache[i].bindingContext, this.rowCache[i].parentOverrideContext);\r\n      this.rightRowViewSlots[i].attached();\r\n\r\n      this.groupRowViewSlots[i].bind(this.rowCache[i].bindingContext, this.rowCache[i].parentOverrideContext);\r\n      this.groupRowViewSlots[i].attached();\r\n    }\r\n\r\n    // add selection to the context, so we can control selection (delselect/select all)\r\n    context = ({ selection: curSelection } as BindingContextInterface);\r\n    this.headerCache.bindingContext = context;\r\n    this.headerCache.parentOverrideContext = {\r\n      bindingContext: context,\r\n      parentOverrideContext: newParentOverrideContext\r\n    };\r\n\r\n    this.leftHeaderViewSlot.bind(this.headerCache.bindingContext, this.headerCache.parentOverrideContext);\r\n    this.leftHeaderViewSlot.attached();\r\n\r\n    this.mainHeaderViewSlot.bind(this.headerCache.bindingContext, this.headerCache.parentOverrideContext);\r\n    this.mainHeaderViewSlot.attached();\r\n\r\n    this.rightHeaderViewSlot.bind(this.headerCache.bindingContext, this.headerCache.parentOverrideContext);\r\n    this.rightHeaderViewSlot.attached();\r\n\r\n    // todo loading screen and footer?\r\n\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Unbinds and detach all the viewslots\r\n   * usually called during grids unbind event\r\n   * \r\n   */\r\n  public unbindAndDetachColumns(): void {\r\n    for (let i = 0; i < this.groupRowViewSlots.length; i++) {\r\n\r\n      this.leftRowViewSlots[i].unbind();\r\n      this.leftRowViewSlots[i].detached();\r\n\r\n      this.mainRowViewSlots[i].unbind();\r\n      this.mainRowViewSlots[i].detached();\r\n\r\n      this.rightRowViewSlots[i].unbind();\r\n      this.rightRowViewSlots[i].detached();\r\n\r\n      this.groupRowViewSlots[i].unbind();\r\n      this.groupRowViewSlots[i].detached();\r\n    }\r\n\r\n    this.leftHeaderViewSlot.unbind();\r\n    this.leftHeaderViewSlot.detached();\r\n\r\n    this.mainHeaderViewSlot.unbind();\r\n    this.mainHeaderViewSlot.detached();\r\n\r\n    this.rightHeaderViewSlot.unbind();\r\n    this.rightHeaderViewSlot.detached();\r\n\r\n     // todo loading screen and footer, or grouping elements?\r\n\r\n  }\r\n\r\n  /**\r\n   * removes all viewslots\r\n   * Todo, is this even in use?\r\n   * \r\n   */\r\n  public clear(): void {\r\n    for (let i = 0; i < this.groupRowViewSlots.length; i++) {\r\n      this.leftRowViewSlots[i].removeAll();\r\n      this.mainRowViewSlots[i].removeAll();\r\n      this.rightRowViewSlots[i].removeAll();\r\n      this.groupRowViewSlots[i].removeAll();\r\n    }\r\n\r\n    this.leftHeaderViewSlot.removeAll();\r\n    this.mainHeaderViewSlot.removeAll();\r\n    this.rightHeaderViewSlot.removeAll();\r\n\r\n    this.leftRowViewSlots = null;\r\n    this.mainRowViewSlots = null;\r\n    this.rightRowViewSlots = null;\r\n    this.groupRowViewSlots = null;\r\n    this.leftRowViewSlots = [];\r\n    this.mainRowViewSlots = [];\r\n    this.rightRowViewSlots = [];\r\n    this.groupRowViewSlots = [];\r\n\r\n    this.leftHeaderViewSlot = null;\r\n    this.mainHeaderViewSlot = null;\r\n    this.rightHeaderViewSlot = null;\r\n\r\n    // todo loading screen and footer, or grouping elements?\r\n  }\r\n\r\n}\r\n","import { Controller, ColumBindingContextObjectInterface, EntityInterface } from '../interfaces';\r\n\r\n/**\r\n * Columns context object\r\n * Helps control the columns/rows get groups etc\r\n *\r\n */\r\nexport class ColumnBindingContext {\r\n  public setupleft: ColumBindingContextObjectInterface[];\r\n  public setupmain: ColumBindingContextObjectInterface[];\r\n  public setupright: ColumBindingContextObjectInterface[];\r\n  public setupgroup: ColumBindingContextObjectInterface[];\r\n  public setupgrouping: number;\r\n  public changeGrouping: Function;\r\n  private controller: Controller;\r\n  [key: string]: any;\r\n\r\n\r\n\r\n  constructor(controller: Controller) {\r\n    this.controller = controller;\r\n    this.setupleft = [];\r\n    this.setupmain = [];\r\n    this.setupright = [];\r\n    this.setupgroup = [];\r\n    this.setupgrouping = 0;\r\n    this.changeGrouping = (x: EntityInterface) => {\r\n      if (x) {\r\n        if (x.__groupExpanded) {\r\n          this.controller.collapseGroup(x.__groupID);\r\n        } else {\r\n          this.controller.expandGroup(x.__groupID);\r\n        }\r\n\r\n      }\r\n\r\n    };\r\n\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * todo description\r\n   *\r\n   */\r\n  public clear() {\r\n    this.setupleft = [];\r\n    this.setupmain = [];\r\n    this.setupright = [];\r\n    this.setupgroup = [];\r\n    this.setupgrouping = 0;\r\n    this.changeGrouping = (x: EntityInterface) => {\r\n      if (x) {\r\n        if (x.__groupExpanded) {\r\n          this.controller.collapseGroup(x.__groupID);\r\n        } else {\r\n          this.controller.expandGroup(x.__groupID);\r\n        }\r\n      }\r\n    };\r\n\r\n  }\r\n\r\n}\r\n","import { Controller, RowCacheInterface, BindingContextInterface } from '../interfaces';\r\n\r\n/**\r\n * Updates the data rows and sets correct row highlight\r\n * \r\n */\r\nexport class RowDataBinder {\r\n  private element: Element;\r\n  private controller: Controller;\r\n  private rebindRowBinded: EventListenerOrEventListenerObject;\r\n  private rebindAllRowsBinded: EventListenerOrEventListenerObject;\r\n\r\n\r\n\r\n  constructor(element: Element, controller: Controller) {\r\n    this.element = element;\r\n    this.controller = controller;\r\n\r\n  }\r\n\r\n\r\n  /**\r\n   * Called when grid is created to set defaults, add event listners\r\n   * \r\n   */\r\n  public init(): void {\r\n    this.addEventListener();\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * rebinds row passed in\r\n   * \r\n   */\r\n  public rebindRowNo(row: number): void {\r\n    let rowCache = this.controller.htmlCache.rowCache;\r\n    let foundRowCache = null;\r\n    rowCache.forEach((cache) => {\r\n      if (cache.row === row) {\r\n        foundRowCache = cache;\r\n      }\r\n    });\r\n    if (foundRowCache) {\r\n      this.rebindRow(({\r\n        detail: {\r\n          currentRow: row,\r\n          rowCache: foundRowCache,\r\n          downScroll: true\r\n        }\r\n      } as CustomEvent));\r\n    }\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * adds needed event listners to know when to rebind on scrolling\r\n   * \r\n   */\r\n  private addEventListener(): void {\r\n    this.rebindRowBinded = this.rebindRow.bind(this);\r\n    this.rebindAllRowsBinded = this.rebindAllRows.bind(this);\r\n    this.element.addEventListener('avg-rebind-row', this.rebindRowBinded);\r\n    this.element.addEventListener('avg-rebind-all-rows', this.rebindAllRowsBinded);\r\n  }\r\n\r\n\r\n\r\n  /*  unused for now\r\n      private removeEventListener(): void {\r\n      this.element.removeEventListener('avg-rebind-row', this.rebindRowBinded);\r\n      this.element.removeEventListener('avg-rebind-all-rows', this.rebindAllRowsBinded);\r\n    }*/\r\n\r\n\r\n\r\n  /**\r\n   * rebinds row, called from event listener\r\n   * \r\n   */\r\n  private rebindRow(event: CustomEvent): void {\r\n    let currentRow = event.detail.currentRow;\r\n    let rowCache: RowCacheInterface = event.detail.rowCache;\r\n    let downScroll = event.detail.downScroll;\r\n\r\n    let bindingContext = rowCache.bindingContext;\r\n\r\n    this.controller.getElement(currentRow, downScroll, (data: BindingContextInterface) => {\r\n\r\n      if (data.rowRef) {\r\n        if (data.rowRef.__group) {\r\n          rowCache.isGroup = true;\r\n        } else {\r\n          rowCache.isGroup = false;\r\n        }\r\n      }\r\n\r\n      // todo clean up...\r\n      let isSelected = data.selection.isSelected(rowCache.row);\r\n      if (isSelected) {\r\n        if (!rowCache.selected) {\r\n          rowCache.selected = true;\r\n          rowCache.left.classList.add('avg-selected-row');\r\n          rowCache.main.classList.add('avg-selected-row');\r\n          rowCache.right.classList.add('avg-selected-row');\r\n        }\r\n      } else {\r\n        if (rowCache.selected) {\r\n          rowCache.selected = false;\r\n          rowCache.left.classList.remove('avg-selected-row');\r\n          rowCache.main.classList.remove('avg-selected-row');\r\n          rowCache.right.classList.remove('avg-selected-row');\r\n        }\r\n      }\r\n\r\n      if (data.rowRef === undefined || data.rowRef === null) {\r\n        rowCache.left.style.display = 'none';\r\n        rowCache.main.style.display = 'none';\r\n        rowCache.right.style.display = 'none';\r\n        rowCache.group.style.display = 'none';\r\n      } else {\r\n        rowCache.left.style.display = 'block';\r\n        rowCache.main.style.display = 'block';\r\n        rowCache.right.style.display = 'block';\r\n        rowCache.group.style.display = 'block';\r\n      }\r\n\r\n      // row ref & temp\r\n      bindingContext.rowRef = data.rowRef;\r\n      bindingContext.tempRef = data.tempRef;\r\n\r\n      // selection\r\n      bindingContext.selection = data.selection;\r\n\r\n      // is selected\r\n      bindingContext.selected = isSelected;\r\n\r\n      // row number\r\n      bindingContext.row = currentRow;\r\n\r\n    });\r\n  }\r\n\r\n\r\n  /**\r\n   * rebinds all rows, called from event listener\r\n   * \r\n   */\r\n  private rebindAllRows(event: CustomEvent): void {\r\n\r\n    let rowCache: RowCacheInterface[] = event.detail.rowCache;\r\n    let downScroll = event.detail.downScroll;\r\n\r\n    // tslint:disable-next-line:prefer-for-of\r\n    for (let i = 0; i < rowCache.length; i++) {\r\n\r\n      this.controller.getElement(rowCache[i].row, downScroll, (data: BindingContextInterface) => {\r\n\r\n        let bindingContext = rowCache[i].bindingContext;\r\n\r\n        if (data.rowRef) {\r\n          if (data.rowRef.__group) {\r\n            rowCache[i].isGroup = true;\r\n          } else {\r\n            rowCache[i].isGroup = false;\r\n          }\r\n        }\r\n\r\n        // todo clean up...\r\n        let isSelected = data.selection.isSelected(rowCache[i].row);\r\n        if (isSelected) {\r\n          if (!rowCache[i].selected) {\r\n            rowCache[i].selected = true;\r\n            rowCache[i].left.classList.add('avg-selected-row');\r\n            rowCache[i].main.classList.add('avg-selected-row');\r\n            rowCache[i].right.classList.add('avg-selected-row');\r\n          }\r\n\r\n        } else {\r\n          if (rowCache[i].selected) {\r\n            rowCache[i].selected = false;\r\n            rowCache[i].left.classList.remove('avg-selected-row');\r\n            rowCache[i].main.classList.remove('avg-selected-row');\r\n            rowCache[i].right.classList.remove('avg-selected-row');\r\n          }\r\n        }\r\n\r\n        if (data.rowRef === undefined || data.rowRef === null) {\r\n          rowCache[i].left.style.display = 'none';\r\n          rowCache[i].main.style.display = 'none';\r\n          rowCache[i].right.style.display = 'none';\r\n          rowCache[i].group.style.display = 'none';\r\n        } else {\r\n          rowCache[i].left.style.display = 'block';\r\n          rowCache[i].main.style.display = 'block';\r\n          rowCache[i].right.style.display = 'block';\r\n          rowCache[i].group.style.display = 'block';\r\n        }\r\n\r\n        // row ref & tempRef\r\n        bindingContext.rowRef = data.rowRef;\r\n        bindingContext.tempRef = data.tempRef;\r\n\r\n        // selection\r\n        bindingContext.selection = data.selection;\r\n\r\n        // is selected\r\n        bindingContext.selected = isSelected;\r\n\r\n        // row number\r\n        bindingContext.row = rowCache[i].row;\r\n        \r\n\r\n      });\r\n\r\n    }\r\n\r\n  }\r\n\r\n}\r\n","import { HtmlCache, Controller, SelectionInterface, RowCacheInterface } from '../interfaces';\r\n\r\n/**\r\n * Listen for click on rows\r\n * Fixes/calls selection to set correct highlighs when using shift/contrl button for multiselect\r\n * Calls grids single/dbl click events\r\n * \r\n */\r\nexport class RowClickHandler {\r\n  private element: Element;\r\n  private htmlCache: HtmlCache;\r\n  private selectionMode: string;\r\n  private lastRowSelected: number;\r\n  private lastKeyKodeUsed: string;\r\n  private selectedRows: number;\r\n  private controller: Controller;\r\n  private getSelection: Function;\r\n  private manualSelection: boolean;\r\n\r\n\r\n\r\n  constructor(element: Element, htmlCache: HtmlCache) {\r\n    this.element = element;\r\n    this.htmlCache = htmlCache;\r\n    this.selectionMode = 'none';\r\n    this.lastRowSelected = -1; // this need to be reset when filtering\r\n    this.lastKeyKodeUsed = 'none'; // this ned to be reset when filtering\r\n    this.selectedRows = 0;\r\n  }\r\n\r\n\r\n  /**\r\n   * Called when grid is created to set defaults, add event listners\r\n   * \r\n   */\r\n  public init(mode: boolean, manualSelection: boolean, controller: Controller): void {\r\n\r\n    this.controller = controller;\r\n    this.getSelection = controller.getSelectionContext.bind(controller);\r\n    this.manualSelection = manualSelection;\r\n\r\n    if (mode === false) {\r\n      this.selectionMode = 'single';\r\n    }\r\n    if (mode === true) {\r\n      this.selectionMode = 'multiple';\r\n    }\r\n\r\n    this.addEventlistener();\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * updates selection, usually after row click values is checked and selection set\r\n   * \r\n   */\r\n  public updateSelectionOnAllRows(): void {\r\n\r\n    let rowCache = this.htmlCache.rowCache;\r\n    // tslint:disable-next-line:prefer-for-of\r\n    for (let i = 0; i < rowCache.length; i++) {\r\n      let selection: SelectionInterface = this.getSelection();\r\n      let isSelected = selection.isSelected(rowCache[i].row);\r\n      rowCache[i].bindingContext.selected = isSelected;\r\n      rowCache[i].bindingContext.selected = isSelected;\r\n      rowCache[i].bindingContext.selected = isSelected;\r\n\r\n      if (isSelected) {\r\n        if (!rowCache[i].selected) {\r\n          rowCache[i].selected = true;\r\n          rowCache[i].left.classList.add('avg-selected-row');\r\n          rowCache[i].main.classList.add('avg-selected-row');\r\n          rowCache[i].right.classList.add('avg-selected-row');\r\n        }\r\n      } else {\r\n        if (rowCache[i].selected) {\r\n          rowCache[i].selected = false;\r\n          rowCache[i].left.classList.remove('avg-selected-row');\r\n          rowCache[i].main.classList.remove('avg-selected-row');\r\n          rowCache[i].right.classList.remove('avg-selected-row');\r\n        }\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * returns mode of selection used\r\n   * \r\n   */\r\n  public getSelectionMode(): string {\r\n    let selection: SelectionInterface = this.getSelection();\r\n    return selection.getMode();\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * remove event listeners set, not is use really atm\r\n   * \r\n   */\r\n  public removeEventlistener(): void {\r\n    let avgLeftRows = this.htmlCache.avg_left_rows;\r\n    let avgMainRows = this.htmlCache.avg_main_rows;\r\n    let avgRightRows = this.htmlCache.avg_right_rows;\r\n\r\n    for (let i = 0; i < avgLeftRows.length; i++) {\r\n      avgLeftRows[i].onclick = null;\r\n      avgLeftRows[i].ondblclick = null;\r\n      avgMainRows[i].onclick = null;\r\n      avgMainRows[i].ondblclick = null;\r\n      avgRightRows[i].onclick = null;\r\n      avgRightRows[i].ondblclick = null;\r\n    }\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * add click events to rows\r\n   * \r\n   */\r\n  private addEventlistener(): void {\r\n    let avgLeftRows = this.htmlCache.avg_left_rows;\r\n    let avgMainRows = this.htmlCache.avg_main_rows;\r\n    let avgRightRows = this.htmlCache.avg_right_rows;\r\n\r\n    for (let i = 0; i < avgLeftRows.length; i++) {\r\n      avgLeftRows[i].onclick = this.singleClick.bind(this);\r\n      avgLeftRows[i].ondblclick = this.doubleClick.bind(this);\r\n      avgMainRows[i].onclick = this.singleClick.bind(this);\r\n      avgMainRows[i].ondblclick = this.doubleClick.bind(this);\r\n      avgRightRows[i].onclick = this.singleClick.bind(this);\r\n      avgRightRows[i].ondblclick = this.doubleClick.bind(this);\r\n    }\r\n  }\r\n\r\n\r\n\r\n  private getCache(target: Element): RowCacheInterface {\r\n    let no = -1;\r\n    this.htmlCache.rowCache.forEach((row, i) => {\r\n      if (row.left === target) {\r\n        no = i;\r\n      }\r\n      if (row.main === target) {\r\n        no = i;\r\n      }\r\n      if (row.right === target) {\r\n        no = i;\r\n      }\r\n      if (row.group === target) {\r\n        no = i;\r\n      }\r\n    });\r\n    if (no !== -1) {\r\n      return this.htmlCache.rowCache[no];\r\n    } else {\r\n      return null;\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Called when single click event triggers\r\n   * \r\n   */\r\n  private singleClick(event: MouseEvent): void {\r\n    let cache = this.getCache((event.currentTarget as Element)) || ({} as RowCacheInterface);\r\n    if (!cache.isGroup) {\r\n      this.highlightRow(event, cache.row);\r\n      this.controller.select(cache.row);\r\n    }\r\n    if (!this.manualSelection) {\r\n      this.controller.raiseEvent('v-row-onclick', {\r\n        evt: event,\r\n        data: cache.bindingContext.rowRef,\r\n        bindingContext: cache.bindingContext,\r\n        row: cache.row\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Called when dbl click event triggers\r\n   * \r\n   */\r\n  private doubleClick(event: MouseEvent): void {\r\n    let cache = this.getCache((event.currentTarget as Element)) || ({} as RowCacheInterface);\r\n    this.controller.raiseEvent('v-row-ondblclick', {\r\n      evt: event,\r\n      data: cache.bindingContext.rowRef,\r\n      bindingContext: cache.bindingContext,\r\n      row: cache.row\r\n    });\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * calls selection added to grid\r\n   * \r\n   */\r\n  private isSelected(row: number): boolean {\r\n    let selection: SelectionInterface = this.getSelection();\r\n    return selection.isSelected(row);\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * calls selection added to grid\r\n   * \r\n   */\r\n  private deSelect(row: number): void {\r\n    let selection: SelectionInterface = this.getSelection();\r\n    selection.deSelect(row);\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * calls selection added to grid\r\n   * \r\n   */\r\n  private select(row: number, addToSelection: boolean): void {\r\n    let selection: SelectionInterface = this.getSelection();\r\n    selection.select(row, addToSelection);\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * calls selection added to grid\r\n   * \r\n   */\r\n  private selectRange(start: number, end: number): void {\r\n    let selection: SelectionInterface = this.getSelection();\r\n    selection.selectRange(start, end);\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * calls selection added to grid\r\n   * \r\n   */\r\n  private getSelectedRows(): number[] {\r\n    let selection: SelectionInterface = this.getSelection();\r\n    return selection.getSelectedRows();\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * calls selection added to grid\r\n   * \r\n   */\r\n  private setSelectedRows(newRows: number[]): void {\r\n    let selection: SelectionInterface = this.getSelection();\r\n    selection.setSelectedRows(newRows);\r\n  }\r\n\r\n\r\n  /**\r\n   * logic behind multiselect of rows with shoft and contrl button\r\n   * \r\n   */\r\n  private highlightRow(e: MouseEvent, currentRow: number): void {\r\n\r\n    let isSel: boolean;\r\n    let manualSel = this.manualSelection;\r\n    if (!manualSel) {\r\n      let currentselectedRows = this.getSelectedRows();\r\n      let currentKeyKode = '';\r\n\r\n      if (currentRow !== this.lastRowSelected || currentselectedRows[0] !== currentRow) {\r\n\r\n        if (currentRow <= (this.controller.collectionLength() - 1)) { // do I need to check this?\r\n\r\n          if (this.selectionMode === 'multiple') { // if multiselect duh!\r\n\r\n            if (e.shiftKey) {\r\n              currentKeyKode = 'shift';\r\n              currentselectedRows = this.getSelectedRows();\r\n              if (currentselectedRows.length > 0 && this.lastKeyKodeUsed === 'none') {\r\n                this.lastRowSelected = currentselectedRows[0];\r\n                this.lastKeyKodeUsed = 'shift';\r\n              }\r\n            }\r\n\r\n            if (e.ctrlKey) {\r\n              currentKeyKode = 'ctrl';\r\n            }\r\n\r\n            if (!e.ctrlKey && !e.shiftKey) {\r\n              currentKeyKode = 'none';\r\n            }\r\n\r\n            switch (true) {\r\n              case currentKeyKode === 'none':\r\n                this.select(currentRow, false);\r\n                break;\r\n              case this.lastKeyKodeUsed === 'shift' && currentKeyKode === 'ctrl':\r\n\r\n                isSel = this.isSelected(currentRow);\r\n                if (isSel === true) {\r\n                  this.deSelect(currentRow);\r\n                } else {\r\n                  this.select(currentRow, true);\r\n                }\r\n                this.lastRowSelected = currentRow;\r\n                break;\r\n\r\n              case this.lastKeyKodeUsed === 'ctrl' && currentKeyKode === 'shift':\r\n                let oldSel = this.getSelectedRows();\r\n                this.selectRange(this.lastRowSelected, currentRow);\r\n                let newSel = this.getSelectedRows();\r\n                this.setSelectedRows(oldSel.concat(newSel));\r\n\r\n                break;\r\n\r\n              case this.lastKeyKodeUsed === 'ctrl' && currentKeyKode === 'ctrl':\r\n\r\n                isSel = this.isSelected(currentRow);\r\n                if (isSel === true) {\r\n                  this.deSelect(currentRow);\r\n                } else {\r\n                  this.select(currentRow, true);\r\n                }\r\n                this.lastRowSelected = currentRow;\r\n                break;\r\n\r\n              case this.lastKeyKodeUsed === 'none' && currentKeyKode === 'ctrl':\r\n\r\n                isSel = this.isSelected(currentRow);\r\n                if (isSel === true) {\r\n                  this.deSelect(currentRow);\r\n                } else {\r\n                  this.select(currentRow, true);\r\n                }\r\n                this.lastRowSelected = currentRow;\r\n                break;\r\n\r\n              case this.lastKeyKodeUsed === 'shift' && currentKeyKode === 'shift':\r\n\r\n                if (this.lastRowSelected > currentRow) {\r\n                  this.selectRange(currentRow, this.lastRowSelected);\r\n                } else {\r\n                  this.selectRange(this.lastRowSelected, currentRow);\r\n                }\r\n\r\n                break;\r\n\r\n              case this.lastKeyKodeUsed === 'none' && currentKeyKode === 'shift':\r\n\r\n                if (this.lastRowSelected !== -1) {\r\n                  if (this.lastRowSelected > currentRow) {\r\n                    this.selectRange(currentRow, this.lastRowSelected);\r\n                  } else {\r\n                    this.selectRange(this.lastRowSelected, currentRow);\r\n                  }\r\n                } else {\r\n                  this.lastRowSelected = currentRow;\r\n                  this.select(currentRow, false);\r\n                }\r\n                break;\r\n              default:\r\n                console.error('error, this should not happen, debug selection');\r\n            }\r\n          } else {\r\n            this.select(currentRow, false);\r\n          }\r\n          this.lastKeyKodeUsed = currentKeyKode;\r\n\r\n          // update selection on rows\r\n          this.updateSelectionOnAllRows();\r\n        }\r\n      } else {\r\n\r\n        // same row clicked again\r\n        if (e.ctrlKey) {\r\n          currentKeyKode = 'ctrl';\r\n        }\r\n\r\n        // if ctrl button we want to remove selection\r\n        if (currentKeyKode === 'ctrl') {\r\n          this.lastKeyKodeUsed = currentKeyKode;\r\n          isSel = this.isSelected(currentRow);\r\n          if (isSel === true) {\r\n            this.deSelect(currentRow);\r\n          }\r\n          this.lastRowSelected = currentRow;\r\n        } else {\r\n          // else we just want to make it current..\r\n          // isSel = this.isSelected(currentRow);\r\n          this.select(currentRow, false);\r\n        }\r\n        // update selection on rows\r\n        this.updateSelectionOnAllRows();\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n","import { ViewSlot } from 'aurelia-framework';\r\nimport {\r\n  ViewCompiler,\r\n  Container,\r\n  ViewResources,\r\n  HtmlCache,\r\n  ColumnBindingContext,\r\n  ViewSlots,\r\n  Controller,\r\n  GroupingContextInterface\r\n} from '../interfaces';\r\n\r\n// Two classes here!   GroupContext & GroupingElements\r\n\r\n\r\n\r\n/**\r\n * Private class used by grouping elements\r\n * This is the context of the box in the top panel\r\n *\r\n */\r\nclass GroupContext {\r\n  public viewSlot: ViewSlot;\r\n  private name: string;\r\n  private field: string;\r\n\r\n  private groupingElements: GroupingElements;\r\n\r\n  constructor(name: string, field: string, groupingElements: GroupingElements) {\r\n    this.name = name;\r\n    this.field = field;\r\n    this.groupingElements = groupingElements;\r\n  }\r\n\r\n  public remove(): void {\r\n    this.groupingElements.removeGroup(this.field);\r\n    this.groupingElements.removeFromGrouping(this.field);\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * Creates the grouping elements viewports and logic\r\n * This take care of the top panel, when called it adds the html element with its context\r\n * It also fixes/sets corrcet panel when grid is created/ grouping runs by code\r\n *\r\n */\r\n// tslint:disable-next-line:max-classes-per-file\r\nexport class GroupingElements {\r\n  private element: Element;\r\n  private htmlCache: HtmlCache;\r\n  private viewSlots: ViewSlots;\r\n  private viewCompiler: ViewCompiler;\r\n  private container: Container;\r\n  private viewResources: ViewResources;\r\n  private groupContext: GroupingContextInterface;\r\n  private lastAdded: string;\r\n  private colGroupElement: string;\r\n  private controller: Controller;\r\n  private avgTopPanel: Element;\r\n  private columnBindingContext: ColumnBindingContext;\r\n\r\n  constructor(\r\n    element: Element,\r\n    viewCompiler: ViewCompiler,\r\n    container: Container,\r\n    viewResources: ViewResources,\r\n    htmlCache: HtmlCache,\r\n    viewSlots: ViewSlots,\r\n    columnBindingContext: ColumnBindingContext) {\r\n\r\n    // basic stuff\r\n    this.element = element;\r\n    this.htmlCache = htmlCache;\r\n    this.viewSlots = viewSlots;\r\n    this.viewCompiler = viewCompiler;\r\n    this.container = container;\r\n    this.viewResources = viewResources;\r\n    this.columnBindingContext = columnBindingContext;\r\n\r\n    // group context\r\n    this.groupContext = ({} as GroupingContextInterface);\r\n    this.lastAdded = null;\r\n  }\r\n\r\n\r\n\r\n  public getGroups(): any[] {\r\n    const x = [];\r\n    for (const i in this.groupContext) {\r\n      if (i) {\r\n        x.push(i);\r\n      }\r\n    }\r\n    return x;\r\n  }\r\n\r\n\r\n  /**\r\n   * Called when grid is created to set defaults, add event listners\r\n   *\r\n   */\r\n  public init(controller: Controller, colGroupElement: string) {\r\n    this.controller = controller;\r\n    this.avgTopPanel = this.htmlCache.avg_top_panel;\r\n    this.colGroupElement = colGroupElement;\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * todo description\r\n   *\r\n   */\r\n  public addGroup(name: string, field: string): void {\r\n    if (!this.groupContext[field]) {\r\n      this.lastAdded = field;\r\n      this.groupContext[field] = new GroupContext(name, field, this);\r\n\r\n      // view-viewslot\r\n      // tslint:disable:max-line-length\r\n      const viewMarkup = this.colGroupElement ||\r\n        `<div class=\"avg-grouping\">  \r\n          <p class=\"avg-grouping-element\" v-sort=\"field.bind:field\">${name} \r\n            <i><svg click.delegate=\"remove()\" class=\"icon iconhidden\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\">\r\n              <path d=\"M3 4l4.3 4L3 12h1.4L8 8.7l3.5 3.3H13L8.6 8 13 4h-1.5L8 7.3 4.4 4H3z\"/>\r\n            </svg></i>\r\n          </p>\r\n         </div>`;\r\n\r\n      const viewFactory = this.viewCompiler.compile(`<template>${viewMarkup}</template>`, this.viewResources);\r\n      const view = viewFactory.create(this.container);\r\n      const viewSlot = new ViewSlot(this.avgTopPanel, true);\r\n      viewSlot.add(view);\r\n      this.groupContext[field].viewSlot = viewSlot;\r\n      this.viewSlots.groupingViewSlots.push(this.groupContext[field]);\r\n    }\r\n    this.groupContext[field].viewSlot.bind(this.groupContext[field]);\r\n    this.groupContext[field].viewSlot.attached();\r\n\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * todo description\r\n   *\r\n   */\r\n  public removeGroup(field?: string): void {\r\n    if (field) {\r\n      if (this.groupContext[field] !== null) {\r\n        this.groupContext[field].viewSlot.unbind();\r\n        this.groupContext[field].viewSlot.detached();\r\n        this.groupContext[field].viewSlot.removeAll();\r\n        this.groupContext[field] = null; // <-- I could prb reuse them...\r\n      }\r\n    } else {\r\n      if (this.lastAdded) {\r\n        if (this.groupContext[this.lastAdded] !== null) {\r\n          this.groupContext[this.lastAdded].viewSlot.unbind();\r\n          this.groupContext[this.lastAdded].viewSlot.detached();\r\n          this.groupContext[this.lastAdded].viewSlot.removeAll();\r\n          this.groupContext[this.lastAdded] = null;\r\n          this.lastAdded = null;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * todo description\r\n   *\r\n   */\r\n  public addToGrouping(): void {\r\n    if (this.lastAdded) {\r\n      const toAddField = this.groupContext[this.lastAdded].field;\r\n      const toAddTitle = this.groupContext[this.lastAdded].name;\r\n      this.controller.addToGrouping({ field: toAddField, title: toAddTitle });\r\n      this.lastAdded = null;\r\n    }\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * todo description\r\n   *\r\n   */\r\n  public removeFromGrouping(field: string): void {\r\n    this.controller.removeFromGrouping(field);\r\n  }\r\n\r\n}\r\n","import {\r\n  ViewCompiler,\r\n  ViewResources,\r\n  Container,\r\n  TaskQueue,\r\n  MainMarkup,\r\n  MainScrollEvents,\r\n  ColumnMarkup,\r\n  HtmlHeightWidth,\r\n  ViewSlots,\r\n  ColumnBindingContext,\r\n  HtmlCache,\r\n  RowDataBinder,\r\n  RowClickHandler,\r\n  GroupingElements,\r\n  RowMarkup,\r\n  LoadingScreen,\r\n  ContextMenu,\r\n  VGrid,\r\n  GridConnectorInterface,\r\n  RowScrollEvents,\r\n  ColConfigInterface,\r\n  BindingContextInterface,\r\n  OverrideContextInterface,\r\n  DragDropShardContextInterface,\r\n  ResizeShardContextInterface,\r\n  SelectionInterface,\r\n  Footer,\r\n  GroupingObjInterface\r\n} from '../interfaces';\r\n\r\n/**\r\n * Class controller is the class the grid connector use to call grid code\r\n * It pretty much have function to most GridConnector should not call functions not inside the controller\r\n * That will break things fast\r\n * TODO: fix some bad parts\r\n *\r\n */\r\nexport class Controller {\r\n  public vGrid: VGrid;\r\n  public htmlCache: HtmlCache;\r\n  public htmlHeightWidth: HtmlHeightWidth;\r\n  public viewSlots: ViewSlots;\r\n  public columnBindingContext: ColumnBindingContext;\r\n  public rowDataBinder: RowDataBinder;\r\n  public mainMarkup: MainMarkup;\r\n  public mainScrollEvents: MainScrollEvents;\r\n  public rowMarkup: RowMarkup;\r\n  public rowScrollEvents: RowScrollEvents;\r\n  public rowClickHandler: RowClickHandler;\r\n  public columnMarkup: ColumnMarkup;\r\n  public groupingElements: GroupingElements;\r\n  public loadingScreen: LoadingScreen;\r\n  public contextMenu: ContextMenu;\r\n  public htmlcolumnMarkupCache: ColumnMarkup;\r\n  public element: Element;\r\n  public viewCompiler: ViewCompiler;\r\n  public container: Container;\r\n  public viewResources: ViewResources;\r\n  public taskQueue: TaskQueue;\r\n  public dragDropAttributeSharedContext: DragDropShardContextInterface;\r\n  public resizeAttributeSharedContext: ResizeShardContextInterface;\r\n  public colConfig: ColConfigInterface[];\r\n  public backupColConfig: ColConfigInterface[];\r\n  public colRepeater: boolean;\r\n  public colRepeatRowTemplate: string;\r\n  public colRepeatRowHeaderTemplate: string;\r\n  public colGroupRow: string;\r\n  public colGroupElement: string;\r\n  public customMenuTemplates: any;\r\n  public bindingContext: BindingContextInterface;\r\n  public overrideContext: OverrideContextInterface;\r\n  public attRowHeight: number;\r\n  public attHeaderHeight: number;\r\n  public attFooterHeight: number;\r\n  public attPanelHeight: number;\r\n  public attMultiSelect: boolean;\r\n  public attManualSelection: boolean;\r\n  public attGridConnector: GridConnectorInterface;\r\n  public attOnRowDraw: Function;\r\n  public attI18N: any;\r\n  public attDataDelay: number;\r\n  public loadingScreenTemplate: string;\r\n  public footerTemplate: string;\r\n  public footer: Footer;\r\n  public attVariableRowHeight: boolean;\r\n\r\n\r\n\r\n  constructor(vGrid: VGrid) {\r\n    // main context\r\n    this.vGrid = vGrid;\r\n\r\n    // main element\r\n    this.element = vGrid.element;\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * gets the grid conext, so we have access to it in this class\r\n   *\r\n   */\r\n  public getContext() {\r\n\r\n    const c = this.vGrid;\r\n    // column configuration\r\n    this.colConfig = c.colConfig;\r\n    this.backupColConfig = c.backupColConfig;\r\n    this.colRepeater = c.colRepeater;\r\n    this.colGroupRow = c.colGroupRow;\r\n    this.colGroupElement = c.colGroupElement;\r\n    this.colRepeatRowTemplate = c.colRepeatRowTemplate;\r\n    this.colRepeatRowHeaderTemplate = c.colRepeatRowHeaderTemplate;\r\n    this.customMenuTemplates = c.customMenuTemplates;\r\n    this.loadingScreenTemplate = c.loadingScreenTemplate;\r\n    this.footerTemplate = c.footerTemplate;\r\n\r\n    // aurelia classes\r\n    this.viewCompiler = c.viewCompiler;\r\n    this.container = c.container;\r\n    this.viewResources = c.viewResources;\r\n    this.taskQueue = c.taskQueue;\r\n\r\n    // classes\r\n    this.htmlCache = c.htmlCache;\r\n    this.htmlHeightWidth = c.htmlHeightWidth;\r\n    this.viewSlots = c.viewSlots;\r\n    this.columnBindingContext = c.columnBindingContext;\r\n    this.rowDataBinder = c.rowDataBinder;\r\n    this.mainMarkup = c.mainMarkup;\r\n    this.mainScrollEvents = c.mainScrollEvents;\r\n    this.rowMarkup = c.rowMarkup;\r\n    this.rowScrollEvents = c.rowScrollEvents;\r\n    this.rowClickHandler = c.rowClickHandler;\r\n    this.htmlcolumnMarkupCache = c.columnMarkup;\r\n    this.columnMarkup = c.columnMarkup;\r\n    this.groupingElements = c.groupingElements;\r\n    this.loadingScreen = c.loadingScreen;\r\n    this.contextMenu = c.contextMenu;\r\n    this.footer = c.footer;\r\n\r\n    // attributes\r\n    this.bindingContext = c.bindingContext;\r\n    this.overrideContext = c.overrideContext;\r\n    this.attRowHeight = c.attRowHeight;\r\n    this.attHeaderHeight = c.attHeaderHeight;\r\n    this.attFooterHeight = c.attFooterHeight;\r\n    this.attPanelHeight = c.attPanelHeight;\r\n    this.attMultiSelect = c.attMultiSelect;\r\n    this.attManualSelection = c.attManualSelection;\r\n    this.attGridConnector = c.attGridConnector;\r\n    this.attOnRowDraw = c.attOnRowDraw;\r\n    this.attI18N = c.attI18N;\r\n    this.attDataDelay = c.attDataDelay;\r\n    this.attVariableRowHeight = c.attVariableRowHeight;\r\n\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * triggers event to call for all translation keys\r\n   *\r\n   */\r\n  public triggerI18N(): void {\r\n    const keys: any = Object.keys({\r\n      close: 'Close',\r\n      pinLeft: 'Pin left',\r\n      pinRight: 'Pin Right',\r\n      groupBy: 'Group By',\r\n      sortAscending: 'Sort Ascending',\r\n      sortDescending: 'Sort Descending',\r\n      showAll: 'Show All',\r\n      clearCurrent: 'Clear Current',\r\n      clearAll: 'Clear All',\r\n      chooseOperator: 'Choose Operator',\r\n      back: 'Back',\r\n      equals: 'Equals',\r\n      lessThanOrEqual: 'Less than or equal',\r\n      greaterThanOrEqual: 'Greater than or equal',\r\n      lessThan: 'Less than',\r\n      greaterThan: 'Greater than',\r\n      contains: 'Contains',\r\n      notEqualTo: 'Not equal to',\r\n      doesNotContain: 'Does not contain',\r\n      beginsWith: 'Begins with',\r\n      endsWith: 'Ends with',\r\n      loading: 'loading'\r\n    });\r\n\r\n    if (this.attI18N) {\r\n      keys.forEach((key: string) => {\r\n        if (this.vGrid.filterOperatorTranslationKeys[key]) {\r\n          this.vGrid.filterOperatorNames[this.vGrid.filterOperatorTranslationKeys[key]] = this.attI18N(key);\r\n        }\r\n        this.contextMenu.updateMenuStrings(key, this.attI18N(key));\r\n      });\r\n\r\n      this.raiseEvent('filterTranslation', {});\r\n      const loading: string = this.attI18N('loading') || keys.loading;\r\n      this.loadingScreen.updateLoadingDefaultLoadingMessage(loading);\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * get the row state from gridconnector, used for variable row height\r\n   *\r\n   */\r\n  public getRowHeightState(): any {\r\n    return this.attGridConnector.getRowHeightState();\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * creates the grid\r\n   *\r\n   */\r\n  public createGrid(): void {\r\n\r\n    // translate ?\r\n    if (this.attI18N) {\r\n      this.triggerI18N();\r\n    }\r\n\r\n    // sets default height and widths of the grid\r\n    this.htmlHeightWidth.addDefaultsAttributes(\r\n      this.attHeaderHeight,\r\n      this.attRowHeight,\r\n      this.attFooterHeight,\r\n      this.attPanelHeight);\r\n\r\n    // more updates to main markup\r\n    this.htmlHeightWidth.setWidthFromColumnConfig(this.colConfig);\r\n\r\n    // generate main markup and updates our cache\r\n    this.mainMarkup.generateMainMarkup();\r\n    this.htmlCache.updateMainMarkup();\r\n\r\n    this.rowDataBinder.init();\r\n    // starts the scroll events on main html markup (left/main/right)\r\n    this.mainScrollEvents.init();\r\n\r\n    // creates main row markup and attaches them, then we chache this html also\r\n    this.rowMarkup.init(this.attRowHeight);\r\n    this.htmlCache.updateRowsMarkup();\r\n\r\n    // add scroll events (the one that moves the actual rows when scroling)\r\n    this.rowScrollEvents.init(this.attRowHeight, this.attDataDelay, this.attVariableRowHeight);\r\n\r\n    // creates the views/viewports we need\r\n    this.columnMarkup.init(\r\n      this.colConfig,\r\n      this.overrideContext,\r\n      this.colRepeater,\r\n      this.colRepeatRowTemplate,\r\n      this.colRepeatRowHeaderTemplate,\r\n      this.colGroupRow);\r\n\r\n\r\n    // register the rowClick handler (when clicking on rows)\r\n    this.rowClickHandler.init(this.attMultiSelect, this.attManualSelection, this);\r\n    // create grouping elements helper... pretty much just creates view when dragging to group box\r\n    this.groupingElements.init(this, this.colGroupElement);\r\n    // loading screen view\r\n    this.loadingScreen.init(this.overrideContext, this.loadingScreenTemplate);\r\n    // footer view\r\n    this.footer.init(this.overrideContext, this.footerTemplate);\r\n    // add context menu\r\n    this.contextMenu.init(this.customMenuTemplates, this.overrideContext);\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * gets element from datasource\r\n   *\r\n   */\r\n  public getElement(rowNumber: number, isDownScroll: boolean, callbackFN: Function): void {\r\n    this.attGridConnector.getElement({\r\n      row: rowNumber,\r\n      isDown: isDownScroll,\r\n      callback: (rowContext: BindingContextInterface) => {\r\n        if (this.attOnRowDraw) {\r\n          this.attOnRowDraw(rowContext);\r\n        }\r\n        callbackFN(rowContext);\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * expand group/groups\r\n   *\r\n   */\r\n  public expandGroup(id: string): void {\r\n    this.attGridConnector.expandGroup(id);\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * collapses group/groups\r\n   *\r\n   */\r\n  public collapseGroup(id: string): void {\r\n    this.attGridConnector.collapseGroup(id);\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * select row passed in\r\n   *\r\n   */\r\n  public select(row: number): void {\r\n    this.attGridConnector.select(row);\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * adds to grouping\r\n   *\r\n   */\r\n  public addToGrouping(groupObj: GroupingObjInterface): void {\r\n    const currentGrouping = this.attGridConnector.getGrouping();\r\n    let exist = false;\r\n    currentGrouping.forEach((group: GroupingObjInterface) => {\r\n      if (group.field === groupObj.field) {\r\n        exist = true;\r\n      }\r\n    });\r\n    if (!exist) {\r\n      currentGrouping.push(groupObj);\r\n      this.attGridConnector.group(currentGrouping, true);\r\n    }\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * removes field from grouping\r\n   *\r\n   */\r\n  public removeFromGrouping(field: string): void {\r\n    const currentGrouping = this.attGridConnector.getGrouping();\r\n    let index = -1;\r\n    currentGrouping.forEach((group, i) => {\r\n      if (field === group.field) {\r\n        index = i;\r\n      }\r\n    });\r\n    if (index !== -1) {\r\n      currentGrouping.splice(index, 1);\r\n      this.attGridConnector.group(currentGrouping, true);\r\n    }\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * returns selection context, so you have the current one used/set in gridconnector/datasource\r\n   *\r\n   */\r\n  public getSelectionContext(): SelectionInterface {\r\n    const sel: SelectionInterface = this.attGridConnector.getSelection();\r\n    return sel;\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * triggers event on grids element, nice for attributes etc\r\n   *\r\n   */\r\n  public raiseEvent(name: string, data = {}): void {\r\n    const event = new CustomEvent(name, {\r\n      detail: data,\r\n      bubbles: true\r\n    });\r\n    this.element.dispatchEvent(event);\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * sets the loading screen to show or hide\r\n   *\r\n   */\r\n  public setLoadingScreen(value: boolean, msg?: string, collectionLength?: number): Promise<void> {\r\n\r\n    if (value) {\r\n      return this.loadingScreen.enable(msg, collectionLength);\r\n    } else {\r\n      return this.loadingScreen.disable();\r\n    }\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * updates and call classes that needs height updated if its changed\r\n   *\r\n   */\r\n  public updateHeights(): void {\r\n    const totalRowHeight = this.htmlHeightWidth.getNewHeight(this.attGridConnector.getDatasourceLength());\r\n    const bodyHeight = this.htmlCache.avg_content_main.clientHeight;\r\n    if (bodyHeight < totalRowHeight) {\r\n      // hide it\r\n      (this.htmlCache.avg_content_vhandle as HTMLElement).style.display = 'block';\r\n    } else {\r\n      // display\r\n      (this.htmlCache.avg_content_vhandle as HTMLElement).style.display = 'none';\r\n    }\r\n    this.rowScrollEvents.setCollectionLength(this.attGridConnector.getDatasourceLength());\r\n    this.htmlHeightWidth.setCollectionLength(this.attGridConnector.getDatasourceLength(), bodyHeight < totalRowHeight);\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * checks main column with, and hides scrollbar if not needed\r\n   *\r\n   */\r\n  public udateHorizontalScroller(): void {\r\n    const bodyWidth = this.htmlCache.avg_content_main.clientWidth;\r\n    const scrollWidth = this.htmlHeightWidth.avgContentMainScroll_Width;\r\n\r\n    // todo : I also need to adjust scrollheight here, but its a start\r\n    if (bodyWidth < scrollWidth) {\r\n      // hide it\r\n      (this.htmlCache.avg_content_hhandle as HTMLElement).style.display = 'block';\r\n      this.htmlHeightWidth.setCollectionLength(this.collectionLength(), true);\r\n    } else {\r\n      // display\r\n      (this.htmlCache.avg_content_hhandle as HTMLElement).style.display = 'none';\r\n      this.htmlHeightWidth.setCollectionLength(this.collectionLength(), false);\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * checks and updates the grouping in panel, also fixes it if not corrent\r\n   *\r\n   */\r\n  public updateHeaderGrouping(groups: GroupingObjInterface[]): void {\r\n    const length = groups.length;\r\n    this.columnBindingContext.setupgrouping = length;\r\n    if (length === 0) {\r\n      const groupings = this.groupingElements.getGroups();\r\n      groupings.forEach((group) => {\r\n        this.groupingElements.removeGroup(group.field);\r\n      });\r\n    } else {\r\n      let check = true;\r\n      groups.forEach((group: GroupingObjInterface) => {\r\n        if (!this.groupingElements[group.field]) {\r\n          check = false;\r\n        }\r\n      });\r\n      if (!check) {\r\n        // check failed\r\n        const groupings = this.groupingElements.getGroups();\r\n\r\n        // remove groups\r\n        groupings.forEach((group) => {\r\n          this.groupingElements.removeGroup(group);\r\n        });\r\n        // add groups\r\n        groups.forEach((group: GroupingObjInterface) => {\r\n          // really dont know what they want to call it.. lets just use attribute name\r\n          // todo, I should have something better here...\r\n          this.groupingElements.addGroup(group.title, group.field);\r\n        });\r\n      }\r\n    }\r\n    this.htmlHeightWidth.adjustWidthsColumns(this.columnBindingContext, length);\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * returns the collection length\r\n   *\r\n   */\r\n  public collectionLength(): number {\r\n    return this.attGridConnector.getDatasourceLength();\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * triggers scroll event with new position, to top if no params\r\n   *\r\n   */\r\n  public triggerScroll(position: number): void {\r\n    if (position === null || position === undefined) {\r\n      position = this.htmlCache.avg_content_vhandle.scrollTop;\r\n    } else {\r\n      this.htmlCache.avg_content_vhandle.scrollTop = position;\r\n      this.htmlCache.avg_content_left.scrollTop = position;\r\n      this.htmlCache.avg_content_main.scrollTop = position;\r\n      this.htmlCache.avg_content_right.scrollTop = position;\r\n    }\r\n\r\n    this.raiseEvent('avg-scroll', {\r\n      isScrollBarScrolling: true,\r\n      isDown: true,\r\n      newTopPosition: position\r\n    });\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * returns to row in current view/scrolltop\r\n   *\r\n   */\r\n  public getTopRow(): number {\r\n    const position = this.htmlCache.avg_content_vhandle.scrollTop;\r\n    return Math.floor(position / this.attRowHeight);\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * rebinds all rows\r\n   *\r\n   */\r\n  public rebindAllRows(): void {\r\n    this.raiseEvent('avg-rebind-all-rows', {\r\n      rowCache: this.htmlCache.rowCache,\r\n      downScroll: true\r\n    });\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * returns the column config, and can be used to save current user settings\r\n   *\r\n   */\r\n  public getColumnConfig(): ColConfigInterface[] {\r\n\r\n    // get current colcontext\r\n    const colContext = this.columnBindingContext;\r\n\r\n    // temp array to hold data\r\n    const tempArray: any[] = [];\r\n\r\n    // loop and find out whats what..\r\n    for (let i = 0; i < this.colConfig.length; i++) {\r\n      switch (true) {\r\n        case colContext.setupleft[i].show:\r\n          tempArray.push({\r\n            no: i,\r\n            set: 1,\r\n            colPinLeft: true,\r\n            colPinRight: false,\r\n            left: colContext.setupleft[i].left - 10000,\r\n            width: colContext.setupleft[i].width\r\n          });\r\n          break;\r\n        case colContext.setupmain[i].show:\r\n          tempArray.push({\r\n            no: i,\r\n            set: 2,\r\n            colPinLeft: false,\r\n            colPinRight: false,\r\n            left: colContext.setupmain[i].left,\r\n            width: colContext.setupmain[i].width\r\n          });\r\n          break;\r\n        case colContext.setupright[i].show:\r\n          tempArray.push({\r\n            no: i,\r\n            set: 3,\r\n            colPinLeft: false,\r\n            colPinRight: true,\r\n            left: colContext.setupright[i].left + 10000,\r\n            width: colContext.setupright[i].width\r\n          });\r\n          break;\r\n        default:\r\n        // need to add option for hidden column, but that is created yet...\r\n      }\r\n    }\r\n\r\n    // temp colconf to return\r\n    const newColConfig: ColConfigInterface[] = [];\r\n\r\n    // loop and set correct params\r\n    this.colConfig.forEach((col: ColConfigInterface, i: number) => {\r\n      const temp = ({\r\n        colWidth: tempArray[i].width,\r\n        colRowTemplate: col.colRowTemplate,\r\n        colHeaderTemplate: col.colHeaderTemplate,\r\n        colField: col.colField ? col.colField.replace('rowRef.', '') : col.colField,\r\n        colPinLeft: tempArray[i].colPinLeft,\r\n        colPinRight: tempArray[i].colPinRight,\r\n        colHeaderName: col.colHeaderName,\r\n        colAddLabelAttributes: col.colAddLabelAttributes,\r\n        colAddFilterAttributes: col.colAddFilterAttributes,\r\n        colAddRowAttributes: col.colAddRowAttributes,\r\n        colSort: col.colSort,\r\n        colDisplayEdit: col.colDisplayEdit,\r\n        colFilter: col.colFilter,\r\n        colFilterTop: col.colFilterTop,\r\n        colCss: col.colCss,\r\n        colType: col.colType,\r\n        __colSortHelper: tempArray[i].left\r\n      } as ColConfigInterface);\r\n\r\n      newColConfig.push(temp);\r\n    });\r\n\r\n    // sort array\r\n    newColConfig.sort(\r\n      (a, b) => {\r\n        return a.__colSortHelper - b.__colSortHelper;\r\n      });\r\n\r\n    // return current config\r\n    return newColConfig;\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * sets the new column config and updates the grid\r\n   *\r\n   */\r\n  public setColumnConfig(colConfig: ColConfigInterface[]): void {\r\n    const length = this.columnBindingContext.setupgrouping;\r\n    this.viewSlots.unbindAndDetachColumns();\r\n    this.columnBindingContext.clear();\r\n    this.viewSlots.clear();\r\n    this.colConfig = colConfig || this.backupColConfig;\r\n    this.columnMarkup.init(\r\n      this.colConfig,\r\n      this.overrideContext,\r\n      this.colRepeater,\r\n      this.colRepeatRowTemplate,\r\n      this.colRepeatRowHeaderTemplate,\r\n      this.colGroupRow);\r\n    this.viewSlots.bindAndAttachColumns(\r\n      this.overrideContext,\r\n      this.columnBindingContext,\r\n      this.attGridConnector.getSelection());\r\n    this.htmlHeightWidth.setWidthFromColumnConfig(this.colConfig);\r\n    this.columnBindingContext.setupgrouping = length;\r\n    this.htmlHeightWidth.adjustWidthsColumns(this.columnBindingContext, length);\r\n    this.udateHorizontalScroller();\r\n    this.rebindAllRows();\r\n  }\r\n\r\n}\r\n","import { ViewSlot } from 'aurelia-framework';\r\nimport { ViewCompiler, Container, ViewResources, ViewSlots } from '../interfaces';\r\nimport { OverrideContextInterface } from '../interfaces';\r\n\r\n/**\r\n * Creates the loading screen viewport and binds it\r\n * Controller calls this to enable/disable (show/hide) it\r\n * \r\n */\r\nexport class LoadingScreen {\r\n  private element: Element;\r\n  private viewSlots: ViewSlots;\r\n  private viewCompiler: ViewCompiler;\r\n  private container: Container;\r\n  private viewResources: ViewResources;\r\n  private loading: boolean;\r\n  private loadingMessage: string;\r\n  private overrideContext: OverrideContextInterface;\r\n\r\n\r\n\r\n  constructor(\r\n    element: Element,\r\n    viewCompiler: ViewCompiler,\r\n    container: Container,\r\n    viewResources: ViewResources,\r\n    viewSlots: ViewSlots\r\n  ) {\r\n    this.element = element;\r\n    this.viewSlots = viewSlots;\r\n    this.viewCompiler = viewCompiler;\r\n    this.container = container;\r\n\r\n    this.viewResources = viewResources;\r\n    this.loading = false;\r\n    this.loadingMessage = 'Loading';\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * update default loading test, used by the translation\r\n   * \r\n   */\r\n  public updateLoadingDefaultLoadingMessage(msg: string): void {\r\n    this.loadingMessage = msg;\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * call when creating the grid so we have custom html if any and overridecontext to use\r\n   * \r\n   */\r\n  public init(overrideContext: OverrideContextInterface, loadingScreenTemplate: string): void {\r\n    this.overrideContext = overrideContext;\r\n    let loadingScreentHtml = loadingScreenTemplate || `[\r\n      <div class=\"avg-overlay\" if.bind=\"loading\">\r\n      </div>\r\n      <div if.two-way=\"loading\" class=\"avg-progress-indicator\">\r\n      <div class=\"avg-progress-bar\" role=\"progressbar\" style=\"width:100%\">\r\n      <span>$au{ loadingMessage }</span>\r\n      </div>\r\n      </div>`.replace(/\\$(au{)/g, '${');\r\n\r\n    let viewFactory = this.viewCompiler.compile(\r\n      `<template>\r\n      ${loadingScreentHtml}\r\n      </template>`,\r\n      this.viewResources);\r\n\r\n    let view = viewFactory.create(this.container);\r\n    let loadingScreenViewSlot = new ViewSlot(this.element, true);\r\n    loadingScreenViewSlot.add(view);\r\n\r\n    // bind\r\n    loadingScreenViewSlot.bind(this, {\r\n      bindingContext: this,\r\n      parentOverrideContext: this.overrideContext\r\n    });\r\n    loadingScreenViewSlot.attached();\r\n\r\n    this.viewSlots.loadingScreenViewSlot = loadingScreenViewSlot;\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * shows the loadingscreen overlay until removed\r\n   * \r\n   */\r\n  public enable(msg?: string, collectionLength?: number): Promise<any> {\r\n    return new Promise((resolve: Function) => {\r\n      this.loading = collectionLength ? collectionLength > 10000 ? true : false : false;\r\n      this.loadingMessage = msg || '...';\r\n      setTimeout(() => {\r\n        resolve(null);\r\n      });\r\n    });\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * removes the loadingscreen overlay\r\n   * \r\n   */\r\n  public disable(): Promise<any> {\r\n    return new Promise((resolve: Function) => {\r\n      this.loading = false;\r\n      setTimeout(() => {\r\n        resolve();\r\n      });\r\n    });\r\n  }\r\n\r\n}\r\n","// tslint:disable:max-line-length\r\nimport { ViewSlot } from 'aurelia-framework';\r\nimport { ViewCompiler, Container, ViewResources, ViewSlots, OverrideContextInterface } from '../interfaces';\r\n\r\n/**\r\n * Creates the context menus used in the grid\r\n * \r\n */\r\nexport class ContextMenu {\r\n    public show: boolean;\r\n    private viewCompiler: ViewCompiler;\r\n    private container: Container;\r\n    private viewResources: ViewResources;\r\n    private viewSlots: ViewSlots;\r\n    private overrideContext: OverrideContextInterface;\r\n    private top: number;\r\n    private left: number;\r\n    private pinnedMenu: boolean;\r\n    private sortMenu: boolean;\r\n    private filterMainMenu: boolean;\r\n    private filterOptionsMenu: boolean;\r\n    private groupbyMenu: boolean;\r\n    private callback: Function;\r\n    private menuStrings: any = {\r\n        close: 'Close',\r\n        pinLeft: 'Pin left',\r\n        pinRight: 'Pin Right',\r\n        groupBy: 'Group By',\r\n        sortAscending: 'Sort Ascending',\r\n        sortDescending: 'Sort Descending',\r\n        showAll: 'Show All',\r\n        clearCurrent: 'Clear Current',\r\n        clearAll: 'Clear All',\r\n        chooseOperator: 'Choose Operator',\r\n        back: 'Back',\r\n        equals: 'Equals',\r\n        lessThanOrEqual: 'Less than or equal',\r\n        greaterThanOrEqual: 'Greater than or equal',\r\n        lessThan: 'Less than',\r\n        greaterThan: 'Greater than',\r\n        contains: 'Contains',\r\n        notEqualTo: 'Not equal to',\r\n        doesNotContain: 'Does not contain',\r\n        beginsWith: 'Begins with',\r\n        endsWith: 'Ends with'\r\n    };\r\n\r\n\r\n\r\n    constructor(viewCompiler: ViewCompiler, container: Container, viewResources: ViewResources, viewSlots: ViewSlots) {\r\n        this.viewCompiler = viewCompiler;\r\n        this.container = container;\r\n        this.viewResources = viewResources;\r\n        this.viewSlots = viewSlots;\r\n        this.setDefaults();\r\n    }\r\n\r\n\r\n\r\n  /**\r\n   * todo description\r\n   * \r\n   */\r\n    public setDefaults(): void {\r\n        this.top = 0;\r\n        this.left = 0;\r\n        this.show = false;\r\n        this.pinnedMenu = false;\r\n        this.sortMenu = false;\r\n        this.filterMainMenu = false;\r\n        this.filterOptionsMenu = false;\r\n    }\r\n\r\n\r\n\r\n  /**\r\n   * add the custom templates if any and overridecontext to use\r\n   * \r\n   */\r\n    public init(customMenuTemplates: any, overrideContext: OverrideContextInterface): void {\r\n        this.overrideContext = overrideContext;\r\n        let viewFactory = this.viewCompiler.compile(`<template>${this.menuHtml(customMenuTemplates)}</template>`, this.viewResources);\r\n        let view = viewFactory.create(this.container);\r\n        let viewSlot: ViewSlot = new ViewSlot(document.body, true);\r\n        viewSlot.add(view);\r\n        this.viewSlots.contextMenu = viewSlot;\r\n        viewSlot.bind(this, { bindingContext: this, parentOverrideContext: this.overrideContext });\r\n        viewSlot.attached();\r\n    }\r\n\r\n\r\n\r\n  /**\r\n   * opens the menu\r\n   * \r\n   */\r\n    public openMenu(options: {\r\n        left: number,\r\n        top: number,\r\n        pinned?: string,\r\n        sort?: string,\r\n        groupby?: string,\r\n        filter?: string,\r\n        callback?: Function\r\n    }): void {\r\n        this.left = options.left;\r\n        this.top = options.top;\r\n        this.pinnedMenu = options.pinned ? true : false;\r\n        this.sortMenu = options.sort ? true : false;\r\n        this.groupbyMenu = options.groupby ? true : false;\r\n        this.filterMainMenu = options.filter ? true : false;\r\n        this.show = true;\r\n        this.callback = options.callback;\r\n    }\r\n\r\n\r\n\r\n  /**\r\n   * menu click event\r\n   * \r\n   */\r\n    public menuClick(type: string, option: string, event: Event): void {\r\n        switch (true) {\r\n            case type === 'filter' && option === 'options':\r\n                this.showFilterOptions();\r\n                break;\r\n            case type === 'filterOption' && option === 'Back':\r\n                this.hideFilterOptions();\r\n                break;\r\n            case type === 'close' && option === 'true':\r\n                this.show = false;\r\n                break;\r\n            default:\r\n                let result = this.callback(type, option, event);\r\n                if (result) {\r\n                    this.show = false;\r\n                    this.pinnedMenu = false;\r\n                    this.sortMenu = false;\r\n                    this.filterMainMenu = false;\r\n                    this.filterOptionsMenu = false;\r\n                }\r\n        }\r\n    }\r\n\r\n\r\n\r\n  /**\r\n   * update/translate menu strings\r\n   * \r\n   */\r\n    public updateMenuStrings(key: string, text: string) {\r\n\r\n        if (this.menuStrings[key]) {\r\n            this.menuStrings[key] = text;\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n  /**\r\n   * active the filter menu\r\n   * \r\n   */\r\n    private showFilterOptions(): void {\r\n        this.filterOptionsMenu = true;\r\n    }\r\n\r\n\r\n\r\n  /**\r\n   * hide the filter menu\r\n   * \r\n   */\r\n    private hideFilterOptions(): void {\r\n        this.filterOptionsMenu = false;\r\n    }\r\n\r\n    /*  positionMenu(x, y) {\r\n        //not in use atm\r\n        let clickCoordsX = this.left;\r\n        let clickCoordsY = this.top;\r\n    \r\n        this.menuWidth = this.menu.offsetWidth + 4;\r\n        this.menuHeight = this.menu.offsetHeight + 4;\r\n    \r\n        this.windowWidth = window.innerWidth;\r\n        this.windowHeight = window.innerHeight;\r\n    \r\n        if ((this.windowWidth - this.clickCoordsX) < this.menuWidth) {\r\n          this.left = this.windowWidth - this.menuWidth + \"px\";\r\n        } else {\r\n          this.left = this.clickCoordsX + \"px\";\r\n        }\r\n    \r\n        if ((this.windowHeight - this.clickCoordsY) < this.menuHeight) {\r\n          this.top = this.windowHeight - this.menuHeight + \"px\";\r\n        } else {\r\n          this.top = this.clickCoordsY + \"px\";\r\n        }\r\n      }*/\r\n\r\n\r\n\r\n    /**\r\n     * get the markup (custom if any, or else the markup)\r\n     * \r\n     */\r\n    private menuHtml(customMenuTemplates: any): string {\r\n\r\n        let menuTop: string =\r\n            `<div css=\"top:$au{top}px;left:$au{left}px\" if.bind=\"show\" class=\"avg-default avg-menu\">`.replace(/\\$(au{)/g, '${');\r\n\r\n        let menuClose: string = customMenuTemplates.close ||\r\n            `<ul if.bind=\"show\" class=\"avg-menu__items\">\r\n                <li class=\"avg-menu__item\">\r\n                <p click.delegate=\"menuClick('close','true')\" class=\"avg-menu__link\">\r\n                    <svg class=\"icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\">\r\n                      <path d=\"M3 4l4.3 4L3 12h1.4L8 8.7l3.5 3.3H13L8.6 8 13 4h-1.5L8 7.3 4.4 4H3z\"/>\r\n                      </svg> $au{menuStrings.close}\r\n                </p>\r\n                </li>\r\n            </ul>`.replace(/\\$(au{)/g, '${');\r\n\r\n        let menuPinned: string = customMenuTemplates.pinned ||\r\n            `<ul if.bind=\"pinnedMenu && !filterOptionsMenu\" class=\"avg-menu__items\">\r\n                <li class=\"avg-menu__item\">\r\n                <p click.delegate=\"menuClick('pinned','left', $event)\" class=\"avg-menu__link\">\r\n                    <i class=\"avg-fa avg-text\"></i> $au{menuStrings.pinLeft}\r\n                </p>\r\n                </li>\r\n                <li class=\"avg-menu__item\">\r\n                <p click.delegate=\"menuClick('pinned','right', $event)\" class=\"avg-menu__link\">\r\n                    <i class=\"avg-fa avg-text\"></i> $au{menuStrings.pinRight}\r\n                </p>\r\n                </li>\r\n            </ul>`.replace(/\\$(au{)/g, '${');\r\n\r\n        let menuGroupby: string = customMenuTemplates.groupby ||\r\n            `<ul if.bind=\"groupbyMenu && !filterOptionsMenu\" class=\"avg-menu__items\">\r\n                <li class=\"avg-menu__item\">\r\n                <p click.delegate=\"menuClick('groupby','groupby', $event)\" class=\"avg-menu__link\">\r\n                    <svg class=\"icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\">\r\n                     <path d=\"M3 4v1h10V4H3zm3.7 2.4v1H13v-1H6.8zm0 2.4v1H13v-1H6.8zm0 2.3v1H13v-1H6.8z\"/>\r\n                      </svg> $au{menuStrings.groupBy}\r\n                </p>\r\n                </li>\r\n            </ul>`.replace(/\\$(au{)/g, '${');\r\n\r\n        let menuSort: string = customMenuTemplates.sort ||\r\n            `<ul if.bind=\"sortMenu && !filterOptionsMenu\" class=\"avg-menu__items\">\r\n                <li class=\"avg-menu__item\">\r\n                <p click.delegate=\"menuClick('sort','asc', $event)\" class=\"avg-menu__link\">\r\n                       <svg class=\"icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\">\r\n                        <path d=\"M7.4 6L3 10h1.5L8 7l3.4 3H13L8.5 6h-1z\"/>\r\n                      </svg> $au{menuStrings.sortAscending}\r\n                </p>\r\n                </li>\r\n                <li class=\"avg-menu__item\">\r\n                <p click.delegate=\"menuClick('sort','desc', $event)\" class=\"avg-menu__link\">\r\n                    <svg class=\"icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\">\r\n                        <path d=\"M7.4 10L3 6h1.5L8 9.2 11.3 6H13l-4.5 4h-1z\"/>\r\n                    </svg> $au{menuStrings.sortDescending}\r\n                </p>\r\n                </li>\r\n            </ul>`.replace(/\\$(au{)/g, '${');\r\n\r\n        let menuFilter: string = customMenuTemplates.filter ||\r\n            `<ul if.bind=\"filterMainMenu && !filterOptionsMenu\" class=\"avg-menu__items\">\r\n                <li class=\"avg-menu__item\">\r\n                <p click.delegate=\"menuClick('filter','showall', $event)\" class=\"avg-menu__link\">\r\n                    <svg class=\"icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\">\r\n                        <path d=\"M7.4 4.8v2.7H4.7v1h2.7v3h1v-3h2.8v-1H8.5V4.8h-1z\"/>\r\n                      </svg> $au{menuStrings.showAll}\r\n                </p>\r\n                </li>\r\n                <li class=\"avg-menu__item\">\r\n                <p click.delegate=\"menuClick('filter','clear', $event)\" class=\"avg-menu__link\">\r\n                    <svg class=\"icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\">\r\n                        <path d=\"M4.8 7.5h6.5v1H4.8z\">\r\n                      </svg> $au{menuStrings.clearCurrent}\r\n                </p>\r\n                </li>\r\n                <li class=\"avg-menu__item\">\r\n                <p click.delegate=\"menuClick('filter','clearall', $event)\" class=\"avg-menu__link\">\r\n                    <svg class=\"icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\">\r\n                        <path d=\"M4.8 7.5h6.5v1H4.8z\">\r\n                      </svg> $au{menuStrings.clearAll}\r\n                </p>\r\n                </li>\r\n                <li class=\"avg-menu__item\">\r\n                <p click.delegate=\"menuClick('filter','options', $event)\" class=\"avg-menu__link\">\r\n                    <svg class=\"icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\">\r\n                        <path d=\"M7.3 4v1.2L11 7.5H3v1h8l-3.7 2.2V12L13 8.4v-.8L7.3 4z\"/>\r\n                      </svg> $au{menuStrings.chooseOperator}\r\n                </p>\r\n                </li>\r\n            </ul>`.replace(/\\$(au{)/g, '${');\r\n\r\n        let menuFilterOptions: string = customMenuTemplates.filterOptions ||\r\n            `<ul if.bind=\"filterOptionsMenu\" class=\"avg-menu__items\">\r\n                <li class=\"avg-menu__item\">\r\n                <p click.delegate=\"menuClick('filterOption','Back', $event)\" class=\"avg-menu__link\">\r\n                    <svg class=\"icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\">\r\n                       <path d=\"M8.7 4v1.2L5 7.5h8v1H5l3.7 2.2V12L3 8.4v-1L8.7 4z\"/>\r\n                      </svg> $au{menuStrings.back}\r\n                </p>\r\n                </li>\r\n            </ul>\r\n            <ul if.bind=\"filterOptionsMenu\" class=\"avg-menu__items\">\r\n                <li class=\"avg-menu__item\">\r\n                <p click.delegate=\"menuClick('filterOption','=', $event)\" class=\"avg-menu__link\">\r\n                    <svg class=\"icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\">\r\n                        <path d=\"M13 7H3V6h10v1zm0 3H3V9h10v1z\"/>\r\n                      </svg> $au{menuStrings.equals}\r\n                </p>\r\n                </li>\r\n                <li class=\"avg-menu__item\">\r\n                <p click.delegate=\"menuClick('filterOption','<=', $event)\" class=\"avg-menu__link\">\r\n                    <svg class=\"icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\">\r\n                        <path d=\"M13 10.3L3 7.5v-.7L13 4v1L5.3 7 13 9.3v1zm0 1.7H3v-1h10v1z\"/>\r\n                      </svg> $au{menuStrings.lessThanOrEqual}\r\n                </p>\r\n                </li>\r\n                <li class=\"avg-menu__item\">\r\n                <p click.delegate=\"menuClick('filterOption','>=', $event)\" class=\"avg-menu__link\">\r\n                    <svg class=\"icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\">\r\n                        <path d=\"M13 7.4L3 10.2v-1l7.7-2L3 5V4l10 2.7v.7zm0 4.5H3v-1h10v1z\"/>\r\n                      </svg> $au{menuStrings.greaterThanOrEqual}\r\n                </p>\r\n                </li>\r\n                <li class=\"avg-menu__item\">\r\n                <p click.delegate=\"menuClick('filterOption','<', $event)\" class=\"avg-menu__link\">\r\n                    <svg class=\"icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\">\r\n                       <path d=\"M3 8.5L13 12v-1.2L5 8l8-2.7V4L3 7.7v1z\"/>\r\n                      </svg> $au{menuStrings.lessThan}\r\n                </p>\r\n                </li>\r\n                <li class=\"avg-menu__item\">\r\n                <p click.delegate=\"menuClick('filterOption','>', $event)\" class=\"avg-menu__link\">\r\n                    <svg class=\"icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\">\r\n                      <path d=\"M13 8L3 12v-1.4l8-3-8-3.2V3l10 4v1z\"/>\r\n                      </svg> $au{menuStrings.greaterThan}\r\n                </p>\r\n                </li>\r\n                <li class=\"avg-menu__item\">\r\n                <p click.delegate=\"menuClick('filterOption','*', $event)\" class=\"avg-menu__link\">\r\n                    <svg class=\"icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\">\r\n                        <path d=\"M13 9.7l-.7 1L8.6 9v3H7.4V9l-3.6 1.7-.7-1L7 8 3 6.2l.7-1 3.7 2V4h1.3v3l3.6-1.7.7 1L9 8l4 1.7z\"/>\r\n                      </svg> $au{menuStrings.contains}\r\n                </p>\r\n                </li>\r\n                <li class=\"avg-menu__item\">\r\n                <p click.delegate=\"menuClick('filterOption','!=', $event)\" class=\"avg-menu__link\">\r\n                    <svg class=\"icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\">\r\n                        <path d=\"M13 9.8H7.7l-1 2.2H5.7l1-2.2H2.8v-1h4L7.5 7H3V6h5l1-2H10l-1 2H13v1H9L8 9H13v1z\"/>\r\n                      </svg> $au{menuStrings.notEqualTo}\r\n                </p>\r\n                </li>\r\n                <li class=\"avg-menu__item\">\r\n                <p click.delegate=\"menuClick('filterOption','!*', $event)\" class=\"avg-menu__link\">\r\n                    <svg class=\"icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\">\r\n                       <path d=\"M5 4V10H4V4h1zm5.5 0v3l2-1.7.5 1L10.7 8 13 9.8l-.4 1-2-2V12h-1l.2-3-2.2 1.7-.3-1L9.5 8 7.3 6.3l.3-1L9.8 7V4h.7zM5 11v1H4v-1h1z\"/>\r\n                      </svg> $au{menuStrings.doesNotContain}\r\n                </p>\r\n                </li>\r\n                <li class=\"avg-menu__item\">\r\n                <p click.delegate=\"menuClick('filterOption','*=', $event)\" class=\"avg-menu__link\">\r\n                    <svg class=\"icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\">\r\n                      <path d=\"M5.2 4v3l-2-1.7-.2 1L5 8 3 9.8l.3 1 2-2V12h.6l-.2-3 2 1.8.2-1L6 8l2-1.8-.3-1-2 2L6 4H5zm3 2v1.2H13v-1H8.3zm0 2.8v1H13v-1H8.3z\"/>\r\n                      </svg> $au{menuStrings.beginsWith}\r\n                </p>\r\n                </li>\r\n                <li class=\"avg-menu__item\">\r\n                <p click.delegate=\"menuClick('filterOption','=*', $event)\" class=\"avg-menu__link\">\r\n                    <svg class=\"icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\">\r\n                        <path d=\"M10.8 4v3l2-1.8.2 1L11 8l2 1.7-.3 1-2-2V12h-.6l.2-3.2-2 2-.3-1 2-2-2-1.6.3-1 2 2L10 4h.8zm-3 2v1H3V6h4.7zm0 2.7v1H3v-1h4.7z\"/>\r\n                      </svg> $au{menuStrings.endsWith}\r\n                </p>\r\n                </li>\r\n            </ul>`.replace(/\\$(au{)/g, '${');\r\n\r\n        let menuBottom: string =\r\n            `</div>`;\r\n\r\n        let menuAll: string = customMenuTemplates.all || [\r\n            menuTop,\r\n            menuClose,\r\n            menuPinned,\r\n            menuGroupby,\r\n            menuSort,\r\n            menuFilter,\r\n            menuFilterOptions,\r\n            menuBottom,\r\n        ].join('');\r\n\r\n        return menuAll;\r\n\r\n    }\r\n}\r\n","import { ViewSlot } from 'aurelia-framework';\r\nimport { ViewCompiler, Container, ViewResources, ViewSlots } from '../interfaces';\r\nimport { OverrideContextInterface , HtmlCache} from '../interfaces';\r\n\r\n/**\r\n * Creates the footer viewport\r\n * \r\n */\r\nexport class Footer {\r\n  private htmlCache: HtmlCache;\r\n  private viewSlots: ViewSlots;\r\n  private viewCompiler: ViewCompiler;\r\n  private container: Container;\r\n  private viewResources: ViewResources;\r\n  private overrideContext: OverrideContextInterface;\r\n\r\n\r\n\r\n  constructor(\r\n    htmlCache: HtmlCache,\r\n    viewCompiler: ViewCompiler,\r\n    container: Container,\r\n    viewResources: ViewResources,\r\n    viewSlots: ViewSlots\r\n  ) {\r\n    this.htmlCache = htmlCache;\r\n    this.viewSlots = viewSlots;\r\n    this.viewCompiler = viewCompiler;\r\n    this.container = container;\r\n    this.viewResources = viewResources;\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * set the custm html if any and and overridecontext to use, then creates the viewport and binds it\r\n   * \r\n   */\r\n  public init(overrideContext: OverrideContextInterface, footerStringTemplate: string): void {\r\n    this.overrideContext = overrideContext;\r\n    let footerTemplate = footerStringTemplate || ``.replace(/\\$(au{)/g, '${');\r\n\r\n    let viewFactory = this.viewCompiler.compile(\r\n      `<template>\r\n      ${footerTemplate}\r\n      </template>`,\r\n      this.viewResources);\r\n\r\n    let view = viewFactory.create(this.container);\r\n    let footerViewSlot = new ViewSlot(this.htmlCache.avg_footer, true);\r\n    footerViewSlot.add(view);\r\n\r\n    // bind\r\n    footerViewSlot.bind(this, {\r\n      bindingContext: this,\r\n      parentOverrideContext: this.overrideContext\r\n    });\r\n    footerViewSlot.attached();\r\n\r\n    this.viewSlots.footerViewSlot = footerViewSlot;\r\n  }\r\n\r\n}\r\n","import { ViewSlot, TargetInstruction, BehaviorInstruction } from 'aurelia-framework';\r\nimport { GroupingElements } from './grid/groupingElements';\r\nexport * from 'aurelia-framework';\r\nexport { HtmlCache } from './grid/htmlCache';\r\nexport { Controller } from './grid/controller';\r\nexport { MainMarkup } from './grid/mainMarkup';\r\nexport { MainScrollEvents } from './grid/mainScrollEvents';\r\nexport { RowMarkup } from './grid/rowMarkup';\r\nexport { RowScrollEvents } from './grid/rowScrollEvents';\r\nexport { ColumnMarkup } from './grid/columnMarkup';\r\nexport { HtmlHeightWidth } from './grid/htmlHeightWidth';\r\nexport { ViewSlots } from './grid/viewSlots';\r\nexport { ColumnBindingContext } from './grid/columnBindingContext';\r\nexport { RowDataBinder } from './grid/rowDataBinder';\r\nexport { RowClickHandler } from './grid/rowClickHandler';\r\nexport { GroupingElements } from './grid/groupingElements';\r\nexport { LoadingScreen } from './grid/loadingScreen';\r\nexport { ContextMenu } from './grid/contextMenu';\r\nexport { VGrid } from './grid/v-grid';\r\nexport { GridConnector } from './gridConnector';\r\nexport { DataSource } from './dataSource';\r\nexport { Selection } from './selection';\r\nexport { ArrayFilter } from './utils/arrayFilter';\r\nexport { ArraySort } from './utils/arraySort';\r\nexport { ArrayGrouping } from './utils/arrayGrouping';\r\nexport { Footer } from './grid/footer';\r\n\r\n\r\n\r\nexport interface RowCacheInterface {\r\n  [key: string]: any;\r\n  left: HTMLElement;\r\n  main: HTMLElement;\r\n  right: HTMLElement;\r\n  group: HTMLElement;\r\n  bindingContext: BindingContextInterface;\r\n  overrideContext: any;\r\n  parentOverrideContext: any;\r\n  leftRowViewSlot: ViewSlot;\r\n  mainRowViewSlot: ViewSlot;\r\n  rightRowViewSlot: ViewSlot;\r\n  groupRowViewSlot: ViewSlot;\r\n  selection: SelectionInterface;\r\n  row: number;\r\n  top: number;\r\n  isGroup: boolean;\r\n  selected: boolean;\r\n}\r\n\r\n\r\n\r\nexport interface HeaderCacheInterface {\r\n  [key: string]: any;\r\n  left: HTMLElement;\r\n  main: HTMLElement;\r\n  right: HTMLElement;\r\n  group: HTMLElement;\r\n  bindingContext: BindingContextInterface;\r\n  overrideContext: any;\r\n  parentOverrideContext: any;\r\n  leftRowViewSlot: ViewSlot;\r\n  mainRowViewSlot: ViewSlot;\r\n  rightRowViewSlot: ViewSlot;\r\n  groupRowViewSlot: ViewSlot;\r\n}\r\n\r\n\r\n\r\nexport interface ColConfigInterface {\r\n  [key: string]: any;\r\n  colWidth?: number;\r\n  colRowTemplate?: string;\r\n  colHeaderTemplate?: string;\r\n  colField: string;\r\n  colPinLeft?: boolean;\r\n  colPinRight?: boolean;\r\n  colHeaderName?: string;\r\n  colAddLabelAttributes?: string;\r\n  colAddFilterAttributes?: string;\r\n  colAddRowAttributes?: string;\r\n  colFilterMenu?: string;\r\n  colLabelMenu?: string;\r\n  colRowMenu?: string;\r\n  colHidden?: boolean;\r\n  colDragDrop?: string;\r\n  colResizeable?: string;\r\n  colSort?: string;\r\n  colDisplayEdit?: string;\r\n  colFilter?: string;\r\n  colFilterTop?: boolean;\r\n  colCss?: string;\r\n  colType?: string;\r\n  __colSortHelper?: number;\r\n  __colHeaderTemplateGenerated?: string;\r\n  __colRowTemplateGenerated?: string;\r\n}\r\n\r\n\r\n\r\n// the properties will mostly only be on group entities..\r\n// want to rename these to .__avgXXX so we cant crash with someone else\r\nexport interface EntityInterface {\r\n  [key: string]: any;\r\n  __group?: boolean;\r\n  __groupID?: string;\r\n  __groupName?: string;\r\n  __groupLvl?: number;\r\n  __groupTotal?: number;\r\n  __groupChildren?: EntityInterface[];\r\n  __groupExpanded?: boolean;\r\n}\r\n\r\n\r\n\r\nexport interface TargetDataInterface {\r\n  [key: string]: any;\r\n  draggable: HTMLElement;\r\n  ok: boolean;\r\n  target: HTMLElement;\r\n  colType: string;\r\n  colNo: number;\r\n  context: ColumBindingContextObjectInterface;\r\n  columnsArray: ColumBindingContextObjectInterface[];\r\n  panel: boolean;\r\n}\r\n\r\n\r\n\r\nexport interface FilterObjectInterface {\r\n  [key: string]: any;\r\n  key?: string;\r\n  operator: string;\r\n  value: any;\r\n  attribute: string;\r\n}\r\n\r\n\r\n\r\nexport interface SortObjectInterface {\r\n  [key: string]: any;\r\n  attribute: string;\r\n  asc: boolean;\r\n  no?: number;\r\n}\r\n\r\n\r\n\r\nexport interface DatasourceConfigInterface {\r\n  [key: string]: any;\r\n  key?: string;\r\n  rowHeight?: number;\r\n  groupHeight?: number;\r\n}\r\n\r\n\r\n\r\nexport interface CustomTargetInstruction extends TargetInstruction {\r\n  [key: string]: any;\r\n  colHeaderTemplate?: string;\r\n  colRowTemplate?: string;\r\n  colCss?: string;\r\n  headerTemplate?: string;\r\n  rowTemplate?: string;\r\n  template?: string;\r\n  elementInstruction: CustomBehaviorInstruction;\r\n}\r\n\r\n\r\n\r\nexport interface CustomBehaviorInstruction extends BehaviorInstruction {\r\n  [key: string]: any;\r\n  colHeaderTemplate?: string;\r\n  colRowTemplate?: string;\r\n  colCss?: string;\r\n  headerTemplate?: string;\r\n  rowTemplate?: string;\r\n  template?: string;\r\n  menuTemplates?: any;\r\n}\r\n\r\n\r\n\r\nexport interface BindingContextInterface {\r\n  [key: string]: any;\r\n  rowRef: EntityInterface;\r\n  selection: SelectionInterface;\r\n  row: number;\r\n  selected: boolean;\r\n  tempRef: EntityInterface;\r\n}\r\n\r\n\r\n\r\nexport interface OverrideContextInterface {\r\n  [key: string]: any;\r\n  bindContext: any;\r\n  parentOverrideContext: any;\r\n}\r\n\r\n\r\n\r\nexport interface DragDropShardContextInterface {\r\n  [key: string]: any;\r\n  dragging: boolean;\r\n  panel: Element;\r\n  lastTarget: Element;\r\n  colType: string;\r\n  colNo: number;\r\n  curColNo: number;\r\n  columnsArray: ColumBindingContextObjectInterface[];\r\n  columnsArraySorted: ColumBindingContextObjectInterface[];\r\n  context: ColumBindingContextObjectInterface;\r\n  field: string;\r\n  title: string;\r\n}\r\n\r\n\r\n\r\nexport interface ResizeShardContextInterface {\r\n  [key: string]: any;\r\n  resizing: boolean;\r\n}\r\n\r\n\r\n\r\nexport interface ColumBindingContextObjectInterface {\r\n  [key: string]: any;\r\n  show: boolean;\r\n  left: number;\r\n  width: number;\r\n}\r\n\r\n\r\n\r\nexport interface GroupingContextInterface {\r\n  [key: string]: any;\r\n  viewSlot: ViewSlot;\r\n  name: string;\r\n  field: string;\r\n  remove: Function;\r\n  ctx: GroupingElements;\r\n}\r\n\r\n\r\n\r\nexport interface GroupingObjInterface {\r\n  [key: string]: any;\r\n  title: string;\r\n  field: string;\r\n}\r\n\r\n\r\n\r\n// only included what the grid classes is asking for, not datasource etc.\r\nexport interface SelectionInterface {\r\n  getMode(): string;\r\n  isSelected(row: number): boolean;\r\n  deSelectAll(): void;\r\n  deSelect(row: number): void;\r\n  select(row: number, add?: boolean): void;\r\n  selectRange(start: number, end: number): void;\r\n  getSelectedRows(): number[];\r\n  setSelectedRows(newRows: number[]): void;\r\n  reset(): void;\r\n}\r\n\r\n\r\n\r\n// only included what the grid classes is asking for, not datasource etc.\r\nexport interface GridConnectorInterface {\r\n  getSelection(): SelectionInterface;\r\n  connect(controller: ControllerInterface, create: Function): void;\r\n  gridCreated(): void;\r\n  select(row: number): void;\r\n  getDatasourceLength(): number;\r\n  getColConfig(): ColConfigInterface[];\r\n  setColConfig(colconfig: ColConfigInterface[]): void;\r\n  getGrouping(): GroupingObjInterface[];\r\n  group(grouping: GroupingObjInterface[], keepExpanded?: boolean): void;\r\n  getElement(options: { row: number, isDown: boolean, callback: Function }): void;\r\n  query(a: FilterObjectInterface[]): void;\r\n  orderBy(attribute: string | SortObjectInterface, addToCurrentSort?: boolean): void;\r\n  getCurrentOrderBy(): SortObjectInterface[];\r\n  getCurrentFilter(): FilterObjectInterface[];\r\n  expandGroup(id: string): void;\r\n  collapseGroup(id: string): void;\r\n  getRowHeightState(): any;\r\n}\r\n\r\nexport interface DatasourceInterface {\r\n  groupCollapse(id: string): void;\r\n  groupExpand(id: string): void;\r\n  getCurrentFilter(): FilterObjectInterface[];\r\n  getCurrentOrderBy(): SortObjectInterface[];\r\n  orderBy(attribute: string | SortObjectInterface, addToCurrentSort?: boolean): void;\r\n  removeEventListener(id: number): void;\r\n  query(options: FilterObjectInterface[]): void;\r\n  group(grouping: GroupingObjInterface[], keepExpanded?: boolean): void;\r\n  getGrouping(): GroupingObjInterface[];\r\n  getRowHeightState(): any; // todo\r\n  select(row: number): void;\r\n  addEventListener(callback: Function): number;\r\n  getSelection(): SelectionInterface;\r\n  length(): number;\r\n  getElement(row: number): EntityInterface;\r\n}\r\n\r\n\r\nexport interface ControllerInterface {\r\n  element: Element;\r\n  setLoadingScreen(value: boolean, msg?: string, collectionLength?: number): Promise<void>;\r\n  updateHeights(): void;\r\n  collectionLength(): number;\r\n  triggerScroll(position: number): void;\r\n  rebindAllRows(): void;\r\n  getColumnConfig(): ColConfigInterface[];\r\n  setColumnConfig(colConfig: ColConfigInterface[]): void;\r\n  getTopRow(): number;\r\n  updateHeaderGrouping(groups: GroupingObjInterface[]): void;\r\n  triggerI18N(): void;\r\n  udateHorizontalScroller(): void;\r\n}\r\n","// for typing only\r\nimport {\r\n  SelectionInterface,\r\n  GridConnectorInterface,\r\n  DatasourceInterface,\r\n  SortObjectInterface,\r\n  FilterObjectInterface,\r\n  ControllerInterface,\r\n  EntityInterface,\r\n  ColConfigInterface,\r\n  BindingContextInterface,\r\n  GroupingObjInterface\r\n} from './interfaces';\r\n\r\nexport class GridConnector implements GridConnectorInterface {\r\n  private selection: SelectionInterface;\r\n  private controller: ControllerInterface;\r\n  private datasource: DatasourceInterface;\r\n  private errorhandler: Function;\r\n  private eventID: number;\r\n  private initTop: number = 0;\r\n\r\n\r\n\r\n  /**\r\n   * Creates an instance of GridConnector.\r\n   *\r\n   */\r\n  constructor(datasource: DatasourceInterface, selection?: SelectionInterface, errorHandler?: Function) {\r\n    this.controller = null;\r\n    this.datasource = datasource;\r\n    this.selection = selection || datasource.getSelection();\r\n    this.errorhandler = errorHandler || null;\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Set scroll value grid will use when it loads\r\n   * Useful for when going back from a detail view\r\n   * Used by default datasource\r\n   *\r\n   */\r\n  public setInitTop(top: number): void {\r\n    this.initTop = top;\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Grid will call for this when a row is clicked\r\n   * Need be in custom gridConnector\r\n   *\r\n   */\r\n  public getSelection(): SelectionInterface {\r\n    return this.selection;\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Grid calls this to connect, we then haveto call the create function to grid to generate\r\n   * Some might need to get a datasource ready first/call server so its usefull to know if should be created\r\n   * Need be in custom gridConnector\r\n   *\r\n   */\r\n  public connect(controller: ControllerInterface, create: Function): void {\r\n    this.controller = controller;\r\n    if (typeof this.datasource.addEventListener === 'function') {\r\n      this.eventID = this.datasource.addEventListener(this.eventHandler.bind(this));\r\n    }\r\n    // keep it hidden while we create\r\n    (this.controller.element as HTMLElement).style.visibility = 'hidden';\r\n    create();\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Grid calls this when its created, you can now tell it to display data etc\r\n   * Need be in custom gridConnector\r\n   *\r\n   */\r\n  public gridCreated(): void {\r\n    // I want to be able to override this, so you could add/do more with datasource before displaying results\r\n    this.raiseEvent('sortIconUpdate');\r\n    this.controller.updateHeights();\r\n    setTimeout(() => {\r\n      this.controller.updateHeaderGrouping(this.datasource.getGrouping());\r\n      this.raiseEvent('sortIconUpdate');\r\n      this.raiseEvent('filterUpdateValues');\r\n      this.controller.triggerScroll(this.initTop);\r\n      setTimeout(() => {\r\n        // display it so we dont haveto see lags if grouping etc is set\r\n        (this.controller.element as HTMLElement).style.visibility = 'visible';\r\n      }, 100);\r\n    }, 0);\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Grid will use this to select in datasource\r\n   * Need be in custom gridConnector\r\n   *\r\n   */\r\n  public select(row: number): void {\r\n    if (typeof this.datasource.select === 'function') {\r\n      this.datasource.select(row);\r\n    }\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Used by rowScroll events class and htmlheights class to get data needed for variable row height\r\n   * Need be in custom gridConnector //Todo, check if it exsist in gridcode, so its not mandatory\r\n   *\r\n   */\r\n  public getRowHeightState(): any {\r\n    if (typeof this.datasource.getRowHeightState === 'function') {\r\n      return this.datasource.getRowHeightState();\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Grid will use this to know what size the body needs to be\r\n   * Is called a lot, so never call a remote for this data when grid needs it\r\n   * Need be in custom gridConnector\r\n   *\r\n   */\r\n  public getDatasourceLength(): number {\r\n      return this.datasource.length();\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Can be used for getting column config inside grid\r\n   *\r\n   */\r\n  public getColConfig(): ColConfigInterface[] {\r\n    return this.controller.getColumnConfig();\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Can be used for setting column config inside grid\r\n   *\r\n   */\r\n  public setColConfig(colconfig: ColConfigInterface[]): void {\r\n      this.controller.setColumnConfig(colconfig);\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Grid will call this to know if there is any grouping/what grouping is\r\n   * Need be in custom gridConnector //Todo, check if it exsist in gridcode, so its not mandatory\r\n   *\r\n   */\r\n  public getGrouping(): GroupingObjInterface[] {\r\n    if (typeof this.datasource.getGrouping === 'function') {\r\n      return this.datasource.getGrouping();\r\n    } else {\r\n      return [];\r\n    }\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Grid calls to tell it want to group\r\n   * Need be in custom gridConnector //Todo, check if it exsist in gridcode, so its not mandatory\r\n   *\r\n   */\r\n  public group(grouping: GroupingObjInterface[], keepExpanded?: boolean): void {\r\n    this.controller.setLoadingScreen(true, null, this.getDatasourceLength()).then(() => {\r\n      if (typeof this.datasource.group === 'function') {\r\n        this.datasource.group(grouping, keepExpanded);\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Grid calls to get entity for a row\r\n   * Need be in custom gridConnector\r\n   *\r\n   */\r\n  public getElement(options: { row: number, isDown: boolean, callback: Function }): void {\r\n    const rowData: EntityInterface = this.datasource.getElement(options.row);\r\n    const rowContext = ({\r\n      row: options.row,\r\n      selection: this.selection,\r\n      rowRef: rowData,\r\n      tempRef: this.getRowProperties(rowData)\r\n    } as BindingContextInterface);\r\n\r\n    options.callback(rowContext);\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Grid calls to tell it want to query\r\n   * Need be in custom gridConnector\r\n   *\r\n   */\r\n  public query(a: FilterObjectInterface[]): void {\r\n    this.controller.setLoadingScreen(true, null, this.getDatasourceLength()).then(() => {\r\n      if (typeof this.datasource.query === 'function') {\r\n        this.datasource.query(a);\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Grid calls to tell it want to sort\r\n   * Need be in custom gridConnector\r\n   *\r\n   */\r\n  public orderBy(attribute: string | SortObjectInterface, addToCurrentSort?: boolean): void {\r\n    this.controller.setLoadingScreen(true, null, this.getDatasourceLength()).then(() => {\r\n       if (typeof this.datasource.orderBy === 'function') {\r\n        this.datasource.orderBy(attribute, addToCurrentSort);\r\n       }\r\n    });\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * used to cut connection between gridConnector and datasource\r\n   * TODO: do I even use this/need this?\r\n   *\r\n   */\r\n  public destroy(): void {\r\n    if (typeof this.datasource.removeEventListener === 'function') {\r\n      this.datasource.removeEventListener(this.eventID);\r\n    }\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Grid calls to tell it want to know the current sort order\r\n   * Need be in custom gridConnector\r\n   *\r\n   */\r\n  public getCurrentOrderBy(): SortObjectInterface[] {\r\n    if (typeof this.datasource.getCurrentOrderBy === 'function') {\r\n      return this.datasource.getCurrentOrderBy();\r\n    }else {\r\n      return [];\r\n    }\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Grid calls to tell it want to know the current filter\r\n   * Need be in custom gridConnector\r\n   *\r\n   */\r\n  public getCurrentFilter(): FilterObjectInterface[] {\r\n    if (typeof this.datasource.getCurrentFilter === 'function') {\r\n      return this.datasource.getCurrentFilter();\r\n    } else {\r\n      return [];\r\n    }\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Grid calls to tell it want to expand a group/all\r\n   * Need be in custom gridConnector //Todo, check if it exsist in gridcode, so its not mandatory\r\n   *\r\n   */\r\n  public expandGroup(id: string): void {\r\n    this.controller.setLoadingScreen(true, null, this.getDatasourceLength()).then(() => {\r\n      if (typeof this.datasource.groupExpand === 'function') {\r\n        this.datasource.groupExpand(id);\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Grid calls to tell it want to collapse a group/all\r\n   * Need be in custom gridConnector //Todo, check if it exsist in gridcode, so its not mandatory\r\n   *\r\n   */\r\n  public collapseGroup(id: string): void {\r\n    this.controller.setLoadingScreen(true, null, this.getDatasourceLength()).then(() => {\r\n      if (typeof this.datasource.groupCollapse === 'function') {\r\n        this.datasource.groupCollapse(id);\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Can be used to get current scrolltop\r\n   * Use this with setInitTop if you want to go between master/detail and have same rows displayed\r\n   *\r\n   */\r\n  public getTopRow(): number {\r\n    return this.controller.getTopRow();\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Forces grid to try and update language\r\n   *\r\n   */\r\n  public triggerI18n(): void {\r\n    this.controller.triggerI18N();\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Raise event on the grid element, usefull for overriding default behavior\r\n   * TODO: I really dont want much of this, at own expense\r\n   *\r\n   */\r\n  public raiseEvent(name: string, data = {}): void {\r\n    const event = new CustomEvent(name, {\r\n      detail: data,\r\n      bubbles: true\r\n    });\r\n    if (this.controller) {\r\n      this.controller.element.dispatchEvent(event);\r\n    }\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Listen for the events from datasource, and calls needed functions\r\n   * TODO: look over all event names and rename a few\r\n   *\r\n   */\r\n  private eventHandler(event: string): boolean {\r\n    switch (event) {\r\n      case 'collection_changed':\r\n      case 'collection_grouped':\r\n      case 'collection_collapsed_all':\r\n      case 'collection_expanded_all':\r\n        this.raiseEvent('sortIconUpdate');\r\n        this.controller.updateHeights();\r\n        this.controller.udateHorizontalScroller();\r\n        this.controller.triggerScroll(0);\r\n        this.controller.updateHeaderGrouping(this.datasource.getGrouping());\r\n        this.controller.setLoadingScreen(false);\r\n        break;\r\n      case 'collection_collapsed':\r\n      case 'collection_expanded':\r\n      case 'collection_updated':\r\n        this.raiseEvent('sortIconUpdate');\r\n        this.controller.updateHeights();\r\n        this.controller.udateHorizontalScroller();\r\n        this.controller.triggerScroll(null);\r\n        this.controller.updateHeaderGrouping(this.datasource.getGrouping());\r\n        this.controller.setLoadingScreen(false);\r\n        break;\r\n      case 'collection_sorted':\r\n        this.raiseEvent('sortIconUpdate');\r\n        this.controller.rebindAllRows();\r\n        this.controller.triggerScroll(null);\r\n        this.controller.setLoadingScreen(false);\r\n        break;\r\n      case 'collection_filtered':\r\n        this.raiseEvent('sortIconUpdate');\r\n        this.controller.updateHeights();\r\n        this.controller.triggerScroll(null);\r\n        this.controller.setLoadingScreen(false);\r\n        break;\r\n      case 'selection_changed':\r\n        // nothing atm\r\n        break;\r\n      default:\r\n        console.warn('unknown event');\r\n        console.warn(event);\r\n    }\r\n    return true;\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Just used to get data for tempRef, cant use javascript refrense here\r\n   *\r\n   */\r\n  private getRowProperties(obj: { [key: string]: any }): {} {\r\n    const x: { [key: string]: any } = {};\r\n    if (obj) {\r\n      for (const k in obj) {\r\n        if (obj.hasOwnProperty(k)) {\r\n          if (x[k] !== obj[k]) {\r\n            x[k] = obj[k];\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return x;\r\n  }\r\n\r\n}\r\n","import { inject, customAttribute, bindable } from 'aurelia-framework';\r\nimport { VGrid } from '../v-grid';\r\nimport { BindingContextInterface, OverrideContextInterface } from '../../interfaces';\r\n\r\n// todo: look at adding option to disable this ?\r\n\r\n/**\r\n * Custom attribute \"v-onchange\"\r\n * Only triggers new data update on row when change event happen\r\n * Used by default by the simple html setup\r\n * Can be used with custom html\r\n * \r\n */\r\n@customAttribute('v-data-handler')\r\n@inject(Element, VGrid)\r\nexport class VGridAttributesDataHandler {\r\n    @bindable private field: string;\r\n    @bindable private value: string;\r\n    @bindable private display: string;\r\n    @bindable private edit: string;\r\n    private vGrid: VGrid;\r\n    private element: HTMLElement;\r\n    private bindingContext: BindingContextInterface;\r\n    private overrideContext: OverrideContextInterface;\r\n    private displayFormater: { fromView: Function; toView: Function };\r\n    private editFormater: { fromView: Function; toView: Function };\r\n    private tempValue: any;\r\n    private isSet: boolean = false;\r\n\r\n\r\n\r\n    constructor(element: HTMLElement, vGrid: VGrid) {\r\n        this.element = element;\r\n        this.vGrid = vGrid;\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * todo description\r\n     * \r\n     */\r\n    public attached() {\r\n        this.element.onchange = this.onChanged.bind(this);\r\n        this.element.onfocus = this.onFocus.bind(this);\r\n        this.element.onblur = this.onBlur.bind(this);\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * value changed handler\r\n     * \r\n     */\r\n    public valueChanged(newValue: any) {\r\n        if (this.isSet) {\r\n            let checkValue = this.editFormater.toView(newValue);\r\n            if (checkValue !== this.tempValue) {\r\n                (this.element as HTMLInputElement).value = this.displayFormater.toView(newValue);\r\n            }\r\n        } else {\r\n            (this.element as HTMLInputElement).value = this.displayFormater.toView(newValue);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * onfocus event handler\r\n     * \r\n     */\r\n    public onFocus() {\r\n        this.isSet = true;\r\n        (this.element as HTMLInputElement).value = this.editFormater.toView(this.value);\r\n        this.tempValue = (this.element as HTMLInputElement).value;\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * onblur event handler\r\n     * \r\n     */\r\n    public onBlur() {\r\n        if (this.tempValue === (this.element as HTMLInputElement).value) {\r\n            this.onChanged();\r\n        }\r\n        this.isSet = false;\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * onchange event handler\r\n     * \r\n     */\r\n    public onChanged() {\r\n        this.value = this.editFormater.fromView((this.element as HTMLInputElement).value);\r\n        this.bindingContext.rowRef[this.field] = this.value;\r\n        (this.element as HTMLInputElement).value = this.displayFormater.toView(this.value);\r\n        this.vGrid.controller.rowDataBinder.rebindRowNo(this.bindingContext.row);\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * when attributes binds, get valueconverters and set value\r\n     * \r\n     */\r\n    public bind(bindingContext: BindingContextInterface, overrideContext: OverrideContextInterface): void {\r\n        this.bindingContext = bindingContext;\r\n        this.overrideContext = overrideContext;\r\n        this.displayFormater = this.valueConverters(this.display);\r\n        this.editFormater = this.valueConverters(this.edit);\r\n        (this.element as HTMLInputElement).value = this.displayFormater.toView(this.value);\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * get valueConverters and bind to grid resources\r\n     * \r\n     */\r\n    private valueConverters(value: string): { fromView: Function; toView: Function } {\r\n        let valueConverter = this.vGrid.viewResources.getValueConverter.bind(this.vGrid.viewResources);\r\n        return valueConverter(value);\r\n    }\r\n}\r\n","import { inject, customAttribute, bindable } from 'aurelia-framework';\r\nimport { VGrid } from '../v-grid';\r\nimport {\r\n  ColumBindingContextObjectInterface,\r\n  DragDropShardContextInterface,\r\n  GroupingElements,\r\n  Controller,\r\n  BindingContextInterface,\r\n  OverrideContextInterface,\r\n  TargetDataInterface\r\n} from '../../interfaces';\r\n\r\n\r\n/**\r\n * Custom attribute \"v-drag-drop-col\"\r\n * Logic behind dragdrop, & enables grouping\r\n * Used by default by the simple html setup\r\n * Can be used with custom html\r\n * \r\n */\r\n@customAttribute('v-drag-drop-col')\r\n@inject(Element, VGrid)\r\nexport class VGridDragDropCol {\r\n  private vGrid: VGrid;\r\n  private element: Element;\r\n  private column: Element;\r\n  private vGridElement: Element;\r\n  private controller: Controller;\r\n  private groupingElements: GroupingElements;\r\n  private sharedContext: DragDropShardContextInterface;\r\n  private entered: boolean;\r\n  private curColNo: number;\r\n  private bindingContext: BindingContextInterface;\r\n  private overrideContext: OverrideContextInterface;\r\n  private onDragstartBinded: EventListenerOrEventListenerObject;\r\n  private onDragenterBinded: EventListenerOrEventListenerObject;\r\n  private onDragoverBinded: EventListenerOrEventListenerObject;\r\n  private onDragendBinded: EventListenerOrEventListenerObject;\r\n  private onDragOutSideBinded: EventListenerOrEventListenerObject;\r\n  private colType: string;\r\n  private colNo: number;\r\n  private context: ColumBindingContextObjectInterface;\r\n  private columnsArray: ColumBindingContextObjectInterface[];\r\n  private isPanel: boolean;\r\n  private dragColumnBlock: HTMLElement;\r\n  private mouseMoveTimer: any;\r\n  @bindable private title: string;\r\n  @bindable private field: string;\r\n\r\n\r\n\r\n  constructor(element: Element, vGrid: VGrid) {\r\n    // get contexts\r\n    this.vGrid = vGrid;\r\n    this.vGridElement = vGrid.element;\r\n    this.controller = vGrid.controller;\r\n    this.groupingElements = vGrid.groupingElements;\r\n\r\n    // get our shared context between our dragdrop attributes, holds data of the dragged one\r\n    this.sharedContext = vGrid.dragDropAttributeSharedContext;\r\n\r\n    this.element = element;\r\n    this.column = this.element;\r\n    this.entered = null;\r\n    this.curColNo = null;\r\n\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * todo description\r\n   * \r\n   */\r\n  public bind(bindingContext: BindingContextInterface, overrideContext: OverrideContextInterface): void {\r\n    this.bindingContext = bindingContext;\r\n    this.overrideContext = overrideContext;\r\n\r\n    // set binded context to our functions, wont be able to remove if binded during setting event\r\n    this.onDragstartBinded = this.onDragstart.bind(this);\r\n    this.onDragenterBinded = this.onDragenter.bind(this);\r\n    this.onDragoverBinded = this.onDragover.bind(this);\r\n    this.onDragendBinded = this.onDragend.bind(this);\r\n    this.onDragOutSideBinded = this.onDragOutSide.bind(this);\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * todo description\r\n   * \r\n   */\r\n  public unbind(): void {\r\n    // todo remove event listeners\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * todo description\r\n   * \r\n   */\r\n  public detached(): void {\r\n    //  console.log(\"detached\")\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * todo description\r\n   * \r\n   */\r\n  public attached(): void {\r\n\r\n    // get our target data (this case: this actual column..)\r\n    let result = this.getTargetData(this.column);\r\n\r\n    if (result.ok && !result.panel) {\r\n      // get column data\r\n      this.column = result.target;\r\n      this.colType = this.column.attributes.getNamedItem('avg-type').value;\r\n      this.colNo = parseInt(this.column.attributes.getNamedItem('avg-config-col').value, 10);\r\n      this.context = this.vGrid.columnBindingContext['setup' + this.colType][this.colNo];\r\n      this.columnsArray = this.vGrid.columnBindingContext['setup' + this.colType];\r\n\r\n      // when user starts to drag\r\n      this.element.addEventListener('mousedown', this.onDragstartBinded);\r\n\r\n      // why target ? bacuse thats the entire column object no mather what user have inside\r\n      result.target.addEventListener('mouseenter', this.onDragenterBinded);\r\n\r\n    }\r\n\r\n    if (result.ok && result.target.nodeName === 'AVG-TOP-PANEL') {\r\n      // if panel we need to listen and do some stuff differently\r\n      this.isPanel = true;\r\n      this.sharedContext.panel = result.target;\r\n\r\n      // if we leave, remve group\r\n      result.target.onmouseleave = () => {\r\n        if (this.sharedContext.dragging && this.sharedContext.title && this.sharedContext.field) {\r\n          this.groupingElements.removeGroup('');\r\n        }\r\n      };\r\n\r\n      // if enter and dragging, add grouping\r\n      result.target.onmouseenter = () => {\r\n        if (this.sharedContext.dragging && this.sharedContext.title && this.sharedContext.field) {\r\n          this.groupingElements.addGroup(this.sharedContext.title, this.sharedContext.field);\r\n          this.sharedContext.lastTarget = result.target;\r\n        }\r\n      };\r\n\r\n      // if mouse up during dragging we grop, if group ios added\r\n      result.target.onmouseup = () => {\r\n        if (this.sharedContext.dragging && this.sharedContext.title && this.sharedContext.field) {\r\n          this.groupingElements.addToGrouping();\r\n        }\r\n      };\r\n\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * todo description\r\n   * \r\n   */\r\n  private createDragElement(): void {\r\n\r\n    // just creates the element we drag\r\n    this.dragColumnBlock = document.createElement('div');\r\n    this.dragColumnBlock.classList.add(this.vGrid.attTheme);\r\n    this.dragColumnBlock.classList.add('avg-drag');\r\n    this.dragColumnBlock.style.top = -1200 + 'px'; // hide it\r\n    this.dragColumnBlock.style.left = -1200 + 'px';\r\n    document.body.appendChild(this.dragColumnBlock);\r\n\r\n    // <- maybe do something here, use value for custom html?\r\n    this.dragColumnBlock.innerHTML = this.title || this.vGrid.colConfig[this.colNo].colHeaderName;\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * todo description\r\n   * \r\n   */\r\n  private onDragstart(): void {\r\n\r\n    // register mouseup, so we can exit\r\n    document.addEventListener('mouseup', this.onDragendBinded);\r\n    this.vGridElement.addEventListener('mouseleave', this.onDragOutSideBinded);\r\n    this.createDragElement();\r\n\r\n    // want to delay this a little\r\n    this.mouseMoveTimer = setTimeout(() => {\r\n      // create our element we drag with upo\r\n      document.addEventListener('mousemove', this.onDragoverBinded, false);\r\n    }, 300);\r\n\r\n    // set our shared resources for all the drag drop so we know them when we enter another\r\n    this.sharedContext.dragging = true;\r\n    this.sharedContext.colType = this.colType;\r\n    this.sharedContext.context = this.context;\r\n    this.sharedContext.colNo = this.colNo;\r\n    this.sharedContext.curColNo = this.colNo;\r\n    this.sharedContext.columnsArray = this.columnsArray;\r\n    this.sharedContext.title = this.title;\r\n    this.sharedContext.field = this.field;\r\n\r\n    // build up new array we will use for setting new left\r\n    this.sharedContext.columnsArraySorted = [];\r\n    this.sharedContext.columnsArray.forEach((x) => {\r\n      this.sharedContext.columnsArraySorted.push(x);\r\n    });\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * todo description\r\n   * \r\n   */\r\n  private onDragOutSide(event: MouseEvent): void {\r\n\r\n    if (this.sharedContext.dragging) {\r\n\r\n      if (event.layerX < 0) {\r\n        let left = false;\r\n\r\n        this.vGrid.columnBindingContext.setupleft.forEach((x) => {\r\n          if (x.show) {\r\n            left = true;\r\n          }\r\n        });\r\n\r\n        if (!left) {\r\n          this.switchColumns(({\r\n            colType: 'left'\r\n          } as TargetDataInterface));\r\n        }\r\n      }\r\n\r\n      if (event.layerX > this.vGridElement.clientWidth) {\r\n        let right = false;\r\n\r\n        this.vGrid.columnBindingContext.setupright.forEach((x) => {\r\n          if (x.show) {\r\n            right = true;\r\n          }\r\n        });\r\n\r\n        if (!right) {\r\n          this.switchColumns(({\r\n            colType: 'right'\r\n          } as TargetDataInterface));\r\n        }\r\n      }\r\n\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * todo description\r\n   * \r\n   */\r\n  private onDragenter(event: MouseEvent): void {\r\n\r\n    // event.preventDefault();\r\n    if (this.sharedContext.dragging) {\r\n\r\n      // get results\r\n      let result = this.getTargetData((event.target as HTMLElement));\r\n\r\n      // if ok, and AVG-COL\r\n      if (result.target.nodeName === 'AVG-COL' && result.ok && this.sharedContext.lastTarget !== result.target) {\r\n\r\n        // set last target\r\n        this.sharedContext.lastTarget = result.target;\r\n\r\n        // if fifferent column, and same type (main/left/right) \r\n        if (result.colNo !== this.sharedContext.colNo && result.colType === this.sharedContext.colType) {\r\n\r\n          // get the left\r\n          let newLeft = this.sharedContext.columnsArray[result.colNo].left;\r\n          let oldLeft = this.sharedContext.columnsArray[this.sharedContext.colNo].left;\r\n\r\n          if (newLeft < oldLeft) {\r\n            this.sharedContext.columnsArray[this.sharedContext.colNo].left = newLeft;\r\n            this.sharedContext.columnsArray[result.colNo].left = newLeft + 1;\r\n          } else {\r\n            this.sharedContext.columnsArray[this.sharedContext.colNo].left = newLeft;\r\n            this.sharedContext.columnsArray[result.colNo].left = newLeft - 1;\r\n          }\r\n\r\n          // sort columns\r\n          this.sharedContext.columnsArraySorted.sort(\r\n            (a, b) => {\r\n              return a.left - b.left;\r\n            });\r\n\r\n          // loop and set left/right  \r\n          let appendValue = 0;\r\n          this.sharedContext.columnsArraySorted.forEach((x) => {\r\n            if (x.show) {\r\n              x.left = appendValue;\r\n              appendValue = appendValue + x.width;\r\n            }\r\n          });\r\n        }\r\n\r\n        // if coltype and colno is diffent\r\n        if (result.colNo !== this.sharedContext.colNo && result.colType !== this.sharedContext.colType) {\r\n          this.switchColumns(result);\r\n\r\n        }\r\n\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * todo description\r\n   * \r\n   */\r\n  private onDragover(event: MouseEvent): void {\r\n\r\n    // setting position of out dragBlock\r\n    if (this.dragColumnBlock) {\r\n      this.dragColumnBlock.style.top = event.clientY + 'px';\r\n      this.dragColumnBlock.style.left = event.clientX + 'px';\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * todo description\r\n   * \r\n   */\r\n  private onDragend(): void {\r\n\r\n    // clear mosuemove timer\r\n    clearTimeout(this.mouseMoveTimer);\r\n\r\n    // set dragging to false\r\n    this.sharedContext.dragging = false;\r\n\r\n    // remove out listneres\r\n    document.removeEventListener('mouseup', this.onDragendBinded);\r\n    document.removeEventListener('mousemove', this.onDragoverBinded);\r\n    this.vGridElement.removeEventListener('mouseleave', this.onDragOutSideBinded);\r\n\r\n    // reset blocks\r\n    this.sharedContext.lastTarget = null;\r\n    // this.sharedContext.group = null;\r\n\r\n    // if drag column then remove\r\n    if (this.dragColumnBlock) {\r\n      let parent = this.dragColumnBlock.parentNode;\r\n      if (parent) {\r\n        parent.removeChild(this.dragColumnBlock);\r\n        this.dragColumnBlock = null;\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * todo description\r\n   * \r\n   */\r\n  private switchColumns(result: TargetDataInterface): void {\r\n\r\n    // get vars \r\n    let width: number;\r\n    let newColType = result.colType;\r\n    let oldColType = this.sharedContext.colType;\r\n    let heightAndWidths = this.vGrid.htmlHeightWidth;\r\n\r\n    // chack type is one of the ones we handle\r\n    switch (true) {\r\n      case newColType === 'left' && oldColType === 'main':\r\n      case newColType === 'main' && oldColType === 'left':\r\n      case newColType === 'right' && oldColType === 'main':\r\n      case newColType === 'main' && oldColType === 'right':\r\n      case newColType === 'left' && oldColType === 'right':\r\n      case newColType === 'right' && oldColType === 'left':\r\n\r\n        // hide column\r\n        this.sharedContext.columnsArray[this.sharedContext.colNo].show = false;\r\n\r\n        // get to width of the column we have\r\n        width = this.sharedContext.columnsArray[this.sharedContext.colNo].width;\r\n\r\n        // sort array (I prb can remove?)\r\n        this.sharedContext.columnsArraySorted.sort(\r\n          (a, b) => {\r\n            return a.left - b.left;\r\n          });\r\n\r\n        // loop and set left/right  \r\n        let appendValue = 0;\r\n        this.sharedContext.columnsArraySorted.forEach((x) => {\r\n          if (x.show) {\r\n            x.left = appendValue;\r\n            appendValue = appendValue + x.width;\r\n          }\r\n        });\r\n\r\n        // set new col type\r\n        this.sharedContext.colType = result.colType;\r\n        this.sharedContext.columnsArray = this.vGrid.columnBindingContext['setup' + result.colType];\r\n\r\n        // show column\r\n        this.sharedContext.columnsArray[this.sharedContext.colNo].show = true;\r\n\r\n        // set correct width\r\n        this.sharedContext.columnsArray[this.sharedContext.colNo].width = width;\r\n\r\n        // set new shared column context\r\n        this.sharedContext.columnsArraySorted = [];\r\n        this.sharedContext.columnsArray.forEach((x) => {\r\n          this.sharedContext.columnsArraySorted.push(x);\r\n        });\r\n\r\n        // sort array (I prb can remove?)\r\n        this.sharedContext.columnsArraySorted.sort(\r\n          (a, b) => {\r\n            return a.left - b.left;\r\n          });\r\n\r\n        // loop and set left/right  \r\n        appendValue = 0;\r\n        this.sharedContext.columnsArraySorted.forEach((x) => {\r\n          if (x.show) {\r\n            x.left = appendValue;\r\n            appendValue = appendValue + x.width;\r\n          }\r\n        });\r\n\r\n        break;\r\n      default:\r\n        // console.log(\"Todo: Move to :\" + newColType + \", from:\" + oldColType);\r\n        break;\r\n    }\r\n\r\n    // a lot of repeated code... throw this in htmlHeightWidths class, so I can call it from somewhere else too?\r\n    if (newColType === 'left' && oldColType === 'main') {\r\n      heightAndWidths.avgContentMainScroll_Width = heightAndWidths.avgContentMainScroll_Width - width;\r\n      heightAndWidths.avgContentHhandleScroll_Width = heightAndWidths.avgContentHhandleScroll_Width - width;\r\n\r\n      heightAndWidths.avgContentLeft_Width = heightAndWidths.avgContentLeft_Width + width;\r\n      heightAndWidths.avgHeaderLeft_Width = heightAndWidths.avgHeaderLeft_Width + width;\r\n\r\n      heightAndWidths.avgContentMain_Left = heightAndWidths.avgContentMain_Left + width;\r\n      heightAndWidths.avgHeaderMain_Left = heightAndWidths.avgHeaderMain_Left + width;\r\n      heightAndWidths.avgContentHhandle_Left = heightAndWidths.avgContentHhandle_Left + width;\r\n    }\r\n\r\n    if (newColType === 'main' && oldColType === 'left') {\r\n      heightAndWidths.avgContentMainScroll_Width = heightAndWidths.avgContentMainScroll_Width + width;\r\n      heightAndWidths.avgContentHhandleScroll_Width = heightAndWidths.avgContentHhandleScroll_Width + width;\r\n\r\n      heightAndWidths.avgContentLeft_Width = heightAndWidths.avgContentLeft_Width - width;\r\n      heightAndWidths.avgHeaderLeft_Width = heightAndWidths.avgHeaderLeft_Width - width;\r\n\r\n      heightAndWidths.avgContentMain_Left = heightAndWidths.avgContentMain_Left - width;\r\n      heightAndWidths.avgHeaderMain_Left = heightAndWidths.avgHeaderMain_Left - width;\r\n      heightAndWidths.avgContentHhandle_Left = heightAndWidths.avgContentHhandle_Left - width;\r\n    }\r\n\r\n    if (newColType === 'right' && oldColType === 'main') {\r\n      heightAndWidths.avgContentMainScroll_Width = heightAndWidths.avgContentMainScroll_Width - width;\r\n      heightAndWidths.avgContentHhandleScroll_Width = heightAndWidths.avgContentHhandleScroll_Width - width;\r\n\r\n      heightAndWidths.avgContentRight_Width = heightAndWidths.avgContentRight_Width + width;\r\n      heightAndWidths.avgHeaderRight_Width = heightAndWidths.avgHeaderRight_Width + width;\r\n\r\n      heightAndWidths.avgContentMain_Right = heightAndWidths.avgContentMain_Right + width;\r\n      heightAndWidths.avgHeaderMain_Right = heightAndWidths.avgHeaderMain_Right + width;\r\n      heightAndWidths.avgContentHhandle_Right = heightAndWidths.avgContentHhandle_Right + width;\r\n    }\r\n\r\n    if (newColType === 'main' && oldColType === 'right') {\r\n      heightAndWidths.avgContentMainScroll_Width = heightAndWidths.avgContentMainScroll_Width + width;\r\n      heightAndWidths.avgContentHhandleScroll_Width = heightAndWidths.avgContentHhandleScroll_Width + width;\r\n\r\n      heightAndWidths.avgContentRight_Width = heightAndWidths.avgContentRight_Width - width;\r\n      heightAndWidths.avgHeaderRight_Width = heightAndWidths.avgHeaderRight_Width - width;\r\n\r\n      heightAndWidths.avgContentMain_Right = heightAndWidths.avgContentMain_Right - width;\r\n      heightAndWidths.avgHeaderMain_Right = heightAndWidths.avgHeaderMain_Right - width;\r\n      heightAndWidths.avgContentHhandle_Right = heightAndWidths.avgContentHhandle_Right - width;\r\n    }\r\n\r\n    if (newColType === 'left' && oldColType === 'right') {\r\n\r\n      heightAndWidths.avgContentRight_Width = heightAndWidths.avgContentRight_Width - width;\r\n      heightAndWidths.avgHeaderRight_Width = heightAndWidths.avgHeaderRight_Width - width;\r\n\r\n      heightAndWidths.avgContentLeft_Width = heightAndWidths.avgContentLeft_Width + width;\r\n      heightAndWidths.avgHeaderLeft_Width = heightAndWidths.avgHeaderLeft_Width + width;\r\n\r\n      heightAndWidths.avgContentMain_Right = heightAndWidths.avgContentMain_Right - width;\r\n      heightAndWidths.avgHeaderMain_Right = heightAndWidths.avgHeaderMain_Right - width;\r\n      heightAndWidths.avgContentHhandle_Right = heightAndWidths.avgContentHhandle_Right - width;\r\n\r\n      heightAndWidths.avgContentMain_Left = heightAndWidths.avgContentMain_Left + width;\r\n      heightAndWidths.avgHeaderMain_Left = heightAndWidths.avgHeaderMain_Left + width;\r\n      heightAndWidths.avgContentHhandle_Left = heightAndWidths.avgContentHhandle_Left + width;\r\n    }\r\n\r\n    if (newColType === 'right' && oldColType === 'left') {\r\n\r\n      heightAndWidths.avgContentRight_Width = heightAndWidths.avgContentRight_Width + width;\r\n      heightAndWidths.avgHeaderRight_Width = heightAndWidths.avgHeaderRight_Width + width;\r\n\r\n      heightAndWidths.avgContentLeft_Width = heightAndWidths.avgContentLeft_Width - width;\r\n      heightAndWidths.avgHeaderLeft_Width = heightAndWidths.avgHeaderLeft_Width - width;\r\n\r\n      heightAndWidths.avgContentMain_Right = heightAndWidths.avgContentMain_Right + width;\r\n      heightAndWidths.avgHeaderMain_Right = heightAndWidths.avgHeaderMain_Right + width;\r\n      heightAndWidths.avgContentHhandle_Right = heightAndWidths.avgContentHhandle_Right + width;\r\n\r\n      heightAndWidths.avgContentMain_Left = heightAndWidths.avgContentMain_Left - width;\r\n      heightAndWidths.avgHeaderMain_Left = heightAndWidths.avgHeaderMain_Left - width;\r\n      heightAndWidths.avgContentHhandle_Left = heightAndWidths.avgContentHhandle_Left - width;\r\n    }\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * todo description\r\n   * \r\n   */\r\n  private getTargetData(curTarget: Element): TargetDataInterface {\r\n\r\n    // set variables\r\n    let draggableTarget: Element = null;\r\n    let count = 0;\r\n    let exit = true;\r\n    let isOk = false;\r\n\r\n    while (exit) {\r\n      // have count, so we dont end up locking browser if anything goes really bad\r\n      count++;\r\n\r\n      // if we dont have target, fail!\r\n      if (!curTarget.parentNode) {\r\n        exit = false;\r\n      } else {\r\n\r\n        // if draggable, and not set, then we set it\r\n        if ((curTarget as HTMLElement).draggable === true && draggableTarget === null) {\r\n          draggableTarget = curTarget;\r\n        }\r\n\r\n        // check if it contains our elements, or continue to next parentNode\r\n        switch (true) {\r\n          case curTarget.nodeName === 'AVG-COL':\r\n          case curTarget.nodeName === 'AVG-TOP-PANEL':\r\n            isOk = true;\r\n            exit = false;\r\n            break;\r\n          default:\r\n            curTarget = (curTarget.parentNode as Element);\r\n            break;\r\n        }\r\n      }\r\n\r\n      // 20 times, we failed!\r\n      if (count > 10) {\r\n        exit = false;\r\n      }\r\n\r\n    }\r\n\r\n    let curColType: string = null;\r\n    let curColNo: number = null;\r\n    let curContext: ColumBindingContextObjectInterface = null;\r\n    let curColumnsArray: ColumBindingContextObjectInterface[] = null;\r\n    let isPanel = false;\r\n\r\n    // if ok, get variables we need\r\n    if (isOk && curTarget.nodeName === 'AVG-COL') {\r\n      curColType = curTarget.attributes.getNamedItem('avg-type').value;\r\n      curColNo = parseInt(curTarget.attributes.getNamedItem('avg-config-col').value, 10);\r\n      curContext = this.vGrid.columnBindingContext['setup' + curColType][curColNo];\r\n      curColumnsArray = this.vGrid.columnBindingContext['setup' + curColType];\r\n    }\r\n\r\n    if (isOk && curTarget.nodeName === 'AVG-TOP-PANEL') {\r\n      isPanel = true;\r\n    }\r\n\r\n    // return super object :-)\r\n    return ({\r\n      draggable: draggableTarget,\r\n      ok: isOk,\r\n      target: curTarget,\r\n      colType: curColType,\r\n      colNo: curColNo,\r\n      context: curContext,\r\n      columnsArray: curColumnsArray,\r\n      panel: isPanel\r\n    } as TargetDataInterface);\r\n\r\n  }\r\n\r\n}\r\n","import { inject, customAttribute, bindable } from 'aurelia-framework';\r\nimport { VGrid } from '../v-grid';\r\nimport { BindingContextInterface, OverrideContextInterface, FilterObjectInterface } from '../../interfaces';\r\n\r\n/**\r\n * Custom attribute \"v-filter-observer\"\r\n * Alternative filter that listen for value changed\r\n * Can be used with custom html\r\n * \r\n */\r\n@customAttribute('v-filter-observer')\r\n@inject(Element, VGrid)\r\nexport class VGridAttributesFilterObserver {\r\n  @bindable private field: string;\r\n  @bindable private operator: string;\r\n  @bindable private converter: string;\r\n  @bindable private value: string;\r\n  private vGrid: VGrid;\r\n  private element: HTMLElement;\r\n  private bindingContext: BindingContextInterface;\r\n  private overrideContext: OverrideContextInterface;\r\n  private attribute: string;\r\n  private filterOperator: string;\r\n  private valueFormater: { fromView: Function; toView: Function };\r\n  private state: number;\r\n\r\n\r\n\r\n  constructor(element: HTMLElement, vGrid: VGrid) {\r\n    this.vGrid = vGrid;\r\n    this.element = element;\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * todo description\r\n   * \r\n   */\r\n  public valueChanged(newValue: any) {\r\n    if (this.attribute && newValue) { // if no attibute we do not want to do anything\r\n        this.updateFilter();\r\n    }\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * todo description\r\n   * \r\n   */\r\n  public bind(bindingContext: BindingContextInterface, overrideContext: OverrideContextInterface): void {\r\n    this.bindingContext = bindingContext;\r\n    this.overrideContext = overrideContext;\r\n    let valueConverter = this.valueConverters(this.converter);\r\n    this.filterOperator = this.operator || '=';\r\n    this.attribute = this.field;\r\n    this.valueFormater = valueConverter || null;\r\n    this.state = 0;\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * todo description\r\n   * \r\n   */\r\n  private getValue(): any {\r\n      return this.valueFormater ? this.valueFormater.fromView(this.value) : this.value;\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * todo description\r\n   * \r\n   */\r\n  private updateFilter(): void {\r\n    let curFilter: FilterObjectInterface[] = this.vGrid.attGridConnector.getCurrentFilter();\r\n    let filterIndex = -1;\r\n\r\n    // get index of filter\r\n    curFilter.forEach((filter: FilterObjectInterface, index: number) => {\r\n      if (filter.attribute === this.attribute) {\r\n        filterIndex = index;\r\n      }\r\n    });\r\n\r\n    if (filterIndex !== -1) {\r\n\r\n      // we found a filter, lets update\r\n      if (this.getValue() === '') {\r\n        curFilter.splice(filterIndex, 1);\r\n      } else {\r\n        curFilter[filterIndex].value = this.getValue();\r\n        curFilter[filterIndex].operator = this.filterOperator;\r\n      }\r\n\r\n    } else {\r\n\r\n      // we didnt find filter, lets add one\r\n      if (this.getValue() !== '') {\r\n        curFilter.push({\r\n          attribute: this.attribute,\r\n          operator: this.filterOperator,\r\n          value: this.getValue()\r\n        });\r\n      }\r\n\r\n    }\r\n\r\n    this.vGrid.attGridConnector.query(this.vGrid.attGridConnector.getCurrentFilter());\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * todo description\r\n   * \r\n   */\r\n  private valueConverters(value: string): { fromView: Function; toView: Function } {\r\n    let valueConverter = this.vGrid.viewResources.getValueConverter.bind(this.vGrid.viewResources);\r\n    return valueConverter(value);\r\n  }\r\n\r\n}\r\n","import { inject, customAttribute, bindable } from 'aurelia-framework';\r\nimport { VGrid } from '../v-grid';\r\nimport { BindingContextInterface, OverrideContextInterface, FilterObjectInterface } from '../../interfaces';\r\n\r\n\r\n/**\r\n * Custom attribute \"v-filter\"\r\n * Logic behind filter in headers\r\n * Used by default by the simple html setup\r\n * Can be used with custom html\r\n * \r\n */\r\n@customAttribute('v-filter')\r\n@inject(Element, VGrid)\r\nexport class VGridAttributesFilter {\r\n  @bindable private field: string;\r\n  @bindable private operator: string;\r\n  @bindable private converter: string;\r\n  @bindable private keydown: string;\r\n  @bindable private key: string;\r\n  private vGrid: VGrid;\r\n  private element: HTMLElement;\r\n  private bindingContext: BindingContextInterface;\r\n  private overrideContext: OverrideContextInterface;\r\n  private attribute: string;\r\n  private filterOn: string;\r\n  private filterOperator: string;\r\n  private valueFormater: { fromView: Function; toView: Function };\r\n  private type: string;\r\n  private state: number;\r\n\r\n\r\n\r\n  constructor(element: HTMLElement, vGrid: VGrid) {\r\n    this.vGrid = vGrid;\r\n    this.element = element;\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * todo description\r\n   * \r\n   */\r\n  public getOperatorName(operator: string): string {\r\n    return this.vGrid.filterOperatorNames[operator];\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * todo description\r\n   * \r\n   */\r\n  public attached(): void {\r\n\r\n    if (this.attribute) { // if no attibute we do not want to do anything\r\n\r\n      this.vGrid.element.addEventListener('filterUpdate', (e: CustomEvent) => {\r\n        if (e.detail.attribute === this.attribute && e.detail.key === this.key) {\r\n          this.filterOperator = e.detail.operator;\r\n          (this.element as HTMLInputElement).placeholder =\r\n            this.getOperatorName(this.filterOperator);\r\n          this.updateFilter(this.vGrid.attGridConnector.getCurrentFilter());\r\n        }\r\n      });\r\n\r\n      this.vGrid.element.addEventListener('filterUpdateValues', () => {\r\n      let curFilter = this.vGrid.attGridConnector.getCurrentFilter();\r\n      curFilter.forEach((f: any) => {\r\n          if (f.attribute === this.attribute  && f.key === this.key) {\r\n            (this.element as HTMLInputElement).value = f.value;\r\n            this.filterOperator = f.operator;\r\n            (this.element as HTMLInputElement).placeholder =\r\n            this.getOperatorName(this.filterOperator);\r\n            }\r\n         });\r\n      });\r\n\r\n      this.vGrid.element.addEventListener('filterTranslation', () => {\r\n          (this.element as HTMLInputElement).placeholder =\r\n            this.getOperatorName(this.filterOperator);\r\n          this.updateFilter(this.vGrid.attGridConnector.getCurrentFilter());\r\n      });\r\n\r\n      this.vGrid.element.addEventListener('filterClearCell', (e: CustomEvent) => {\r\n        if (e.detail.attribute === this.attribute  && e.detail.key === this.key) {\r\n          this.resetValue();\r\n          this.updateFilter(this.vGrid.attGridConnector.getCurrentFilter());\r\n        }\r\n      });\r\n\r\n      this.vGrid.element.addEventListener('filterClearAll', () => {\r\n        this.resetValue();\r\n        this.updateFilter(this.vGrid.attGridConnector.getCurrentFilter());\r\n      });\r\n\r\n      if (this.type !== 'checkbox') {\r\n\r\n        (this.element as HTMLInputElement).placeholder =\r\n          this.getOperatorName(this.filterOperator);\r\n\r\n        // add event listner\r\n        this.element.onkeyup = (e: KeyboardEvent) => {\r\n          if (e.keyCode === 13) {\r\n\r\n            // if they hit enter we need to get filter, update and run query\r\n            this.updateFilter(this.vGrid.attGridConnector.getCurrentFilter());\r\n            this.vGrid.attGridConnector.query(this.vGrid.attGridConnector.getCurrentFilter());\r\n\r\n          } else {\r\n\r\n            // if they did nop hit enter we need to check if keydown is the trigger\r\n            if (this.filterOn === 'onKeyDown') {\r\n              this.updateFilter(this.vGrid.attGridConnector.getCurrentFilter());\r\n              this.vGrid.attGridConnector.query(this.vGrid.attGridConnector.getCurrentFilter());\r\n            }\r\n          }\r\n        };\r\n\r\n      } else {\r\n        // set default!\r\n        (this.element as HTMLInputElement).indeterminate  = true;\r\n        (this.element as HTMLElement).style.opacity = '0.3';\r\n        // is checkbox\r\n        this.element.onclick = () => {\r\n          switch (this.state) {\r\n            case 0:\r\n              this.state = 2;\r\n              this.element.style.opacity = '1';\r\n              (this.element as HTMLInputElement).checked = true;\r\n              (this.element as HTMLInputElement).indeterminate = false;\r\n              break;\r\n            case 2:\r\n              this.state = 3;\r\n              this.element.style.opacity = '1';\r\n              (this.element as HTMLInputElement).indeterminate = false;\r\n              break;\r\n            default:\r\n              (this.element as HTMLInputElement).checked = false;\r\n              this.state = 0;\r\n              this.element.style.opacity = '0.3';\r\n              (this.element as HTMLInputElement).indeterminate = true;\r\n          }\r\n          this.updateFilter(this.vGrid.attGridConnector.getCurrentFilter());\r\n          this.vGrid.attGridConnector.query(this.vGrid.attGridConnector.getCurrentFilter());\r\n        };\r\n\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * todo description\r\n   * \r\n   */\r\n  public bind(bindingContext: BindingContextInterface, overrideContext: OverrideContextInterface): void {\r\n    this.bindingContext = bindingContext;\r\n    this.overrideContext = overrideContext;\r\n\r\n    let valueConverter = this.valueConverters(this.converter);\r\n    this.filterOn = this.keydown === 'true' ? 'onKeyDown' : 'onEnterKey';\r\n    this.filterOperator = this.operator || '=';\r\n    this.attribute = this.field;\r\n    this.valueFormater = valueConverter || null;\r\n    this.type = (this.element as HTMLInputElement).type;\r\n    this.state = 0;\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * todo description\r\n   * \r\n   */\r\n  private getValue(): any {\r\n    if (this.type !== 'checkbox') {\r\n      return this.valueFormater ? this.valueFormater.fromView(\r\n        (this.element as HTMLInputElement).value) : (this.element as HTMLInputElement).value;\r\n    } else {\r\n      if (this.valueFormater && this.state) {\r\n        return this.valueFormater.fromView(this.state ? this.state === 2 ? true : false : '');\r\n      } else {\r\n        return this.state ? this.state === 2 ? true : false : '';\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * todo description\r\n   * \r\n   */\r\n  private resetValue(): void {\r\n    if (this.type !== 'checkbox') {\r\n      (this.element as HTMLInputElement).value = '';\r\n    } else {\r\n      this.state = 0;\r\n      (this.element as HTMLInputElement).checked = false;\r\n    }\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * todo description\r\n   * \r\n   */\r\n  private updateFilter(curFilter: FilterObjectInterface[]): void {\r\n    let filterIndex = -1;\r\n\r\n    // get index of filter\r\n    curFilter.forEach((filter: FilterObjectInterface, index: number) => {\r\n      if (filter.attribute === this.attribute && filter.key === this.key) {\r\n        filterIndex = index;\r\n      }\r\n    });\r\n\r\n    if (filterIndex !== -1) {\r\n\r\n      // we found a filter, lets update\r\n      if (this.getValue() === '') {\r\n        curFilter.splice(filterIndex, 1);\r\n      } else {\r\n        curFilter[filterIndex].value = this.getValue();\r\n        curFilter[filterIndex].operator = this.filterOperator;\r\n      }\r\n\r\n    } else {\r\n\r\n      // we didnt find filter, lets add one\r\n      if (this.getValue() !== '') {\r\n        curFilter.push({\r\n          key : this.key,\r\n          attribute: this.attribute,\r\n          operator: this.filterOperator,\r\n          value: this.getValue()\r\n        });\r\n      }\r\n\r\n    }\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * todo description\r\n   * \r\n   */\r\n  private valueConverters(value: string): { fromView: Function; toView: Function } {\r\n    let valueConverter = this.vGrid.viewResources.getValueConverter.bind(this.vGrid.viewResources);\r\n    return valueConverter(value);\r\n  }\r\n\r\n}\r\n","import {inject, customAttribute} from 'aurelia-framework';\r\nimport {VGrid} from '../v-grid';\r\nimport {BindingContextInterface, OverrideContextInterface } from '../../interfaces';\r\n\r\n\r\n/**\r\n * Custom attribute \"v-image-fix\"\r\n * Clears src of image so it does not lag\r\n * Used by default by the simple html setup\r\n * Can be used with custom html\r\n * \r\n */\r\n@customAttribute('v-image-fix')\r\n@inject(Element, VGrid)\r\nexport class VGridAttributesImageFix {\r\n  private vGrid: VGrid;\r\n  private element: HTMLImageElement;\r\n  private value: string;\r\n  private bindingContext: BindingContextInterface;\r\n  private overrideContext: OverrideContextInterface;\r\n\r\n\r\n\r\n  constructor(element: HTMLImageElement, vGrid: VGrid) {\r\n    this.vGrid = vGrid;\r\n    this.element = element;\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * todo description\r\n   * \r\n   */\r\n  public valueChanged(newValue: string): void {\r\n    newValue = newValue ? newValue : '';\r\n    this.element.src = '';\r\n    this.element.src = this.value || newValue;\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * todo description\r\n   * \r\n   */\r\n  public bind(bindingContext: BindingContextInterface, overrideContext: OverrideContextInterface): void {\r\n    this.bindingContext = bindingContext;\r\n    this.overrideContext = overrideContext;\r\n    this.element.src = '';\r\n    this.element.src = this.value || '';\r\n  }\r\n}\r\n","import { bindable, inject, customAttribute } from 'aurelia-framework';\r\nimport { VGrid } from '../v-grid';\r\nimport { Controller, GroupingElements } from '../../interfaces';\r\n\r\n\r\n/**\r\n * Custom attribute \"v-image-fix\"\r\n * logic behind menu/ adds contextmenu to grid\r\n * Used by default by the simple html setup\r\n * Can be used with custom html\r\n * \r\n */\r\n@customAttribute('v-menu')\r\n@inject(Element, VGrid)\r\nexport class VGridAttributeMenu {\r\n  private element: Element;\r\n  private controller: Controller;\r\n  private raiseEvent: Function;\r\n  private openBinded: EventListenerOrEventListenerObject;\r\n  private checkBinded: EventListenerOrEventListenerObject;\r\n  private callbackBinded: Function;\r\n  private groupingElements: GroupingElements;\r\n\r\n  @bindable private filter: string;\r\n  @bindable private filterkey: string;\r\n  @bindable private sort: string ;\r\n  @bindable private pinned: string;\r\n  @bindable private groupby: string;\r\n  @bindable private groupbytitle: string;\r\n  // @bindable private copypaste: string; //todo\r\n\r\n\r\n\r\n  constructor(element: Element, vGrid: VGrid) {\r\n    this.element = element;\r\n    this.controller = vGrid.controller;\r\n    this.raiseEvent = vGrid.controller.raiseEvent;\r\n    this.groupingElements = vGrid.groupingElements;\r\n\r\n    this.openBinded = this.open.bind(this);\r\n    this.checkBinded = this.check.bind(this);\r\n    this.callbackBinded = this.callback.bind(this);\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * todo description\r\n   * \r\n   */\r\n  public attached(): void {\r\n    this.element.addEventListener('contextmenu', this.openBinded);\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * todo description\r\n   * \r\n   */\r\n  public unbind(): void {\r\n    document.removeEventListener('click', this.checkBinded);\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * todo description\r\n   * \r\n   */\r\n  private check(e: MouseEvent): void {\r\n    let x = (e.target as HTMLElement).classList.contains('avg-menu__link');\r\n    if (!x) {\r\n      this.controller.contextMenu.setDefaults();\r\n      document.removeEventListener('click', this.checkBinded);\r\n    }\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * todo description\r\n   * \r\n   */\r\n  private callback(type: string, option: string, event: MouseEvent): boolean {\r\n    if (type === 'filter') {\r\n      if (option === 'clear') {\r\n        this.raiseEvent('filterClearCell', { attribute: this.filter.replace('rowRef.', ''), key: this.filterkey });\r\n        document.removeEventListener('click', this.checkBinded);\r\n        return true;\r\n      }\r\n\r\n      if (option === 'clearall') {\r\n        this.raiseEvent('filterClearAll', {});\r\n        document.removeEventListener('click', this.checkBinded);\r\n        return true;\r\n      }\r\n\r\n      if (option === 'showall') {\r\n        this.controller.attGridConnector.query(null);\r\n        document.removeEventListener('click', this.checkBinded);\r\n        return true;\r\n      }\r\n    }\r\n\r\n    if (type === 'sort') {\r\n\r\n      let field: string = this.sort;\r\n      let arr: string[] = this.sort.split(';');\r\n      arr.forEach((x: string) => {\r\n          if (x.indexOf('field') !== -1) {\r\n            field = x.replace('field:', '');\r\n          }\r\n      });\r\n\r\n      this.controller.attGridConnector.orderBy({\r\n        attribute: field,\r\n        asc: option === 'desc' ? false : true\r\n      }, event.shiftKey);\r\n      document.removeEventListener('click', this.checkBinded);\r\n      return true;\r\n    }\r\n\r\n    if (type === 'groupby') {\r\n      let groupTitle = this.groupbytitle ? this.groupbytitle : this.groupby;\r\n      this.groupingElements.addGroup(groupTitle, this.groupby);\r\n      this.groupingElements.addToGrouping();\r\n      return true;\r\n    }\r\n\r\n    if (type === 'filterOption') {\r\n\r\n      let field: string = this.filter;\r\n      let arr: string[] = this.filter.split(';');\r\n      arr.forEach((x: string) => {\r\n          if (x.indexOf('field') !== -1) {\r\n            field = x.replace('field:', '');\r\n          }\r\n      });\r\n\r\n      this.raiseEvent('filterUpdate', {\r\n        attribute: field,\r\n        operator: option,\r\n        key: this.filterkey\r\n      });\r\n      document.removeEventListener('click', this.checkBinded);\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * todo description\r\n   * \r\n   */\r\n  private open(e: MouseEvent): void {\r\n    this.check(e);\r\n    document.addEventListener('click', this.checkBinded);\r\n    e.preventDefault();\r\n    if (!this.controller.contextMenu.show) {\r\n      let clickCoords = this.getPosition(e);\r\n      this.controller.contextMenu.openMenu({\r\n        top: clickCoords.y,\r\n        left: clickCoords.x,\r\n        filter: this.filter,\r\n        sort: this.sort,\r\n        pinned: this.pinned,\r\n        groupby: this.groupby,\r\n        callback: this.callbackBinded\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * todo description\r\n   * \r\n   */\r\n  private getPosition(e: MouseEvent): any {\r\n    let posx = 0;\r\n    let posy = 0;\r\n\r\n    if (e.pageX || e.pageY) {\r\n      posx = e.pageX;\r\n      posy = e.pageY;\r\n    } else if (e.clientX || e.clientY) {\r\n      posx = e.clientX + document.body.scrollLeft + document.documentElement.scrollLeft;\r\n      posy = e.clientY + document.body.scrollTop + document.documentElement.scrollTop;\r\n    }\r\n\r\n    return {\r\n      x: posx,\r\n      y: posy\r\n    };\r\n  }\r\n\r\n}\r\n","import { inject, customAttribute } from 'aurelia-framework';\r\nimport { VGrid } from '../v-grid';\r\nimport {\r\n  ResizeShardContextInterface,\r\n  BindingContextInterface,\r\n  OverrideContextInterface,\r\n  ColumnBindingContext,\r\n  ColumBindingContextObjectInterface\r\n} from '../../interfaces';\r\n\r\n\r\n/**\r\n * Custom attribute \"v-resize-col\"\r\n * logic behind resizing of columns\r\n * Used by default by the simple html setup\r\n * Can be used with custom html\r\n * \r\n */\r\n@customAttribute('v-resize-col')\r\n@inject(Element, VGrid)\r\nexport class VGridAttributesResizeCol {\r\n  private vGrid: VGrid;\r\n  private ctx: ResizeShardContextInterface;\r\n  private element: Element;\r\n  private screenX: number;\r\n  private originalWidth: number;\r\n  private column: Element;\r\n  private colType: string;\r\n  private colNo: number;\r\n  private context: ColumBindingContextObjectInterface;\r\n  private columnsArray: ColumBindingContextObjectInterface[];\r\n  private columnBindingContext: ColumnBindingContext;\r\n  private bindingContext: BindingContextInterface;\r\n  private overrideContext: OverrideContextInterface;\r\n  private onmousedownBinded: EventListenerOrEventListenerObject;\r\n  private onmousemoveBinded: EventListenerOrEventListenerObject;\r\n  private onmouseupBinded: EventListenerOrEventListenerObject;\r\n  private originals: number[];\r\n\r\n  private avgContentLeft_Width: number;\r\n  private avgHeaderLeft_Width: number;\r\n  private avgContentMainScroll_Width: number;\r\n  private avgHeaderMain_Left: number;\r\n  private avgContentMain_Left: number;\r\n  private avgContentMain_Right: number;\r\n  private avgHeaderMain_Right: number;\r\n  private avgContentRight_Width: number;\r\n  private avgHeaderRight_Width: number;\r\n  private avgContentHhandle_Right: number;\r\n  private avgContentHhandle_Left: number;\r\n  private avgContentHhandleScroll_Width: number;\r\n  private avgContentMainScrollLeft: number;\r\n  private isLast: boolean;\r\n  private rightColNo: number;\r\n  private rightColNoWidth: number;\r\n\r\n\r\n\r\n  constructor(element: Element, vGrid: VGrid) {\r\n    this.vGrid = vGrid;\r\n    this.ctx = vGrid.resizeAttributeSharedContext;\r\n    this.element = element;\r\n    this.screenX = 0;\r\n    this.originalWidth = 0;\r\n    this.column = this.element;\r\n    while (this.column.nodeName !== 'AVG-COL') {\r\n      this.column = (this.column.parentNode as HTMLElement);\r\n    }\r\n    this.colType = this.column.attributes.getNamedItem('avg-type').value;\r\n    this.colNo = parseInt(this.column.attributes.getNamedItem('avg-config-col').value, 10);\r\n    this.context = vGrid.columnBindingContext['setup' + this.colType][this.colNo];\r\n    this.columnsArray = vGrid.columnBindingContext['setup' + this.colType];\r\n    this.columnBindingContext = vGrid.columnBindingContext;\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * todo description\r\n   * \r\n   */\r\n  public bind(bindingContext: BindingContextInterface, overrideContext: OverrideContextInterface): void {\r\n    this.bindingContext = bindingContext;\r\n    this.overrideContext = overrideContext;\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * todo description\r\n   * \r\n   */\r\n  public attached(): void {\r\n\r\n    // add resize handle\r\n    let resizeHandle = document.createElement('DIV');\r\n    resizeHandle.classList.add('avg-draggable-handler');\r\n\r\n    this.onmousedownBinded = this.onmousedown.bind(this);\r\n    this.onmousemoveBinded = this.onmousemove.bind(this);\r\n    this.onmouseupBinded = this.onmouseup.bind(this);\r\n\r\n    // register onmouse down event\r\n    resizeHandle.onmousedown = (e) => {\r\n      this.ctx.resizing = true;\r\n      this.onmousedown(e);\r\n    };\r\n\r\n    // add\r\n    this.column.appendChild(resizeHandle);\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * todo description\r\n   * \r\n   */\r\n  private onmouseup(): void {\r\n    // remove events\r\n    document.removeEventListener('mousemove', this.onmousemoveBinded);\r\n    document.removeEventListener('mouseup', this.onmouseupBinded);\r\n    this.ctx.resizing = false;\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * todo description\r\n   * \r\n   */\r\n  private onmousemove(e: MouseEvent): void {\r\n    this.updateHeader(e);\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * todo description\r\n   * \r\n   */\r\n  private updateHeader(e: MouseEvent): void {\r\n\r\n    let w = Math.abs(this.screenX - e.screenX);\r\n    if (w % 2 === 0) { // no need for every px...\r\n      requestAnimationFrame(() => {\r\n        let movementX = this.originalWidth - (this.screenX - e.screenX);\r\n        let appendValue = this.originalWidth - movementX;\r\n\r\n        if (this.colType === 'main' && movementX > 10) {\r\n\r\n          this.columnsArray[this.colNo].width = movementX;\r\n          this.vGrid.colConfig[this.colNo].colWidth = this.columnsArray[this.colNo].width;\r\n\r\n          // tslint:disable-next-line:prefer-for-of\r\n          for (let i = 0; i < this.columnsArray.length; i++) {\r\n            if (this.columnsArray[this.colNo].left < this.columnsArray[i].left) {\r\n              this.columnsArray[i].left = this.originals[i] - appendValue;\r\n            }\r\n\r\n          }\r\n          this.vGrid.htmlHeightWidth.avgContentMainScroll_Width = this.avgContentMainScroll_Width - appendValue;\r\n          this.vGrid.htmlHeightWidth.avgContentHhandleScroll_Width = this.avgContentHhandleScroll_Width - appendValue;\r\n        }\r\n\r\n        if (this.colType === 'right' && movementX > 10) {\r\n          this.columnsArray[this.colNo].width = movementX;\r\n          this.vGrid.colConfig[this.colNo].colWidth = this.columnsArray[this.colNo].width;\r\n\r\n          // tslint:disable-next-line:prefer-for-of\r\n          for (let i = 0; i < this.columnsArray.length; i++) {\r\n            if (this.columnsArray[this.colNo].left < this.columnsArray[i].left) {\r\n              this.columnsArray[i].left = this.originals[i] - appendValue;\r\n            }\r\n          }\r\n          this.vGrid.htmlHeightWidth.avgContentRight_Width = this.avgContentRight_Width - appendValue;\r\n          this.vGrid.htmlHeightWidth.avgHeaderRight_Width = this.avgHeaderRight_Width - appendValue;\r\n\r\n          this.vGrid.htmlHeightWidth.avgContentMain_Right = this.avgContentMain_Right - appendValue;\r\n          this.vGrid.htmlHeightWidth.avgHeaderMain_Right = this.avgHeaderMain_Right - appendValue;\r\n          this.vGrid.htmlHeightWidth.avgContentHhandle_Right = this.avgContentHhandle_Right - appendValue;\r\n        }\r\n\r\n        if (this.colType === 'left' && movementX > 10) {\r\n          this.columnsArray[this.colNo].width = movementX;\r\n          this.vGrid.colConfig[this.colNo].colWidth = this.columnsArray[this.colNo].width;\r\n\r\n          // tslint:disable-next-line:prefer-for-of\r\n          for (let i = 0; i < this.columnsArray.length; i++) {\r\n            if (this.columnsArray[this.colNo].left < this.columnsArray[i].left) {\r\n              this.columnsArray[i].left = this.originals[i] - appendValue;\r\n            }\r\n          }\r\n\r\n          this.vGrid.htmlHeightWidth.avgContentLeft_Width = this.avgContentLeft_Width - appendValue;\r\n          this.vGrid.htmlHeightWidth.avgHeaderLeft_Width = this.avgHeaderLeft_Width - appendValue;\r\n\r\n          this.vGrid.htmlHeightWidth.avgContentMain_Left = this.avgContentMain_Left - appendValue;\r\n          this.vGrid.htmlHeightWidth.avgHeaderMain_Left = this.avgHeaderMain_Left - appendValue;\r\n          this.vGrid.htmlHeightWidth.avgContentHhandle_Left = this.avgContentHhandle_Left - appendValue;\r\n        }\r\n\r\n        this.vGrid.controller.udateHorizontalScroller();\r\n\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * todo description\r\n   * \r\n   */\r\n  private onmousedown(e: MouseEvent): void {\r\n\r\n    // get some vars\r\n    this.screenX = e.screenX;\r\n\r\n    this.originalWidth = this.context.width;\r\n\r\n    this.originals = [];\r\n    // tslint:disable-next-line:prefer-for-of\r\n    for (let i = 0; i < this.columnsArray.length; i++) {\r\n      this.originals.push(this.columnsArray[i].left);\r\n    }\r\n\r\n    this.avgContentLeft_Width = this.vGrid.htmlHeightWidth.avgContentLeft_Width;\r\n    this.avgHeaderLeft_Width = this.vGrid.htmlHeightWidth.avgHeaderLeft_Width;\r\n    this.avgContentMainScroll_Width = this.vGrid.htmlHeightWidth.avgContentMainScroll_Width;\r\n    this.avgHeaderMain_Left = this.vGrid.htmlHeightWidth.avgHeaderMain_Left;\r\n    this.avgContentMain_Left = this.vGrid.htmlHeightWidth.avgContentMain_Left;\r\n    this.avgContentMain_Right = this.vGrid.htmlHeightWidth.avgContentMain_Right;\r\n    this.avgHeaderMain_Right = this.vGrid.htmlHeightWidth.avgHeaderMain_Right;\r\n    this.avgContentRight_Width = this.vGrid.htmlHeightWidth.avgContentRight_Width;\r\n    this.avgHeaderRight_Width = this.vGrid.htmlHeightWidth.avgHeaderRight_Width;\r\n    this.avgContentHhandle_Right = this.vGrid.htmlHeightWidth.avgContentHhandle_Right;\r\n    this.avgContentHhandle_Left = this.vGrid.htmlHeightWidth.avgContentHhandle_Left;\r\n    this.avgContentHhandleScroll_Width = this.vGrid.htmlHeightWidth.avgContentHhandleScroll_Width;\r\n\r\n    this.avgContentMainScrollLeft = this.vGrid.htmlCache.avg_content_main.scrollLeft;\r\n\r\n    if (this.colType === 'main') {\r\n      this.isLast = this.vGrid.htmlHeightWidth.avgContentMainScroll_Width === (this.context.left + this.context.width);\r\n    }\r\n    if (this.colType === 'left') {\r\n      let sumContext = this.context.left + this.context.width + this.vGrid.htmlHeightWidth.avgScrollBarWidth;\r\n      let sumGrouping = this.columnBindingContext.setupgrouping * 15;\r\n      this.isLast = this.vGrid.htmlHeightWidth.avgContentLeft_Width === (sumContext + sumGrouping);\r\n    }\r\n    if (this.colType === 'right') {\r\n      let sum = this.context.left + this.context.width + this.vGrid.htmlHeightWidth.avgScrollBarWidth;\r\n      this.isLast = this.vGrid.htmlHeightWidth.avgContentRight_Width === sum;\r\n    }\r\n\r\n    let setupRight = this.vGrid.columnBindingContext.setupright;\r\n    this.rightColNo = 0;\r\n    this.rightColNoWidth = 0;\r\n    setupRight.forEach((col, i) => {\r\n      if (col.left === 0) {\r\n        this.rightColNo = i;\r\n        this.rightColNoWidth = col.width;\r\n      }\r\n    });\r\n\r\n    // register mosemove and mouse up event\r\n    document.addEventListener('mousemove', this.onmousemoveBinded);\r\n    document.addEventListener('mouseup', this.onmouseupBinded);\r\n  }\r\n\r\n}\r\n","import { bindable, inject, customAttribute } from 'aurelia-framework';\r\nimport { VGrid } from '../v-grid';\r\nimport { Controller, BindingContextInterface, OverrideContextInterface } from '../../interfaces';\r\n\r\n\r\n/**\r\n * Custom attribute \"v-resize-col\"\r\n * enablkes checkbox selection\r\n * Used by default by the simple html setup\r\n * Can be used with custom html\r\n * \r\n */\r\n@customAttribute('v-selection')\r\n@inject(Element, VGrid)\r\nexport class VGridAttributesSelection {\r\n  private element: HTMLInputElement;\r\n  private vGrid: VGrid;\r\n  private controller: Controller;\r\n  private bindingContext: BindingContextInterface;\r\n  private overrideContext: OverrideContextInterface;\r\n  @bindable private selected: boolean;\r\n  @bindable private type: string;\r\n\r\n\r\n\r\n  constructor(element: HTMLInputElement, vGrid: VGrid) {\r\n    this.vGrid = vGrid;\r\n    this.controller = vGrid.controller;\r\n    this.element = element;\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * todo description\r\n   * \r\n   */\r\n  public selectedChanged(newValue: boolean): void {\r\n    if (this.type === 'row') {\r\n      (this.element as HTMLInputElement).checked = newValue;\r\n    }\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * todo description\r\n   * \r\n   */\r\n  public bind(bindingContext: BindingContextInterface, overrideContext: OverrideContextInterface): void {\r\n    this.bindingContext = bindingContext;\r\n    this.overrideContext = overrideContext;\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * todo description\r\n   * \r\n   */\r\n  public attached(): void {\r\n\r\n    this.element.checked = this.selected;\r\n    this.element.onclick = () => {\r\n\r\n      // todo, check... think ff had something weird here\r\n      let status = (this.element.checked as any) === 'true' || this.element.checked === true ? true : false;\r\n\r\n      if (status) {\r\n        if (this.type === 'header') {\r\n          this.bindingContext.selection.selectRange(0, this.controller.collectionLength() - 1);\r\n          this.controller.rowClickHandler.updateSelectionOnAllRows();\r\n        }\r\n        if (this.type === 'row') {\r\n          this.bindingContext.selection.select(this.bindingContext.row, true);\r\n          this.controller.rowClickHandler.updateSelectionOnAllRows();\r\n        }\r\n      } else {\r\n\r\n        if (this.type === 'header') {\r\n          this.bindingContext.selection.deSelectAll();\r\n          this.controller.rowClickHandler.updateSelectionOnAllRows();\r\n        }\r\n\r\n        if (this.type === 'row') {\r\n          this.bindingContext.selection.deSelect(this.bindingContext.row);\r\n          this.controller.rowClickHandler.updateSelectionOnAllRows();\r\n        }\r\n      }\r\n\r\n    };\r\n\r\n  }\r\n\r\n}\r\n","import { inject, customAttribute, bindable } from 'aurelia-framework';\r\nimport { VGrid } from '../v-grid';\r\nimport { BindingContextInterface, OverrideContextInterface } from '../../interfaces';\r\n\r\n\r\n/**\r\n * Custom attribute \"v-resize-col\"\r\n * logic behind sorting in grid/sort icons\r\n * Used by default by the simple html setup\r\n * Can be used with custom html\r\n * \r\n */\r\n@customAttribute('v-sort')\r\n@inject(Element, VGrid)\r\nexport class VGridAttributesSort {\r\n  @bindable private field: string;\r\n  @bindable private asc: string;\r\n  private vGrid: VGrid;\r\n  private element: HTMLElement;\r\n  private bindingContext: BindingContextInterface;\r\n  private overrideContext: OverrideContextInterface;\r\n  private attribute: string;\r\n  private sortIcon: HTMLElement;\r\n  private firstTime: boolean = true;\r\n\r\n\r\n\r\n  constructor(element: HTMLElement, vGrid: VGrid) {\r\n    this.vGrid = vGrid;\r\n    this.element = element;\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * todo description\r\n   * \r\n   */\r\n  public bind(bindingContext: BindingContextInterface, overrideContext: OverrideContextInterface): void {\r\n    this.bindingContext = bindingContext;\r\n    this.overrideContext = overrideContext;\r\n    this.attribute = this.field;\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * todo description\r\n   * \r\n   */\r\n  public attached(): void {\r\n    this.sortIcon = document.createElement('i');\r\n    this.sortIcon.innerHTML = this.getSortIconMarkup();\r\n    this.element.appendChild(this.sortIcon);\r\n    this.element.onmousedown = () => {\r\n      this.element.onmouseup = (e) => {\r\n        if (e.button === 0) {\r\n          if (this.firstTime && this.asc === 'false') {\r\n            this.vGrid.attGridConnector.orderBy({ attribute: this.attribute, asc: false }, e.shiftKey);\r\n          } else {\r\n            this.vGrid.attGridConnector.orderBy(this.attribute, e.shiftKey);\r\n          }\r\n        }\r\n      };\r\n      setTimeout(() => {\r\n        this.element.onmouseup = null;\r\n      }, 300);\r\n\r\n    };\r\n\r\n    this.vGrid.element.addEventListener('sortIconUpdate', () => {\r\n      this.sortIcon.innerHTML = this.getSortIconMarkup();\r\n    });\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * todo description\r\n   * \r\n   */\r\n  public detached(): void {\r\n    this.element.removeChild(this.sortIcon);\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * todo description\r\n   * \r\n   */\r\n  private getSortIconMarkup(): string {\r\n\r\n    let markup = ``;\r\n    let isAscHtml = `<svg class=\"icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\">\r\n                        <path d=\"M7.4 6L3 10h1.5L8 7l3.4 3H13L8.5 6h-1z\"/>\r\n                      </svg>`;\r\n    let isDescHtml = `<svg class=\"icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\">\r\n                        <path d=\"M7.4 10L3 6h1.5L8 9.2 11.3 6H13l-4.5 4h-1z\"/>\r\n                      </svg>`;\r\n\r\n    let sortlength: number = this.vGrid.attGridConnector.getCurrentOrderBy().length;\r\n    this.vGrid.attGridConnector.getCurrentOrderBy().forEach((x) => {\r\n      if (x.attribute === this.attribute) {\r\n        this.firstTime = false;\r\n        let block = x.asc === true ? isAscHtml : isDescHtml;\r\n        let main = '';\r\n        if (sortlength > 1) {\r\n          main = `<i class=\"${'avg-fa-sort-number'}\" data-vgridsort=\"${x.no}\"></i>`;\r\n        }\r\n\r\n        markup = block + main;\r\n      }\r\n    });\r\n\r\n    return markup;\r\n  }\r\n\r\n}\r\n","import { inject, noView, customElement, bindable, processContent, TargetInstruction } from 'aurelia-framework';\r\nimport { VGrid } from './v-grid';\r\nimport {\r\n  ViewCompiler,\r\n  ViewResources,\r\n  ColConfigInterface,\r\n  BindingContextInterface,\r\n  CustomTargetInstruction,\r\n  CustomBehaviorInstruction,\r\n  OverrideContextInterface\r\n} from '../interfaces';\r\n\r\n\r\n\r\n/**\r\n * Custom element <v-grid-col>\r\n * This is used for creating the simple html columns\r\n * \r\n */\r\n@noView()\r\n@processContent((\r\n  compiler: ViewCompiler,\r\n  resources: ViewResources,\r\n  element: HTMLElement,\r\n  instruction: CustomBehaviorInstruction) => {\r\n\r\n  // dont use  \r\n  compiler = null;\r\n  resources = null;\r\n\r\n  // check if any header template is added, if so add to instruction for use\r\n  let headerTemplateElement = element.getElementsByTagName('V-HEADER-TEMPLATE')[0];\r\n  let headerTemplateHtml = headerTemplateElement ? headerTemplateElement.innerHTML : null;\r\n  if (headerTemplateHtml !== '') {\r\n    instruction.colHeaderTemplate = headerTemplateHtml;\r\n  }\r\n\r\n  // check if any row template is added, if so add to instruction for use\r\n  let rowTemplateElement = element.getElementsByTagName('V-ROW-TEMPLATE')[0];\r\n  let rowTemplateHtml = rowTemplateElement ? rowTemplateElement.innerHTML : null;\r\n  if (rowTemplateHtml !== '') {\r\n    instruction.colRowTemplate = rowTemplateHtml;\r\n  }\r\n\r\n  // clear the innerhtml, not needed, and we dont want it there messing up stuff\r\n  element.innerHTML = '';\r\n\r\n  // we want to get this css attribute and use if later\r\n  let css = element.getAttribute('col-css');\r\n  if (css) {\r\n    instruction.colCss = css;\r\n  }\r\n\r\n})\r\n@customElement('v-grid-col')\r\n@inject(Element, VGrid, TargetInstruction)\r\nexport class VGridElementColConfig {\r\n  private vGrid: VGrid;\r\n  private element: Element;\r\n  private colRowTemplate: string;\r\n  private colHeaderTemplate: string;\r\n  private colCss: string;\r\n  private bindingContext: BindingContextInterface;\r\n  private overrideContext: OverrideContextInterface;\r\n\r\n  @bindable({ attribute: 'col-width' }) private colWidth: number;\r\n  @bindable({ attribute: 'col-field' }) private colField: string;\r\n  @bindable({ attribute: 'col-header-name' }) private colHeaderName: string;\r\n  @bindable({ attribute: 'col-sort' }) private colSort: string;\r\n  @bindable({ attribute: 'col-pin-left' }) private colPinLeft: boolean;\r\n  @bindable({ attribute: 'col-pin-right' }) private colPinRight: boolean;\r\n  @bindable({ attribute: 'col-filter' }) private colFilter: string;\r\n  @bindable({ attribute: 'col-filter-top' }) private colFilterTop: boolean;\r\n  @bindable({ attribute: 'col-add-label-attributes' }) private colAddLabelAttributes: string;\r\n  @bindable({ attribute: 'col-add-filter-attributes' }) private colAddFilterAttributes: string;\r\n  @bindable({ attribute: 'col-add-row-attributes' }) private colAddRowAttributes: string;\r\n  @bindable({ attribute: 'col-type' }) private colType: string;\r\n  @bindable({ attribute: 'col-filter-menu' }) private colFilterMenu: string;\r\n  @bindable({ attribute: 'col-label-menu' }) private colLabelMenu: string;\r\n  @bindable({ attribute: 'col-row-menu' }) private colRowMenu: string;\r\n  @bindable({ attribute: 'col-hidden' }) private colHidden: boolean;\r\n  @bindable({ attribute: 'col-drag-drop' }) private colDragDrop: string;\r\n  @bindable({ attribute: 'col-resizeable' }) private colResizeable: string;\r\n  @bindable({ attribute: 'col-display-edit' }) private colDisplayEdit: string;\r\n\r\n\r\n\r\n  constructor(element: Element, vGrid: VGrid, targetInstruction: CustomTargetInstruction) {\r\n    this.vGrid = vGrid;\r\n    this.element = element;\r\n    this.colRowTemplate = targetInstruction.elementInstruction.colRowTemplate;\r\n    this.colHeaderTemplate = targetInstruction.elementInstruction.colHeaderTemplate;\r\n    this.colCss = targetInstruction.elementInstruction.colCss;\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * When bind runs we get the bindable attributes & template markup if any from <v-grid-col>\r\n   * We add this to the vGrid class colConfig to use later when grid is generated\r\n   * \r\n   */\r\n  public bind(bindingContext: BindingContextInterface, overrideContext: OverrideContextInterface): void {\r\n    this.bindingContext = bindingContext;\r\n    this.overrideContext = overrideContext;\r\n\r\n    this.vGrid.colConfig.push(({\r\n      colWidth: this.colWidth ? this.colWidth * 1 : 100,\r\n      colRowTemplate: this.colRowTemplate,\r\n      colHeaderTemplate: this.colHeaderTemplate,\r\n      colField: this.colField,\r\n      colPinLeft: this.checkBool(this.colPinLeft),\r\n      colPinRight: this.checkBool(this.colPinRight),\r\n      colHeaderName: this.colHeaderName,\r\n      colFilterMenu: this.colFilterMenu,\r\n      colLabelMenu: this.colLabelMenu,\r\n      colRowMenu: this.colRowMenu,\r\n      colHidden: this.checkBool(this.colHidden),\r\n      colDragDrop: this.colDragDrop,\r\n      colResizeable: this.colResizeable,\r\n      colAddLabelAttributes: this.colAddLabelAttributes,\r\n      colAddFilterAttributes: this.colAddFilterAttributes,\r\n      colAddRowAttributes: this.colAddRowAttributes,\r\n      colSort: this.colSort,\r\n      colDisplayEdit: this.colDisplayEdit,\r\n      colFilter: this.colFilter,\r\n      colFilterTop: this.checkBool(this.colFilterTop),\r\n      colCss: this.colCss,\r\n      colType: this.colType || 'text'\r\n    } as ColConfigInterface));\r\n  }\r\n\r\n\r\n  /**\r\n   * Checks bool value and return real boolean\r\n   * \r\n   */\r\n  private checkBool(value: string | boolean): boolean {\r\n    if (typeof value === 'string') {\r\n      value = value.toLowerCase();\r\n    }\r\n\r\n    switch (true) {\r\n      case value === 'true':\r\n      case value === true:\r\n        value = true;\r\n        break;\r\n      case value === 'false':\r\n      case value === false:\r\n        value = false;\r\n        break;\r\n      default:\r\n        value = false;\r\n        break;\r\n    }\r\n    return value;\r\n  }\r\n\r\n}\r\n","import { inject, noView, customElement, processContent, TargetInstruction } from 'aurelia-framework';\r\nimport { VGrid } from './v-grid';\r\nimport { ViewCompiler, ViewResources, CustomTargetInstruction, CustomBehaviorInstruction } from '../interfaces';\r\n\r\n/**\r\n * Custom element <v-grid-contextmenu>\r\n * This is used for creating custom menus markup\r\n * \r\n */\r\n@noView()\r\n@customElement('v-grid-contextmenu')\r\n@processContent((\r\n  compiler: ViewCompiler,\r\n  resources: ViewResources,\r\n  element: Element,\r\n  instruction: CustomBehaviorInstruction) => {\r\n\r\n  // dont use  \r\n  compiler = null;\r\n  resources = null;\r\n\r\n  instruction.menuTemplates = {};\r\n  let template: any;\r\n  let templateHTML: any;\r\n\r\n  // Check if any templates are added, if so add to instruction for use\r\n  template = element.getElementsByTagName('V-MENU-CLOSE')[0];\r\n  templateHTML = template ? template.innerHTML : null;\r\n  if (templateHTML !== '') {\r\n    instruction.menuTemplates.close = templateHTML;\r\n  }\r\n\r\n  template = element.getElementsByTagName('V-MENU-PINNED')[0];\r\n  templateHTML = template ? template.innerHTML : null;\r\n  if (templateHTML !== '') {\r\n    instruction.menuTemplates.pinned = templateHTML;\r\n  }\r\n\r\n  template = element.getElementsByTagName('V-MENU-GROUPBY')[0];\r\n  templateHTML = template ? template.innerHTML : null;\r\n  if (templateHTML !== '') {\r\n    instruction.menuTemplates.groupby = templateHTML;\r\n  }\r\n\r\n  template = element.getElementsByTagName('V-MENU-SORT')[0];\r\n  templateHTML = template ? template.innerHTML : null;\r\n  if (templateHTML !== '') {\r\n    instruction.menuTemplates.sort = templateHTML;\r\n  }\r\n\r\n  template = element.getElementsByTagName('V-MENU-FILTER')[0];\r\n  templateHTML = template ? template.innerHTML : null;\r\n  if (templateHTML !== '') {\r\n    instruction.menuTemplates.filter = templateHTML;\r\n  }\r\n\r\n  template = element.getElementsByTagName('V-MENU-FILTER-OPTIONS')[0];\r\n  templateHTML = template ? template.innerHTML : null;\r\n  if (templateHTML !== '') {\r\n    instruction.menuTemplates.filterOptions = templateHTML;\r\n  }\r\n\r\n  template = element.getElementsByTagName('V-MENU-ALL')[0];\r\n  templateHTML = template ? template.innerHTML : null;\r\n  if (templateHTML !== '') {\r\n    instruction.menuTemplates.all = templateHTML;\r\n  }\r\n\r\n  // clear the innerhtml, not needed, and we dont want it there messing up stuff\r\n  element.innerHTML = '';\r\n\r\n})\r\n@inject(Element, VGrid, TargetInstruction)\r\nexport class VGridContextmenu {\r\n  private element: Element;\r\n  private vGrid: VGrid;\r\n  private customMenuTemplates: any;\r\n\r\n\r\n\r\n  constructor(element: Element, vGrid: VGrid, targetInstruction: CustomTargetInstruction) {\r\n    this.element = element;\r\n    this.vGrid = vGrid;\r\n    this.customMenuTemplates = targetInstruction.elementInstruction.menuTemplates;\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Add the templates to vGrid class for use later when we generate the grid\r\n   * \r\n   */\r\n  public bind(): void {\r\n    this.vGrid.customMenuTemplates = this.customMenuTemplates;\r\n  }\r\n\r\n}\r\n","import { inject, noView, customElement, processContent, TargetInstruction } from 'aurelia-framework';\r\nimport { VGrid } from './v-grid';\r\nimport { ViewCompiler, ViewResources, CustomTargetInstruction, CustomBehaviorInstruction } from '../interfaces';\r\n\r\n\r\n\r\n/**\r\n * Custom element <v-grid-footer>\r\n * This is used for creating custom footer markup\r\n * \r\n */\r\n@noView()\r\n@customElement('v-grid-footer')\r\n@processContent((\r\n  compiler: ViewCompiler,\r\n  resources: ViewResources,\r\n  element: Element,\r\n  instruction: CustomBehaviorInstruction) => {\r\n\r\n  // dont use  \r\n  compiler = null;\r\n  resources = null;\r\n\r\n  // get html markup, this will be added to our viewport when we create it\r\n  instruction.template = element.innerHTML;\r\n  element.innerHTML = '';\r\n\r\n})\r\n@inject(Element, VGrid, TargetInstruction)\r\nexport class VGridFooter {\r\n  private element: Element;\r\n  private vGrid: VGrid;\r\n  private template: string;\r\n\r\n\r\n\r\n  constructor(element: Element, vGrid: VGrid, targetInstruction: CustomTargetInstruction) {\r\n    this.element = element;\r\n    this.vGrid = vGrid;\r\n    this.template = targetInstruction.elementInstruction.template;\r\n\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * add the markup to vgrid class for use later when generating the grid\r\n   * \r\n   */\r\n  public bind(): void {\r\n    this.vGrid.footerTemplate = this.template;\r\n  }\r\n\r\n}\r\n","import { inject, noView, customElement, processContent, TargetInstruction } from 'aurelia-framework';\r\nimport { VGrid } from './v-grid';\r\nimport { ViewCompiler, ViewResources, CustomTargetInstruction, CustomBehaviorInstruction } from '../interfaces';\r\n\r\n\r\n\r\n/**\r\n * Custom element <v-grid-group-element>\r\n * This is used for creating custom grouping element \r\n * The ones in the top panel\r\n * \r\n */\r\n@noView()\r\n@customElement('v-grid-group-element')\r\n@processContent((\r\n  compiler: ViewCompiler,\r\n  resources: ViewResources,\r\n  element: Element,\r\n  instruction: CustomBehaviorInstruction) => {\r\n\r\n  // dont use  \r\n  compiler = null;\r\n  resources = null;\r\n\r\n  // get html markup, this will be added to our viewport when we create it\r\n  instruction.rowTemplate = element.innerHTML;\r\n  element.innerHTML = '';\r\n\r\n})\r\n@inject(Element, VGrid, TargetInstruction)\r\nexport class VGridGroupElement {\r\n  private element: Element;\r\n  private vGrid: VGrid;\r\n  private rowTemplate: string;\r\n\r\n\r\n\r\n  constructor(element: Element, vGrid: VGrid, targetInstruction: CustomTargetInstruction) {\r\n    this.element = element;\r\n    this.vGrid = vGrid;\r\n    this.rowTemplate = targetInstruction.elementInstruction.rowTemplate;\r\n\r\n  }\r\n\r\n\r\n  /**\r\n   * add the markup to vgrid class for use later when generating the grid\r\n   * \r\n   */\r\n  public bind(): void {\r\n    this.vGrid.colGroupElement = this.rowTemplate;\r\n  }\r\n\r\n}\r\n","import { inject, noView, customElement, processContent, TargetInstruction } from 'aurelia-framework';\r\nimport { VGrid } from './v-grid';\r\nimport { ViewCompiler, ViewResources, CustomTargetInstruction, CustomBehaviorInstruction } from '../interfaces';\r\n\r\n\r\n\r\n/**\r\n * Custom element <v-grid-group-row>\r\n * This is used for creating custom rows in grouping\r\n * The one holding the group value / full width rows\r\n * \r\n */\r\n@noView()\r\n@customElement('v-grid-group-row')\r\n@processContent((\r\n  compiler: ViewCompiler,\r\n  resources: ViewResources,\r\n  element: Element,\r\n  instruction: CustomBehaviorInstruction) => {\r\n\r\n  // dont use  \r\n  compiler = null;\r\n  resources = null;\r\n\r\n  // get html markup, this will be added to our viewport when we create it\r\n  instruction.rowTemplate = element.innerHTML;\r\n  element.innerHTML = '';\r\n\r\n})\r\n@inject(Element, VGrid, TargetInstruction)\r\nexport class VGridGroupRow {\r\n  private element: Element;\r\n  private vGrid: VGrid;\r\n  private rowTemplate: string;\r\n\r\n\r\n\r\n  constructor(element: Element, vGrid: VGrid, targetInstruction: CustomTargetInstruction) {\r\n    this.element = element;\r\n    this.vGrid = vGrid;\r\n    this.rowTemplate = targetInstruction.elementInstruction.rowTemplate;\r\n\r\n  }\r\n\r\n\r\n  /**\r\n   * add the markup to vgrid class for use later when generating the grid\r\n   * \r\n   */\r\n  public bind(): void {\r\n    this.vGrid.colGroupRow = this.rowTemplate;\r\n  }\r\n\r\n}\r\n","import { inject, noView, customElement, processContent, TargetInstruction } from 'aurelia-framework';\r\nimport { VGrid } from './v-grid';\r\nimport { ViewCompiler, ViewResources, CustomTargetInstruction, CustomBehaviorInstruction } from '../interfaces';\r\n\r\n\r\n\r\n/**\r\n * Custom element <v-grid-loadingscreen>\r\n * This is used for creating custom loading screen\r\n * \r\n */\r\n@noView()\r\n@customElement('v-grid-loadingscreen')\r\n@processContent((\r\n  compiler: ViewCompiler,\r\n  resources: ViewResources,\r\n  element: Element,\r\n  instruction: CustomBehaviorInstruction) => {\r\n\r\n  // dont use  \r\n  compiler = null;\r\n  resources = null;\r\n\r\n  // get html markup, this will be added to our viewport when we create it\r\n  instruction.template = element.innerHTML;\r\n  element.innerHTML = '';\r\n\r\n})\r\n@inject(Element, VGrid, TargetInstruction)\r\nexport class VGridLoadingScreen {\r\n  private element: Element;\r\n  private vGrid: VGrid;\r\n  private template: string;\r\n\r\n\r\n\r\n  constructor(element: Element, vGrid: VGrid, targetInstruction: CustomTargetInstruction) {\r\n    this.element = element;\r\n    this.vGrid = vGrid;\r\n    this.template = targetInstruction.elementInstruction.template;\r\n\r\n  }\r\n\r\n\r\n  /**\r\n   * add the markup to vgrid class for use later when generating the grid\r\n   * \r\n   */\r\n  public bind(): void {\r\n    this.vGrid.loadingScreenTemplate = this.template;\r\n  }\r\n\r\n}\r\n","import { inject, noView, customElement, processContent, TargetInstruction } from 'aurelia-framework';\r\nimport { VGrid } from './v-grid';\r\nimport { ViewCompiler, ViewResources, CustomTargetInstruction, CustomBehaviorInstruction } from '../interfaces';\r\n\r\n\r\n/**\r\n * Custom element <v-grid-row-repeat>\r\n * This is used for creating custom row repeat\r\n * Row repeat is just a full grid with row without no column\r\n * Thisone is useful for when you need to for repeated\r\n * \r\n */\r\n@noView()\r\n@customElement('v-grid-row-repeat')\r\n@processContent((\r\n  compiler: ViewCompiler,\r\n  resources: ViewResources,\r\n  element: Element,\r\n  instruction: CustomBehaviorInstruction) => {\r\n\r\n  // dont use  \r\n  compiler = null;\r\n  resources = null;\r\n\r\n  // check if any header template is added, if so add to instruction for use\r\n  let headerTemplateElement = element.getElementsByTagName('V-HEADER-TEMPLATE')[0];\r\n  let headerTemplateHtml = headerTemplateElement ? headerTemplateElement.innerHTML : null;\r\n  if (headerTemplateHtml !== '') {\r\n    instruction.headerTemplate = headerTemplateHtml;\r\n  }\r\n\r\n  // check if any row template is added, if so add to instruction for use\r\n  let rowTemplateElement = element.getElementsByTagName('V-ROW-TEMPLATE')[0];\r\n  let rowTemplateHtml = rowTemplateElement ? rowTemplateElement.innerHTML : null;\r\n  if (rowTemplateHtml !== '') {\r\n    instruction.rowTemplate = rowTemplateHtml;\r\n  }\r\n\r\n  // if we didnt get anything we use it all\r\n  if (!rowTemplateHtml) {\r\n    instruction.rowTemplate = element.innerHTML;\r\n  }\r\n\r\n  element.innerHTML = '';\r\n\r\n})\r\n@inject(Element, VGrid, TargetInstruction)\r\nexport class VGridElementRowRepeat {\r\n  private element: Element;\r\n  private vGrid: VGrid;\r\n  private rowTemplate: string;\r\n  private headerTemplate: string;\r\n\r\n  constructor(element: Element, vGrid: VGrid, targetInstruction: CustomTargetInstruction) {\r\n    this.element = element;\r\n    this.vGrid = vGrid;\r\n    this.rowTemplate = targetInstruction.elementInstruction.rowTemplate;\r\n    this.headerTemplate = targetInstruction.elementInstruction.headerTemplate;\r\n\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * add the markup to vgrid class for use later when generating the grid\r\n   * \r\n   */\r\n  public bind(): void {\r\n    this.vGrid.colRepeater = true;\r\n    this.vGrid.colRepeatRowTemplate = this.rowTemplate;\r\n    this.vGrid.colRepeatRowHeaderTemplate = this.headerTemplate;\r\n  }\r\n\r\n}\r\n","export * from './interfaces';\r\nconst prefix = './grid';\r\nexport function configure(config: any) {\r\n  config.globalResources(\r\n    prefix + '/attributes/v-filter',\r\n    prefix + '/attributes/v-filter-observer',\r\n    prefix + '/attributes/v-sort',\r\n    prefix + '/attributes/v-image',\r\n    prefix + '/attributes/v-drag-drop-col',\r\n    prefix + '/attributes/v-changed',\r\n    prefix + '/attributes/v-data-handler',\r\n    prefix + '/attributes/v-resize-col',\r\n    prefix + '/attributes/v-menu',\r\n    prefix + '/attributes/v-selection',\r\n    prefix + '/v-grid-row-repeat',\r\n    prefix + '/v-grid-group-row',\r\n    prefix + '/v-grid-group-element',\r\n    prefix + '/v-grid-loadingscreen',\r\n    prefix + '/v-grid-contextmenu',\r\n    prefix + '/v-grid-footer',\r\n    prefix + '/v-grid-col',\r\n    prefix + '/v-grid'\r\n  );\r\n}\r\n"]}